%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: GEO_right_Wisconsin_curves.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Katie Linnell
%%CreationDate: 8/31/12
%%BoundingBox: 0 0 276 151
%%HiResBoundingBox: 0 0 275.7773 150.4141
%%CropBox: 0 0 275.7773 150.4141
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 72 8%%BeginData: 9018 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD07FFA8A87D7D59FD045227272720272727202727272027272720%2727272027272720FD0452FD047DA8A8FD50FF5252F827F827F827F827F8%27F827F827FD14522727F827F827F827F827F827F82727527DFD4AFF7D27%272752527D7D7DA8A8A8FD1EFFFD04A87D7D52525227F852FD4AFF7DF8A8%FD31FF52F8FD4AFF2827FD32FF59277DFD48FFA82727FD32FFA8F87DFD48%FFA8277DFD13FF84355A59FD1CFF2752FD48FF7D277DFD11FF590C050C05%0C065AFD07FF0C050CFD10FF2727FD48FF7D27A8FD10FF7E0C0C0C060C0C%0C0684FD06FF060C0CFD10FF5220FD48FF5227A8FD10FF0C050C0C847E0D%060C0CFD06FF0C050CFD10FF522784FD47FF52F8FD10FFA80C0C06AFFFFF%A90D59FD07FF0C0C06FD10FF7D27A8FD47FFF827FD10FF350C050DFFFF35%593559358484847E84FF0C050CFD10FF7D277DFD47FF2752FD10FF5A0C0C%59FFFF0C060C0C0C595A0C0C06FF0C0C06FD10FFA8277DFD47FFF852FD10%FF590C062FFFFF060C050C0659350C060CFF0C060CFD10FF84277DFD47FF%2752FD10FFA9060C0CA9FFFFAF0C060C84AF84A884FF060C0CFD10FFA8F8%52FD47FFF852FD11FF0C050C0659590C050C06FD06FF0C050CFD10FFA827%27FD47FF2752FD11FF840C0C0C06FD040CAFFD06FF060C0CFD10FFA82052%FD47FFF852FD12FFA835060C050C0CA8FD07FF0D0C0DFD10FFA82752FD47%FF2752FD15FF8484A8FD1CFFA82752FD47FFF852FD34FF7D277DFD47FF27%52FD34FFA8277DFD47FFF827FD34FF7D277DFD06FF7DF82727FF5227F827%A827F8277DFD33FF5227FD34FF7DF8A8FD06FFF87D52277D5252A8A88427%7D5227FD33FF2727A8FD1BFFA8AFA8FD15FF52277DFD05FFA82753FFA8A8%27527D7D5327FF7DF8FD33FF7D27A8FFFFAFFFA8FD09FFA8AF84AFA8FFAF%FFFFFFAFA97E8459847E8484FD06FFAF848484AFFD07FF5220FD06FFA820%7D27277D522752597D27FF7D27A82752FD30FF7D277D84598459845984A8%FFFFAF8484598459845984598459A8A884598459845984598459847E847E%845984598459845984598484FF2727FD06FFA827597DF87D5252FFFF5927%A87DF8FFA8A8FD30FFA8F8845A8459845A8459845A8459845A8459845A84%59845A8459845A8459845A8459845A8459845A8459845A8459845A845984%5A84595252FD07FF275252277D52277D7DA8F87D2727FD33FFA827528459%845984598459845984598459845984598459845984598459845984598459%84598459845984598459845984598459845984F87DFD07FFA8525227A852%522752FF7D2752A8FD34FF27527E8459847E8459847E8459847E8459847E%8459847E8459847E8459847E8459847E8459847E8459847E8459847E8459%847E847D277DFD49FF5227845984598459847D8459845984598459845984%5984598459847D8484845984598459A85984598459845984598459845984%597DF8A8FD49FF7D2759845A8459847D52A8277D8459845A8459845A8459%A87D7D52A8277D7D7D59597D5227275252A88459845A8459845A847DA952%27FD4AFFA8F8595984847D52A8275352A8F8527D8459845984597D52A852%277D2752FFFF7DF8A8285252FF52A87D5984847D7D52537D52272752FD07%FFFD05A8FFA8A8A8FF7D7DA8A87DFD07A87DFD04A8FFA8A87DFD08A8FD1D%FF522E8452527D7DA87D7E52A852527D7DFF7E847E7DA82752FF7D275284%2E7D27277D275227A8277DFF2EA87D52527D27FF20A8277EFD07FFA8207D%522752A827A8FD042752272727205252272027277D207DA8275227272720%7D272720A8FD1DFF5227595252275227A87DA87D527DF8527D27F8522752%7D527D5252A8277DA82727A8A85227A8F827FF2752527D7D2727A8277D27%A8FD07FFA8275952F8277D27A827277D52A884277DFF5252FF7DF8FFA827%59A8F87DFF5252FF5927FD20FFA8277E27FF277DF87D52A8A85252277D52%277D527D27A87D27277DA8272727A852A827F87D5227F8A8525252277D7D%FD045227FD08FFA8277D5227277DF8A8522752FFFFA8F87DFF5252FF7D27%FFA8277DA8277DFF5252FF7DF85252FD1FFF27277D5327522727A8F827F8%527D7D525227A85227F87D5252277D7D2752277D277D277D275252282752%53527D7D5228FFF87DFD08FF7D277D52275227277DFF522727FFA82753FF%5252FF7DF8FF7D277DA8F87DFF5227FF7D27537DFD1FFF5227277DA87D20%277DA8277D527D20522727275227277D7DA8527DA852AF847E0C0C597D7D%7D2EFF277D7DFF277D27527D27A8FD08FFA8277D52527D2720A827525227%A8A8207DFF5252FF7D27FFA8277D7D277DFF5252FF7D20FD21FFA8F827F8%2752527D7D527D2727522752FF7D2727FFFFFFF8A87D59050C060C050C06%0C5252F8277D27A852A852A884272727FD09FF84277D5252FFF8278427F8%2727FFA82759FF5252FF7DF8FFFF27F827F8FFFF5252FF7D27F827A8FD1F%FF52527D522E0C0C2E845227F87D52275252277D52527D7D280C0C0C060C%0C0C060C0C0C27277D27F8A8522E0C0D0C2EF8A8FD0AFFA8FFA8A8FFFFA8%FFA87D7DFFFFFFA8FFFFFFA8FFA8A8FFFFA8847DFFFFFFA8A8FFFFA8A8A8%FD20FF7D27270C050C050C050C2752FFFF7EA82752527D5252050C050C05%0C050C050C050C050C28A8272E050C050C050CF827A8FD50FF2727060C0C%0C060C0C0C2E7DFD05277D7E350C0C060C0C0C060C0C0C060C0C0C060C2E%0C060C0C0C060C282759FD51FF7DF82E050C060C050C060C050C050C050C%060C050C060C050C060C050C060C050C060C050C060C050C060C0527F8AF%FD51FFA827270C060C0C0C060C0C0C060C0C0C060C0C0C060C0C0C060C0C%0C060C0C0C060C0C0C060C0C0C060C0C2EF87DFD53FF5227270C050C050C%050C050C050C050C050C050C050C050C050C050C050C050C050C050C050C%050C050C2727A8FD0BFF7E0C050C050C050C050C050C050C050C050C050C%050C050C050C050C050C050C050C050C050C7EFD22FF2727060C0C0C060C%0C0C060C0C0C060C0C0C060C0C0C060C0C0C060C0C0C060C0C0C060C0C0C%060C282752FD0CFFA80C0C060C0C0C060C0C0C060C0C0C060C0C0C060C0C%0C060C0C0C060C0C0C060C0C0C060C0C84FD22FF7DF828050C060C050C06%0C050C060C050C060C050C060C050C060C050C060C050C060C050C060C05%2727AFFD0CFF7E0C060C050C060C050C060C050C060C050C060C050C060C%050C060C050C060C050C060C050C84FD22FFA827270C060C0C0C060C0C0C%060C0C0C060C0C0C060C0C0C060C0C0C060C0C0C060C0C0C060C0C2EF87D%FD57FF7D27270C050C050C050C050C050C050C050C050C050C050C050C05%0C050C050C050C050C050CF827A8FD58FF5227270C0C0C060C0C0C060C0C%0C060C0C0C060C0C0C060C0C0C060C0C0C060C0C0C060C27277EFD5AFF27%27050C060C050C060C050C060C050C060C050C060C050C060C050C060C05%0C060C272752FD5BFF84272E060C0C0C060C0C0C060C0C0C060C0C0C060C%0C0C060C0C0C060C0C0C060C062727FD11FFA8FFA8A8FFFFA8FFA8FD15FF%A8FD09FFA8A8FD0DFFA8A8FD13FF52F82E050C050C050C050C2F840C0C0C%AF840C35AF84847E84050C050C050C0527F8A8FD11FF277D7DF8A87D2753%27FD15FF5253FD07FF5227F827FD0AFF7DFFF87DFD13FFA827202E0C0C06%0C0C0C06FFFFA80CFFA8592FFFA835FFA8590C060C0C0C0652277DFD12FF%277D52277D7D52A87DFFA8A8FFFFA8A8FFFFA8A8FFFFA8FFA8FFFFA8A8FF%7DFD04A8FD04FF27527D20FFFFA8A8FFFFA8A8FF5252A87DA8FFA8FFFFFF%A8FFA8FD0CFF7D27270C060C050C0635FF84FF0C2EFF8484FF0C06FFFF84%060C050C0628F852A8FD12FF5252522752527D5927A8272752A8272752A8%272752A82727277D5227277D52597DF82727FFFFFF272752FFFF52272784%5227277D27277EF87D5227277D7D272727FD0DFF7D27270C0C0C060DFD04%FF595A7EFF5AFF8435FF84350C0C0C062E2727A8FD13FF7D52275327277D%7DF8FF27527D8427A8527D27A8F8A827A8F87D27527DFF527D7D277D27FD%04FF522727FFF87D277DF87D52A85252FF277DFD04527D27A8F8FD0EFF52%27270C050C0CFF590C7EAF84FF840C59FFA8FFFFFF050C050CF827A8FD14%FF7DF8277D27F8A87D27A87D27275327A87D5327A8277D27A82753A82727%7D527D7DF87DF8FFFFFF527D5227A82752527D27537DA85227FFF87D2752%52525327A827FD0FFF2827270C060C0C0C060C0C0C060C0C0C060C0C0C06%0C0C0C27277DFD15FFA82727FF2027FF7D20A8277D20A8275227A8275227%A827A8207D275220A8527D7D277D27FFFFFF52275227FF275227A8275227%FF5252A8277D7D2752527D27A820FD10FF2727270C050C060C050C060C05%0C060C050C060C050C272759FD17FF59A8FF7D59FFA87DFF7D52A8FF7D52%A8A87D52A8A87DA87D84A8527DFD04A859A87DFFFFFFA87D52A8FFA8527D%A8A8527DFFA852A87DA8A87D52AF847DA87DFD10FFA82727270C060C0C0C%060C0C0C060C0C0C060C0C0C272752FD69FFA82727270C050C050C050C05%0C050C050C050C272752FD6CFF2727270C0C0C060C0C0C060C0C0C060C27%2752FD6DFFA82727270C060C050C060C050C060C002752FD1BFF52527DFF%527EFD4FFF5227270C0C0C060C0C0C062E272753FD1BFF53275227A8277D%FD0BFF7D53FD43FF5227F82E050C050C0527F8277DFD1CFF5227A8527DF8%5252A8A85252A8A85252537D27277D7D5252FF277D52FD3CFF7D27272720%522727207DFD1EFF5252FFFFFF27525252A8527D27A8275220A85252A827%7D27A82727A8FD3DFFA87D5227F8527DA8FD1FFF5252FFA8AFF87D52527D%52F8278427A827845252A8F827F87DF87DFD65FF52277D27A8277D525253%277D27A8F8A827A85252A827A852A8277DFD65FFA8272727FFF87D275252%272727A827F827A87DF87D272727FFF87DFD67FFA8FFFFA8A8FFA8FFA8FF%A8A820FD05FFA8FFA8FFFFA8A8FD72FFA827FDFCFFFD35FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 3165 C)
%%CMYKCustomColor: 1 0 0.2800 0.6500 (PANTONE 3165 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">GEO_right_Wisconsin_curves</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2012-08-31T17:00:19-04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-08-31T17:00:19-04:00</xmp:ModifyDate>
         <xmp:CreateDate>2012-08-31T17:00:19-04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>140</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6R+c35o+c9D816F5Q8lQ&#xA;W9xreqxtLIk6hjR34QhSzIi/3bli34YqkbeXP+cs9UNJ9fsNLRv2AYE47fzQW8r/APDYpXf8qX/P&#xA;W8p+kPzJmgqasLWW6puP8kwfdihbH/zjR5tmMbah+Y+oS8a8kWOZqf6rvdH/AIjileP+cULSRHW6&#xA;836jMH+0OCgEHryDO9cULYf+cP8AygAfW1zUHPYosCfrR8U2qf8AQoPkj/q86n99v/1TxW3f9Cg+&#xA;SP8Aq86n99v/ANU8VtZJ/wA4geTShEWt6ir9iwgYfcEX9eK20P8AnEzTYYfTtPNeoQAGoARePv8A&#xA;CrJii3N/zjJ5jhYNp/5iahb8VoqmKWtf9ZLpKD6MUtL+R/512Y/3H/mXcyAKAqTy3YUb9OJkmA+7&#xA;FXHyj/zlbpjVtPNNjqKA1CMY3LCtaH6xbLSvs304qi/y+/NH8zIPzOh8i/mDDawz3Vs8ltJCqBmk&#xA;Ceoh5xu0ZVkjcUpXl92KHuWKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV4B5bVvMf/&#xA;ADlTrl+4DW/l20aOAnfi6RpbEfPlNIcVe/4q7FXYq7FWA+bPzw/L/wAs3j2Nzdve30RKz21iglMb&#xA;A0Ku5KRhh3XlUd8uhglJws2vxwNcz5KXlf8APj8vfMN8lhFczWF3MwSCO+jEQkY7BVdWkSp7AsK4&#xA;ywSCMPaGOZreJ83oeUucgNe17StB0m41bVp/q2n2oUzz8Hk4h3CL8MYdj8TAbDJRiSaDXlyxhHil&#xA;sEu8p+f/ACl5t+tf4ev/AK79S9P61+6mi4ery4f3yR1r6bdMMoGPNji1EMl8JumQZBudirsVfP8A&#xA;/wA5DodC/MbyD5xjAX0rgW11J/xXDMkgU0/mSaTFX0BirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVeA/8AONS/X/OP5ia8xDNc34CHv+9nuJX7D/JxS9+xQ7FXYqwL87/Nl35a/L69ubGR&#xA;ob68dLK2mXZkaapdgRuCI0biR0NDl2CFycLX5jDHtzO34+Dw38kPyksvO0t7qWsvKmkWTrEscRCt&#xA;NOw5Mpcg0VFpWm55DfMnNl4eXN1Wh0gy2T9IR3nH8n/Jcms2p8pea9Kg02YN9cW91CBvQZaUKFSX&#xA;cODsD0I60OzDJKtwfkubT4uL0TjXnIPffKupaTY+VLKOfzHa6slkq2c2r+rEEkkRahWYO68+FOrV&#xA;PU9cxJxJlyp3ODJEYx6hKtrtjn506ppl/wDlP5hNjdw3YjW2EhgkSTjW6ipXiTStMngBExfn9zj9&#xA;oTjLBKjf0/7oME/5xO/6ar/ow/7Gcs1XRo7J/i+H6X0FmI7h2KuxV4n/AM5aacLj8uLO7A+Oy1KJ&#xA;q0r8EkUiEe3xFcUh655cvmv/AC9pd8xJa7tIJyT1rJEreJ8fHFCYYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq8F/wCcQ1d/Kmv3TuWkm1EB69arCrE19+eKS96xQ7FXYq8y/wCcidEu9U/L&#xA;a4ktlLtptxFeyIoqTGgaNz/sVl5H2GX6eVS97r+0sZliv+ab/R+lgH/ONn5g6HpVrqHlvVrqKxM8&#xA;/wBcsp52EcbuyLHJGXaihqRqVqd98t1GMncOJ2bqYxBjI081/MTyZ5f8q3ltZ6Z5ki8wXEgZroW8&#xA;SokAFAgLrLMrM2/w9qb9cuxyJ5inB1GKMDUZcT1TyT+VGo+Z/wAkbPTfrS6fJe6o2rRvLGXrGsZt&#xA;1HEFT8XHkD4ZTPKIz+FOdg0ZyYALr1cX2U7V/wAq7ryD+UfnNbjUI786iLAr6cZj4ejdDrVmrX1M&#xA;McvHMfH7mObRnDhmSbvh+yX7Xf8AOJ3/AE1X/Rh/2M5HVdG3sn+L4fpfQWYjuHYq7FXlX/OTkaN+&#xA;UOpMwqUntGQ+B9dV/UTioZZ+VU3rfln5VenGmk2aUrX7ECpX6eOKspxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV4L/ziBIh8ma3GD8a6iGYezQIB/xE4pL3rFDsVdiq2SOOWNo5FDxuCrow&#xA;BVlIoQQeoOKkW8S82f8AOMGjX99LeaBqR0tJWLNYyxetEpJ3EbBkZV9jyzKjqT1DqsvZYJuJryU/&#xA;K/8Azi7pVnfx3XmDVDqUEbchYwRmFHpuBJIWZip7hQPnjLU9wRi7LANyNvcYYYYIUhhRYoYlCRxo&#xA;AqqqigVQNgAMxXagVsEm86+VofNXli+0CadraK9CBp0UMy+nIsgoDTulMnjnwm2rUYRlgYna/wBd&#xA;sf8Ayv8Ayps/IP6T+rahJffpL0OfqRrHw9D1KU4k1r6uSy5eNq0uk8G97tneVOW7FXYq8s/5ya/8&#xA;lBqv/Ga0/wCohMVDJ/ymjeP8sfKquKE6XaMB7NCrDp7HFWWYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq8D/AOcXJBa6n570VjR7PUEYJQDq80bUp4ekMVe+Yq7FXYq7FXYq7FVks8MQrLIs&#xA;Y8WIX9eNIJAXK6OKqwYeINRilvFXYq7FXYq8a/5yuvUg/K5ITTld6jbxKO/wpJKf+TeKQ9N8mWX1&#xA;HyfoVlx4/VdPtYeO+3pwItN9+3fFCU/mx5zufJvkLVNftI1lvLdY47VJASnqzSLGrMBSoXlyp3pT&#xA;FWFeTbz89oNW8s3urXkfmLy9rtuk+piO3trc6f6yBkAeP02kpzFTQ9Dt3xVIfJPn78xPNOqauk3n&#xA;XTdEi07UWtIbO6tbYyTRhzTgWaM9Bx6HCrtY8/8A5q+YNf8AP8nljWYdH0nyKslbQ2kM73TQerzB&#xA;eVXYFvq0lOO3QU74EvVvyr83XXm/yBo/mG7jWO7vY3FwqCi+pDK8Dsoq1AzRkjfFDK8VdirsVdir&#xA;sVdirsVdirsVdirsVdir5o0LUb7yn+ennyxsiIpL4/W/iHJeMzrPUBu9bnb6csxxBO7RqJmMbDOJ&#xA;PN/mWRuTX8gPgvFR9ygZf4ce5wDnn3pnpn5i6vbLwvEW9QdCf3b/APBKCPwyMsQLZDVyHPdfqP5k&#xA;6rOvGzhSzB6uT6r/AEEgL/wuIwjqmerkeWyRv5m8wuSTqM4r/LIy/qpk+AdzT40+8qkPmzzHC3Jb&#xA;+Un/ACyHH3MDjwDuUZ5jqmR/MTXzavCwi9RhRbgKQ6+9K8fwyHhBt/NTqmMzTTTyGWaRpJG3Z3JY&#xA;n5k5a4xNrre5ubd/Ut5XhkHR42Kn7xiQoJHJO7Xz15lgUKbkTKOglRWP3gBvxys4ot41Mx1Ur/zl&#xA;5hvUMcl0Y4z1WECOvzK/F+OEYwGMtRM9UHp+u6vp0jSWdy8bOKPWjg/NXDDJGIPNjDJKPIplF598&#xA;zo1WulkH8rRRgf8ACqpyHhRbBqZ97zr89PMN55t/wl5cmjVJr3UgiiHl8ZfhCKAk0I9X8cpyQEXM&#xA;0+Yzu+j6bVVRQqgKqiiqNgAOgAytyGB/np5Z1XzJ+WGr6bpURuNQ/czw26/ak9GZJGVf8rgpoO52&#xA;xV4rpk17rX5ieQLrTdG1uzurEWdv5lS4gmW3RrVI4lK/shOMbElgPfCqh5HTy7oOsa9N5t8h6zrF&#xA;6+qSXGmXdtp7SiNFckUZ3h/a3FK4pTS+n8weRPMf5p6fPoWo3jecxM+h3lnbtNEZLgzlKsNvh+t7&#xA;jc/DSmBXoP5a/lBYL5F8pDzNbTxa3oySTRxJPLEIzNdvdosiRsFYrzHIN8sUPWcVdirsVdirsVdi&#xA;rsVdirsVdirsVdir5z/Om0/Qn53eXdaqUttdtDZzED7c0ZMYB/5GQ5PGaIas8bgUymdYbW5upKi3&#xA;s4XuLmQAkJFGKu7UrsMyiQObqowMjQYpd+elt7y0+uQPpGlX0Vz9W1HUIZ1JuLegERgVQ/Fi8Z5K&#xA;T8Lg9QVFJzdzmx0Yrcr7Dz/p4iA12P8ARFwby609ebepA01n6fq0mAVaD1h1298lHKDza8mkkOW7&#xA;KVZWVXUhkcBkYbgqwqCD4EZa4pFLZ54YIZJ53WKGJS8sjkKqqoqSSegGJKgEmgx6/wDzA8vWdiNQ&#xA;LNNYvcQ28dylAkgnjkb1YvtM4haOkqEKy1HiMpObucyGjPUu0Hzcb3zNf+VZo7efW4CsdpJBcpDa&#xA;yzKg9e3SSYH1JRK3BB8IbiTXpkRmLM6MVsUZca/fWvnPTfJ15od9a63qTxiOKQ27KsMhYGfnDLMr&#xA;KnBmNOyncZI5gwjoz1LHNH89+YtW1630Wy0/T7ieS8ktGlTUYQjgSemrxhqScRQmvE8hQgZHxi2H&#xA;Rx7yyey8yaVJ5fh1i/uYNNL3k+nT2lxMgeK6thWRCa8WAUqeQPceIyyOUFx56WQ5bpheXNvYo73s&#xA;qWyRtwd5mEYDFeVCWI347/LJ8QafDl3FLbnzPpMC3JDSTG1t47t/Ticq0U8yQQskhAjf1JZlVaN7&#xA;9AcgcgDbHTTKUeUJ7Xzh+enl1LJml0/RLZr+4DoUaOYJzKsp6MkrRI3+UD1ynJKy52DFwRovqXK2&#xA;5Subq1tYTNdTJBCtA0krBFFdhuxAxVS/S2levHb/AFyD15QGih9VObBhVSq1qajpiqol9ZPPLAlx&#xA;E08ArNEHUug8WUGq/TiqFtvMXl+69b6tqdpP9WBa49KeN/TUbEvxY8R88VaHmTy6SANUtCTsAJ4v&#xA;+asVXNr+goCX1K1UBihJmjFGHVftdRirS+YvL7Biup2hCDk5E8ZAFQKn4ttyBiqvLqmmQ+l6t3DH&#xA;9YHKDnIi8x4pU/EN+2Kof/Evlz/q62f/AEkRf81Yq2/mLy/G7I+p2iOhKsrTxggjYggtiqYAggEG&#xA;oO4IxV2KuxV2KuxV2KuxV49/zlB5emvvy/i1u1BF95eu47pJF+0sUhEb0+TFG/2OKvBta1C5Nhrf&#xA;mGPWbu3vLmK3l0cW8nIPp+pM8dxayUdfTWCSAxtQfE3am+EklEYgbBMdC165tbrXfJusNNrh0mwn&#xA;l8sySSsbm1v7e3C1s2flwXgGdY6GnEcfi6rJL9d1vyVe3Pl2w0GW8uo47WGFNGMZeyt9TkTi9wFc&#xA;I107TMOQMQ5U6stExVF6Hc/mjpPlDW7e3sbmGXlJqeo6lqNqAIvq78ZUt5pY29SaSvJ6t9lSAOpw&#xA;iRDCUIy5hU1fVPO2geX9K80X2pNd3P6QT6lJA6DT72wnt25ACFYjUMkkcocB15AUBxMieaIYox5B&#xA;CT65FoOh3EHkZE1Dy75mht3uLG/lM95Y6gjvH6KRwPDViSOJeMiVOoZQRkWxD6hJolh5Z0XWdFtI&#xA;dT0uX6vaeZbCYSW7jWUMtyrxek0UqUjleNHjPGi0IxVE6TaaDJ5zvvM962saBHayXdzrdlal7a80&#xA;6aX+5jjuSjGQXMkjQqhWNx3+EciqgdBvIdN8w3fmGLQU02z0GIT6VYjlcM99eIF08STyEvI3x/WA&#xA;BQUQ8VGFUv0PUoNJ8o+YtF1nSa3txLBDaXN1buWsuUg+uMtV+CUrFEN6Hb6MCshi1rUdalvQ9hY6&#xA;hp8F5qF9Z3c6SSrYR2FrDG7/AAssc8f1dIQiNUM6r40Yqt0u0vNR0zWPLFlfjVNS8zxaNqeo6jLL&#xA;HCts1WmminMpDzBPWRv3fKhHStRir1f/AJxk0salqnm7z00XpJql41tYLSnGPmZ5QOu3xxj/AGJw&#xA;Ie+Yq8s/5ya/8lBqv/Ga0/6iExUPCvzAt9XXzppusaS1L3y95c0nV0Hci2WEHuPsh+R9hhSGSWEd&#xA;/wCf9f8AzRPliSl1rml6fNaLyC8gRBJJAWJABdVaI17nfFVD8pPLf5f6j5q03QtYs7zy95psbOey&#xA;1PR5wwh1QOknql3Yq6sUevCgFFHEmmBU48kflt5Huvz4836HPpMb6VpUEU2n2paQLE/7k8lIbl1Y&#xA;9TiqD/Lryh5c8weU/wAx59YsUvJdMvr+4sGdnHpS+i55Diy13QdcKEpbyj5ctf8AnF5fM8FikevX&#xA;x+r3d8C/N4l1YgKQTx6Qp0HbAnqyrzvbw3Hmn8lLeZecM1tDHIhqKqyW4I28QcKFlv8Ald5Bb/nI&#xA;S58tNo8R0NNGF0ljyl4ibkg515cq7nvgVjHlrTPLc35i/mHHqvku+82pDq8y2wsFLfVR9ZuQ3Okk&#xA;f95QU6/ZOKX1nHGkcaxoOKIAqjwAFBihdirsVdirsVdirsVQes6VaavpF7pV4vK1v4JLadf8iVSj&#xA;U+g4q+HdOj1Dydr+saZLqk9hq2nPJYtAtlb3ttcRLJy/eJcSKnEsOYqj9jk4QMjQadRqI4o8Rb03&#xA;UdDttWk1S4tryTUGeC6h1G2uUtbiG9jYyTSxgQyxcJHbZOHwgDfrl/5Y97rx2sL+nZZ5j1y4m1B3&#xA;0i1t57+9likXVra1a2vvVWblGqxwv6KylghZooxybYHxpnjMebn4NVDLyO/cyW9/LXzLpvmq8u/O&#xA;Hlq91MXkP6Tvv0RdJbW6+sDNMkzNHKPhkDclV13Hw7UytyLY55a0HTbzW9Se58r61e6JdCaPTLLT&#xA;43nniYuGQrcgBOUagAkxuCD9nocVZfJ5q0vy1f8AlO50DSItIh0RzqGpaLcyvPdXFxPJNbsJpfTA&#xA;WSO2iVgGC8DJsNt7IYzJxtRqoYhvz7mJ3nmm+ls5NOtY4rTTGv31SO2WKJnW4ZmKOZinqExo/AUI&#xA;FANsy44Ih02TtHKTsaa1nzl5q1uH0dV1W5vICVdopJCUZ0XirsooGcLtyO9MsjjiOQcbJqMk+ZP4&#xA;8lPTPMepadDIkEsodFkfT2WRkFvdOgjFyoAI5pHVVPVa1Ug5DLhEt+rkaTWnFsd4r3vfN1p5Avhf&#xA;S3lxB5rugjrcsxRvqLxv9YUyVaRmekfqIeIC0ap48cHhN11egGWNcVjhTnWfNeimHXNH0yyEGj6n&#xA;cpBbvb/ujb6RDMk6wxIwb9/PItZpHY7qOopS2OnkXCydpYo8vUkHmrXLS7vrKfy/ZS6XcJYQaQFW&#xA;ZZprgRx+gZHZY4TzkiojcR7d8cuIQHNOk1ksxO1APs38tPKSeUvI2kaEABPbQBrtl/auJP3kxr3+&#xA;NiB7UyhzmTYqxH81vJF1528lXfl61uUtJrl4XWeVSyj0pVkOy778cVY/pP5PzW/nNdbvruG505vL&#xA;8egXNkFYM/GJI3fkduLBDtirD/Lf/OMeo6Vo/mTTZNeT/cxDFHZXMCOrwvBOJkL7iobjxanjitpz&#xA;5T/JfzlH510TzJ5v122vx5dtVtNNgtImVmWNGjT1XYKduZYnck4qyjy3+W97pH5peY/Ocl5HLba3&#xA;CkUVoqsJIygjFWY7H+6xVAeSPym1Dy5oXnDTZr+Gd/MstxJBIisBF68boA9etOfbFVtt+TTP+Sif&#xA;lzfX6m4jEjJqESHgJTdvdRngSCQOQVhXxxVKPL35M+dpfM3lrVPOGvWt7ZeUolj0m2somR2KABDK&#xA;7BenBSetaU7k4qy2H8vbyP8AN6fz0buM2kumjTxZ8W9QMCp58vs0+HFWI2H5R/mboXmnzNrPljzN&#xA;Y2MXmS+kvJ4prUzMFM0ska1au6+uwNOuKvYbRbhLWFLlxJcKiiaRRQM4A5MB2qcVVcVdirsVdirs&#xA;VdirsVfMP/OVHko6drlh52s4j9XvwLPViv8Av5F/dOaU+1GvHc0+AZKEuE215sQyQMT1eMAgioII&#xA;PQjcZswbeUlExNHmFSCee3mjngkaGeJg8UsZKurKahlYUIIPQ4kIBINhRuUNzdSXc7u9zNX1Zi7c&#xA;m5Di3I135DY+OVHBDucwdoZh/F9gR2i6xrGiM76Rf3Ng7oYme3mkjb0ywcoCpBALAEgdcIwxHRjP&#xA;W5ZCjL9CFkkkkkaSRi8jks7sSSSdySTlrircVdirsVXF2KhSSVWvEV2FetMVW4q9D/5x68lnzT+Y&#xA;iapcRl9I8uBblm6o11X9wvcV5Dn8kzXZZ8Unp9Hg8PGAeZ3L7CypyXYqlvmHzHovl3TH1TWbkWlh&#xA;Gyq8xV3oXPFRxQM259slGJkaDXlyxxx4pcmKf8r3/Kj/AKvy/wDSPdf9Uss/Lz7vucX+UsHf/sZf&#xA;qd/yvf8AKj/q/L/0j3X/AFSx/Lz7vuX+UsHf/sZfqd/yvf8AKj/q/L/0j3X/AFSx/Lz7vuX+UsHf&#xA;/sZfqd/yvf8AKj/q/L/0j3X/AFSx/Lz7vuX+UsHf/sZfqd/yvf8AKj/q/L/0j3X/AFSx/Lz7vuX+&#xA;UsHf/sZfqd/yvf8AKj/q/L/0j3X/AFSx/Lz7vuX+UsHf/sZfqd/yvf8AKj/q/L/0j3X/AFSx/Lz7&#xA;vuX+UsHf/sZfqd/yvf8AKj/q/L/0j3X/AFSx/Lz7vuX+UsHf/sZfqd/yvf8AKj/q/L/0j3X/AFSx&#xA;/Lz7vuX+UsHf/sZfqZzbXMF1bRXMDc4J0WSJxUckcclO++4OVEU5oIIsKmBLsVdirsVdirsVdiqT&#xA;ecvK2n+avLOoaBfj/R76IxiSgJjkG8ci1/aRwGGKvha+0rUtC1i+8v6qnp6hpsrQyLuQQvRlP8pF&#xA;CvsRmZp8n8Lpu09Pv4g+KzMp1DsVdirsVdirsVdirsVUpzOzR21sjSXdy4it40BLM7EKAtO9Tt75&#xA;RnyUK6l2HZ2n458R+mP3vtX8oPIEXkfyRZ6SwB1GX/SdUkFDyuZAOSg7VVAAg+WYD0DNcVdirGfz&#xA;F8l/4y8rT6F9c+oetJHJ9Z9P1qem4anDnH1p/Nk8c+E20anB4sOG6eR/9Cnf9/V/04f9nOZH5ryd&#xA;d/JP9L7P2u/6FO/7+r/pw/7OcfzXkv8AJP8AS+z9rv8AoU7/AL+r/pw/7OcfzXkv8k/0vs/a7/oU&#xA;7/v6v+nD/s5x/NeS/wAk/wBL7P2u/wChTv8Av6v+nD/s5x/NeS/yT/S+z9rv+hTv+/q/6cP+znH8&#xA;15L/ACT/AEvs/a7/AKFO/wC/q/6cP+znH815L/JP9L7P2u/6FO/7+r/pw/7OcfzXkv8AJP8AS+z9&#xA;rv8AoU7/AL+r/pw/7OcfzXkv8k/0vs/a940qx+oaXZ2PP1PqkEcHqU48vTQLypU0rTxzFkbNu2hH&#xA;hiB3IrAydirsVdirsVdirsVdirwj/nJr8r5NU05PO2jxFtU0pAupRIDWa0XfnQdWiqa+KV/lGEGt&#xA;0SiJAg8i+boJkmiWReh6itaHwzZY58Qt5fU4Dinwlfk2hMdD8va3rt21no1lLf3SIZXigUswQEKW&#xA;NO1WAwGQHNlCEpGoi1fRPKHmbXdQm0/SdNmu7y2r9YiRaGPieJ5lqBd9tzglIDmnHilM1EWURZfl&#xA;/wCdb3V7jR7bRbp9StApurcxlTEHHJTIWoq8hutTv2xMwBdpjhmTwgGwim/Kz8xFjeQ+X7z04+XN&#xA;xHUDgSG3HgQcHiR72X5bJ/NLFcm0tO6IhdyFUbknIykALLPFjM5CI5l7T/zjN+WTapqR8+6vD/ol&#xA;oxj0OFxs8q7NPQ9o+i/5VT+zmtnIyNl6nFiGOIiH07kWx2KuxVKfNnmjS/K2gXWu6r6g0+z4eu0S&#xA;eo4EjrGp4jc/E4riqT3f5p+T7XzBoegzXDjUPMMEVzpqhCVaOeojLtX4eRUgVxVC6j+c3kXTo9Ym&#xA;vbmaKDQ71NNv5fRd1Fy4chE4Bi1PSNTTFWcYq7FXYq7FXYqksPnDQpvNs/lOOZjrdtaC/lg4OFEB&#xA;ZU5epTh9qQbVriqdYqx3zt5/8r+StOiv9fuTBFPJ6VvGiNJJI9KkKiiuw6npiqj5G/Mnyn52hu5N&#xA;BuXkksXCXdvNG0UsZavElWHRuJ3HhirKMVcSACSaAbknFWP6r598raZqGiWFzeBp/MUjw6SYVaWO&#xA;V4yit+8QMoFZF3JxVkGKuxV2KuxVplV1KsAysKMp3BB6gjFXx9+ef5US+RdcOs6TAW8qanIaKoqL&#xA;SZtzEfBT1j9vh7VyzHk4Tbj6nTjLGjz6PO1YMoYbgioPsc2IIIsPMzgYmjzD2v8AKq+tfJHlQ+ZL&#xA;m/trNtcnihjuJIzcSJFBKxkjEMbepSTg3JuNPsnrTKco4jXc5uln4UeOwOI138j+ln2k2Fzaee/M&#xA;N3oCWGqeWvNlva3l1Ebr6tccZRIszwkAk8ebSODx+0tCDlRPpF7EOZCJGSRhUoTAPOj+OZ+SD1C1&#xA;0q90jzL5P/L3XxB5gN9HdTNLds0tzG0KB4oros0jhePE/EaU4tsa4iwQZDZjIRIlDFL1XfPnt0K+&#xA;PS9Tt/ymtNI1CJdT1y1l1A3bDVns3SR7i4YXBdGDT8uQbi3WuII476bdEkEYAKuW/wDFXU7+b5hz&#xA;LdKBewZL+V35c6h+YvmdbFKw6DYssuq3q/yV2jQ9Ob0ovhu3amYGbLxHyej0Wl8KNn6i+1tN02x0&#xA;zT7bTrCFbeytI1ht4UFFVEFFAylzUTirsVdirF/zS0k6t+XPmSxUcpJNPuGiWlayRIZEH/BoMVfJ&#xA;8er3GpvpnnOORvT8iQ+XrSVqbcVL16Cv20p9/XFLLLjW9X0v8l9c83aXdNbXuv8Amue4W5RQSYW5&#xA;inxcqjmrHFWRfmF50/MDSPzOuo73XLnQdCNzapot0kKz6WUC/vY7riDIGduvcb7caEFCrceZfzL1&#xA;v8wPNbaX5nh0m18s6rZWkGn3jxQ2ctvJ64kVmZSWkY24NOpqelBQKlfnr8wfzFttR86a9Y6/La2/&#xA;ljWLXT7HSkjjNu8TmQP6oK8mJ4A9e59qKrPPvn/8wYte/MC40vzDcWFjoMenXFnZKkTj/SpLeMry&#xA;dSVA9YsadflilGfmR56/MS11PS9Ql1e80Ty9d6RZTQ6lYQJcW8d9NweRrxAC4VgzKAP8mgPxDChO&#xA;tW85eYo/O3muO31T1ILXyJNqlpLAFEf1sRxMtxFUV3JquBUr/K/z159k86+RbTVddm1Ox8z6Zdz3&#xA;NtNHEojaA3JUqyqGY1txuT3p0xVmf58+V4Nd/wANNZ6zaaV5rsbxpvL0N64VbqXlHyiQGtW9RYqf&#xA;CfA9cVefWHn2TSfKH5javDpEfl/8yrF7ZNbnjlkmjme4uhCZo4pXljQoZGNF+GpB6YpQtv8AmX+a&#xA;Oi6F5ruJLjVprOPSbO503UdYs/QaK6muLa3l9JmTiwP1l2jrWoUHxqqnN9Z+f5/y582x6x5uTUbB&#xA;9HttSt4w8TXyF7ZZZoZ4woKRSepTcmooRSuFCh5Vu9e0Ty/+UcEWqzTW+taizTQuEoluRCotl2rw&#xA;UqW8fiOKpYPzQ/MIakPMh1uU2/8Aiv8AQp0XhH9U+q8eVKceVeO1a179cVVPOXnz8ybC589atY+Y&#xA;5oLPy9rlva2Wn+nHIjJK0oKsWXkEUKNgd+/QYq+n8CuxV2KoHW9E0vXNJutJ1S3W5sLyMxTwv0Kn&#xA;uD1DDqCNwdxir4v/ADP/AC11j8uNd+rTcrny7eOzaXqFK/DWvpyU6SKOo7/aHcZdhy8J8nC1mkGU&#xA;WPrDGAQQCDUHcEZng287KJBouwodirsVTHyd5R13z15hi0HQ0IRqNfXxBMcENaM7Hw8B+0dhmFmz&#xA;XsOTvtDouD1y+r7n2t5I8l6L5N8u22h6RHxghHKaZv7yaUgc5ZD/ADNT6Og2GYzsk+xV2KuxV2Kr&#xA;ZYo5YnikHKORSrqe4IoRirzXSP8AnH/yVpfk/WvKsNzfy6frrwvdzSyQGdTAweP02WFUFGXupxVG&#xA;Xv5JeUrv8u7LyE1xex6PYzfWIp0ki+ss5eSQ83aJkNWlPRB2xVCeYPyF8q635hvtWnvr+C31WaC5&#xA;1bSYZIxa3EtsD6ZdWjZurEn4u5pTFWtZ/IDyhqvmifXZbu+ghvLmG9vtJhlRbSe4t+Qjd14Fv227&#xA;9zSlcVW69/zj95R1nzDe6rPe38NrqlxFearpMUqC2uJoOXFmqhcD941aN3NKYqjNb/JDynrF15mu&#xA;Lm6vo381LbJqCxSQhYxaSRyR+hyibjUwry5cu/TFUJ5h/IPyxrNzHN+ktRsQ1hb6Xfx20kSrdW1r&#xA;w9MS8o2+L92tSPDpiqbTflB5WfUtRv45LqA6lobeW3t4njEUdkyKgMQMbMJFVBQsxHtiqjof5MeV&#xA;9G1by3qlrdXz3Hle2ms9PWWSEo8dx6vIzBYlLMPrDU4le2Ko78xfyw8v+e7Wyj1OW4tLvTZGm0+/&#xA;s3Ec0TNx5ULK4oSinpXYUIxVJdK/ITyZY+Xdc0a4nvdQfzHwOqaldTB7pzE/qRlX48QVk+PdTU/a&#xA;riqnpv5AeUbew1a31G8v9Yn1i0isLi9vJUaWO3gKNEkRCADg0KEEg/ZGKoryt+SPlfQrHW7aa7vd&#xA;Wk1+0XT765vZFaQWyRekkcfBVpxSlCakUFMVa0j8k9C0+30CCTVtSvU8s3z32k+vJCeHJY1EDUi/&#xA;ul9KoC0NSd8VQn/QvvlD/EP6U+u3/wBR/SP6X/QfqJ9S+uVrz48OfH25e1abYqi9Y/I3ynqtp5ht&#xA;bi7v0j8y30Wo3xjkhBSWEsVWKsLUT4zXlyPvir0TFXYq7FXYqlfmbyxofmbRp9H1q1W7sbgfEjbF&#xA;WH2XRhurr2YYq+O/zN/KXzJ+XV6zsj6j5Ylf/RNTRf7vkdo5gPsP/wAK37PcZbiymPucTVaOOUd0&#xA;mIRyRyLyjYMviMzozEuTz+bBPGakG2dUUsxCqOpPTwwykBzY48cpmoiynXkbyD5o/MDVP0fokPpW&#xA;CMBf6rKCIYk+fdiOiDc+wqcw8ubi2HJ3uk0Ax+qW8vufY35f/l95e8jaCmk6PF1o93dvT1p5afbk&#xA;I/4VegGY7sGTYq7FXYq7FXYqknnjzGfLXlHVteWITvp1tJPHCTQM4HwAkduRFcVeTeQ/zM/N+51n&#xA;yzPr+n2t75d81IzxzWEE3KzHIqhlcBlWpoaMTseoIOKp/wDlF+cUHmSzuYPMuo2Frrj6rPY6bYow&#xA;iklijjiZCI2dmJLOwr3Ow3xVmtx+YXki319fL82t2ketM6xCxMq+p6j/AGUPYMaii9cVW3v5i+Q7&#xA;G+ksL3X7C2vYZVt5baW4jSRJH+yrKTUdMVSpvzd8pD8wk8kLOpvzGS9yXQRC458BajfkZj140xVN&#xA;tP8AzD8jalrTaJYa5Z3OqqWX6pFKrOWQEsFpsxUA1piqrpPnrydrGofo7StZtL6/Cu7W1vKskgWM&#xA;hXLKpNKFqb4qnmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVSu7S1vLaW1u4UuLaZSk0Eqh0dTsV&#xA;ZWqCMVeN+Z/+cV/I2pXpvdFu7nQJWJLQwUlgBPXgjkOtfAPT2xVC6P8A84m+UYbtZ9b1e+1hEPw2&#xA;+1uhHg5Uu9P9VlxUPZtG0XSdF0+LTtJtIrGxgFIreBQiDxNB1J7k7nFUbirsVdirsVdirsVYh+b9&#xA;jd335Y+ZLW0iaa4exlMcSAszcByIUDcmi9MVeU/lN+cwMHkbyLoNl9fnaAw65K6yIbURsSxXbiw4&#xA;VavTp3xV5toNtbrpHl+8WJRdt59aI3AA9TgiWrKvLrQMxNMKW/P+rXV55l1syNb6bcW3mqMHSYLb&#xA;jPIEMwW8luj8e2wArRi9abDFUR+Z13oia7+aFlcxc9ZvdR01dIIjLt8Du06qwB4llp88Ch6ZqI0/&#xA;S/8AnIGwN9Etu+peXFhsWeOhkv2kPHiaf3vJevXCh5l+UtpazeYfIto2pTNqthqV276Nb2C+pbcX&#xA;jMjXVyZo34Oq7fAeNGFPEJL17/nGTQtJj8t6trItYzqs+q3cLXpRTKIk9OkSvTkErvSvXFD2jFXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUPb/o71pPq3o+t/u30&#xA;+PLr+1x36+OKqa/obivH6tx9T4KcKept0/yunviqpcfo6rfWPRrVefqceu/Gte/WmKvMPyv/AEb/&#xA;AMrS/M3hz9f67Yet6vHhz43HD0+/j1xV6lN9V5xev6fPl+550ry/ya9/liq2L6h9Zk9L0vrP+7eH&#xA;H1P9lTf78VXWv1T0z9V9P0+Rr6XHjy7/AGe+KquKuxV2KuxV2KuxV2KuxV2Kv//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:F77F11740720681192B0BBA012516A30</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F77F11740720681192B0BBA012516A30</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:DA9302C0D7D9DE119BC785C5761EF779</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:684e5ec2-05e2-487e-924a-7ead4dee494d</stRef:instanceID>
            <stRef:documentID>xmp.did:465983847AECE1118A3FC6151A858425</stRef:documentID>
            <stRef:originalDocumentID>uuid:DA9302C0D7D9DE119BC785C5761EF779</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:802054A74863DF119EBFCFCFE4C1520B</stEvt:instanceID>
                  <stEvt:when>2010-05-19T09:24:54-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:812054A74863DF119EBFCFCFE4C1520B</stEvt:instanceID>
                  <stEvt:when>2010-05-19T09:26:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:822054A74863DF119EBFCFCFE4C1520B</stEvt:instanceID>
                  <stEvt:when>2010-05-19T09:27:14-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:832054A74863DF119EBFCFCFE4C1520B</stEvt:instanceID>
                  <stEvt:when>2010-05-19T09:28:31-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:842054A74863DF119EBFCFCFE4C1520B</stEvt:instanceID>
                  <stEvt:when>2010-05-19T09:29:15-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:852054A74863DF119EBFCFCFE4C1520B</stEvt:instanceID>
                  <stEvt:when>2010-05-19T09:30:05-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:862054A74863DF119EBFCFCFE4C1520B</stEvt:instanceID>
                  <stEvt:when>2010-05-19T09:31:49-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F990E20B4B63DF119EBFCFCFE4C1520B</stEvt:instanceID>
                  <stEvt:when>2010-05-19T09:33:01-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA90E20B4B63DF119EBFCFCFE4C1520B</stEvt:instanceID>
                  <stEvt:when>2010-05-19T09:33:39-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB90E20B4B63DF119EBFCFCFE4C1520B</stEvt:instanceID>
                  <stEvt:when>2010-05-19T09:34:33-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC90E20B4B63DF119EBFCFCFE4C1520B</stEvt:instanceID>
                  <stEvt:when>2010-05-19T09:35:08-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD90E20B4B63DF119EBFCFCFE4C1520B</stEvt:instanceID>
                  <stEvt:when>2010-05-19T09:36:09-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE90E20B4B63DF119EBFCFCFE4C1520B</stEvt:instanceID>
                  <stEvt:when>2010-05-19T09:37:12-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF90E20B4B63DF119EBFCFCFE4C1520B</stEvt:instanceID>
                  <stEvt:when>2010-05-19T09:38:17-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:435983847AECE1118A3FC6151A858425</stEvt:instanceID>
                  <stEvt:when>2012-08-22T13:01:21-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:445983847AECE1118A3FC6151A858425</stEvt:instanceID>
                  <stEvt:when>2012-08-22T13:01:47-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:465983847AECE1118A3FC6151A858425</stEvt:instanceID>
                  <stEvt:when>2012-08-22T13:02:25-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681192B0BBA012516A30</stEvt:instanceID>
                  <stEvt:when>2012-08-31T17:00:19-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>5.003208</stDim:w>
            <stDim:h>3.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 3165 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 3165 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>27.999899</xmpG:yellow>
                           <xmpG:black>64.999405</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -150.414 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 150.414 li
275.777 150.414 li
275.777 0 li
cp
clp
[1 0 0 1 0 0 ]ct
142.029 49.7739 mo
142.05 48.4897 141.837 47.3599 140.305 47.3599 cv
138.503 47.3599 138.503 49.7939 138.503 52.479 cv
138.503 56.8101 138.925 57.5771 140.575 57.5771 cv
141.053 57.5771 141.57 57.4619 142.012 57.3071 cv
142.012 54.2407 li
140.439 54.2407 li
140.439 52.1138 li
144.904 52.1138 li
144.904 59.1279 li
144.12 59.2817 142.146 59.5879 140.995 59.5879 cv
136.126 59.5879 135.57 57.5771 135.57 52.3237 cv
135.57 48.835 135.745 45.29 140.477 45.29 cv
143.314 45.29 145.079 46.8809 144.904 49.7739 cv
142.029 49.7739 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
147.151 59.3599 mo
147.151 45.519 li
154.704 45.519 li
154.704 47.6479 li
150.046 47.6479 li
150.046 51.0601 li
154.34 51.0601 li
154.34 53.186 li
150.046 53.186 li
150.046 57.23 li
154.855 57.23 li
154.855 59.3599 li
147.151 59.3599 li
cp
f
162.948 52.438 mo
162.948 48.8931 162.738 47.3599 161.107 47.3599 cv
159.479 47.3599 159.268 48.8931 159.268 52.438 cv
159.268 55.9868 159.479 57.5181 161.107 57.5181 cv
162.738 57.5181 162.948 55.9868 162.948 52.438 cv
156.335 52.438 mo
156.335 48.7788 156.335 45.29 161.107 45.29 cv
165.882 45.29 165.882 48.7788 165.882 52.438 cv
165.882 56.063 165.882 59.5879 161.107 59.5879 cv
156.335 59.5879 156.335 56.063 156.335 52.438 cv
f
171.339 54.1279 mo
167.554 54.1279 li
167.554 52.1738 li
171.339 52.1738 li
171.339 54.1279 li
cp
f
135.703 82.3672 mo
135.703 75.8369 li
135.703 68.5278 li
138.6 68.5278 li
138.6 75.6099 li
138.6 82.3672 li
135.703 82.3672 li
cp
f
140.787 82.3672 mo
140.787 68.5278 li
144.695 68.5278 li
148.378 78.1118 li
148.415 78.1118 li
148.415 68.5278 li
151.117 68.5278 li
151.117 82.3672 li
147.304 82.3672 li
143.527 72.2485 li
143.49 72.2485 li
143.49 82.3672 li
140.787 82.3672 li
cp
f
157.045 82.5967 mo
153.459 82.5967 152.789 80.4893 152.941 78.0942 cv
155.836 78.0942 li
155.836 79.416 155.894 80.5283 157.483 80.5283 cv
158.464 80.5283 158.943 79.895 158.943 78.9551 cv
158.943 76.4634 153.115 76.3091 153.115 72.188 cv
153.115 70.022 154.149 68.2974 157.677 68.2974 cv
160.496 68.2974 161.894 69.563 161.701 72.457 cv
158.886 72.457 li
158.886 71.4224 158.711 70.3682 157.541 70.3682 cv
156.604 70.3682 156.048 70.8853 156.048 71.8442 cv
156.048 74.4692 161.873 74.2393 161.873 78.5913 cv
161.873 82.1748 159.248 82.5967 157.045 82.5967 cv
f
171.923 68.5278 mo
171.923 70.8286 li
168.699 70.8286 li
168.699 82.3672 li
165.808 82.3672 li
165.808 70.8286 li
162.586 70.8286 li
162.586 68.5278 li
171.923 68.5278 li
cp
f
172.999 82.3672 mo
172.999 75.8369 li
172.999 68.5278 li
175.892 68.5278 li
175.892 76.064 li
175.892 82.3672 li
172.999 82.3672 li
cp
f
186.304 68.5278 mo
186.304 70.8286 li
183.08 70.8286 li
183.08 82.3672 li
180.187 82.3672 li
180.187 70.8286 li
176.967 70.8286 li
176.967 68.5278 li
186.304 68.5278 li
cp
f
196.731 68.5278 mo
196.731 78.3418 li
196.731 80.4106 195.563 82.5967 192.036 82.5967 cv
188.854 82.5967 187.321 80.9478 187.321 78.3418 cv
187.321 68.5278 li
190.215 68.5278 li
190.215 78.1499 li
190.215 79.856 190.944 80.5278 191.999 80.5278 cv
193.262 80.5278 193.836 79.6826 193.836 78.1499 cv
193.836 68.5278 li
196.731 68.5278 li
cp
f
207.065 68.5278 mo
207.065 70.8286 li
203.846 70.8286 li
203.846 82.3672 li
200.95 82.3672 li
200.95 70.8286 li
197.733 70.8286 li
197.733 68.5278 li
207.065 68.5278 li
cp
f
208.141 82.3672 mo
208.141 68.5278 li
215.694 68.5278 li
215.694 70.6548 li
211.036 70.6548 li
211.036 74.0669 li
215.33 74.0669 li
215.33 76.1958 li
211.036 76.1958 li
211.036 80.2388 li
215.848 80.2388 li
215.848 82.3672 li
208.141 82.3672 li
cp
f
64.0215 3.36328 mo
62.1025 3.36328 61.0605 3.37646 61.0537 3.37646 cv
60.8794 3.38135 li
60.8315 3.38135 li
60.7837 3.38135 59.7437 3.36816 57.8223 3.36816 cv
51.9946 3.36816 38.4233 3.49512 24.0884 4.56641 cv
23.1055 4.64209 22.1152 4.72217 21.0923 4.80908 cv
19.9644 4.88525 18.8633 4.96729 17.7495 5.10742 cv
14.2046 5.44434 10.6704 5.83545 7.2666 6.31006 cv
7.17725 6.58301 6.24756 9.38818 5.32031 14.2061 cv
4.34229 19.2803 3.36523 26.5703 3.36328 35.4263 cv
3.36328 35.4634 li
3.36523 41.3555 3.80664 47.9443 4.96143 55.0342 cv
4.97754 55.0303 4.98926 55.0254 5.00537 55.0181 cv
6.52344 54.5542 9.23145 54.0811 9.56348 54.0215 cv
13.7007 53.2744 17.1523 52.7144 21.0034 54.9331 cv
22.4146 55.7461 24.1187 56.1152 25.7305 56.1895 cv
28.9336 56.3384 31.0723 54.894 33.9585 53.9502 cv
36.2773 53.1924 38.8843 53.0703 41.2954 53.0532 cv
44.2417 53.0352 47.1846 53.3345 50.0825 53.8521 cv
50.9644 54.0112 57.8584 55.9873 58.0166 55.7412 cv
61.9443 49.6055 71.8076 51.2544 77.4307 53.1294 cv
81.3555 54.4385 86.0356 55.3081 90.0903 54.1523 cv
93.5435 53.1641 97.9263 49.9331 100.862 54.166 cv
104.731 53.5015 108.912 54.0913 112.674 55.0283 cv
113.209 55.1602 115.673 55.6851 116.638 56.2095 cv
116.648 56.2153 116.656 56.2212 116.668 56.228 cv
117.974 48.6831 118.476 41.6782 118.479 35.458 cv
118.479 35.4424 li
118.479 35.4185 118.479 35.3882 118.48 35.3501 cv
118.467 18.1885 114.797 6.96143 114.581 6.30908 cv
95.2705 3.62109 72.1323 3.36426 64.0215 3.36328 cv
0 0 0 0 cmyk
f
106.683 81.3198 mo
105.297 81.583 103.95 81.8867 102.656 82.2109 cv
95.4717 84.0166 89.9727 86.5068 89.4824 86.7314 cv
89.4595 86.7412 89.4478 86.749 89.4478 86.749 cv
89.0498 86.3525 88.6577 85.9678 88.2686 85.5889 cv
86.8086 84.1709 85.4106 82.8818 84.1426 81.7549 cv
83.8564 81.5029 83.5796 81.2578 83.3076 81.022 cv
82.4746 80.2939 81.7178 79.6509 81.0464 79.0938 cv
80.9937 79.0488 80.9365 79.001 80.8848 78.958 cv
80.5146 78.6489 80.1807 78.3779 79.8735 78.1279 cv
79.5635 77.8779 79.2827 77.6528 79.0474 77.4658 cv
78.7607 77.2397 78.5376 77.0659 78.3765 76.9419 cv
78.1934 76.8008 78.0903 76.7246 78.0903 76.7246 cv
77.6235 76.9419 li
74.6558 78.3311 li
74.0737 78.4619 li
71.9355 78.9409 li
69.9556 79.3867 li
69.9556 79.3867 69.5444 79.458 69.3975 79.4648 cv
69.2578 79.4717 68.8857 79.4258 68.7915 79.4077 cv
67.8657 79.2368 66.9048 79.2759 65.9717 79.438 cv
65.6494 79.4946 65.3345 79.5659 65.0225 79.6479 cv
64.3428 79.8267 63.6914 80.0547 63.0864 80.3066 cv
63.0308 80.3638 62.9185 80.4106 62.9136 80.376 cv
62.1694 80.6948 61.5156 81.0347 60.9897 81.3311 cv
60.5264 81.5938 60.1655 81.8228 59.9443 81.9668 cv
59.7788 82.0747 59.6875 82.1387 59.6875 82.1387 cv
58.9727 82.7061 58.2598 83.2197 57.5474 83.6982 cv
57.3716 83.8154 57.1968 83.9307 57.0195 84.0439 cv
55.6177 84.9453 54.2275 85.6787 52.8696 86.2725 cv
52.0918 86.6123 51.3257 86.9092 50.5708 87.1611 cv
42.4517 89.8896 35.8335 87.9072 34.4844 87.4404 cv
34.3174 87.3838 34.1587 87.2881 34.1196 87.2568 cv
34.0063 87.165 33.8975 87.0791 33.7856 86.9873 cv
33.6338 86.8662 33.4844 86.7393 33.3354 86.6221 cv
31.5586 85.2334 29.8267 84.2178 28.1558 83.4951 cv
27.8125 83.3486 27.4756 83.21 27.1377 83.085 cv
27.0244 83.0439 26.9146 83.0068 26.8027 82.9678 cv
26.6748 82.9229 26.5474 82.8799 26.4204 82.8408 cv
24.3765 82.1758 22.4458 81.938 20.6714 81.9746 cv
20.6646 81.9746 li
20.2305 81.9849 19.8115 82.02 19.3965 82.061 cv
19.0327 82.0957 18.6826 82.146 18.3345 82.2031 cv
17.7725 82.292 17.2285 82.4033 16.7124 82.5361 cv
16.2607 82.6514 15.8228 82.7803 15.4087 82.9209 cv
14.6338 83.1826 13.9443 83.4756 13.3164 83.7725 cv
17.2324 92.9932 22.5498 102.558 29.7334 112.19 cv
29.7876 112.255 29.7563 112.22 29.8086 112.286 cv
29.8457 112.337 29.9048 112.409 29.9746 112.505 cv
30.1226 112.695 30.3394 112.972 30.6167 113.327 cv
31.1733 114.034 31.9766 115.046 32.9736 116.259 cv
34.9707 118.685 37.7388 121.927 40.8276 125.175 cv
43.9224 128.423 47.3335 131.687 50.6147 134.149 cv
53.9414 136.644 57.0288 138.302 59.6406 138.403 cv
60.6724 138.446 li
60.8945 138.454 li
61.1777 138.446 li
62.1943 138.403 li
63.5156 138.343 64.9424 137.913 66.4717 137.167 cv
67.9814 136.427 69.5767 135.382 71.2207 134.159 cv
76.1025 130.481 81.3027 125.042 85.2666 120.511 cv
89.1187 116.108 91.7783 112.62 92.0884 112.218 cv
100.05 101.548 105.74 90.9561 109.747 80.8267 cv
108.711 80.9688 107.685 81.1279 106.683 81.3198 cv
/0 
<<
/Name (PANTONE 3165 C)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 0 .279999 .649994 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
13.3271 83.8271 mo
13.3271 83.8271 li
13.3213 83.8135 13.3174 83.7998 13.311 83.7881 cv
13.3174 83.7998 13.3213 83.8135 13.3271 83.8271 cv
0 0 0 .9 cmyk
f
118.479 35.4419 mo
118.479 35.458 li
118.475 44.1929 117.52 54.4526 114.678 65.6177 cv
114.673 65.6299 114.67 65.6431 114.667 65.6558 cv
114.651 65.7227 114.634 65.793 114.615 65.8599 cv
114.611 65.875 114.608 65.8887 114.604 65.9028 cv
114.593 65.9497 114.576 66.001 114.563 66.0488 cv
114.354 66.8599 114.134 67.6748 113.905 68.4946 cv
113.903 68.5029 113.901 68.5078 113.899 68.5127 cv
113.659 69.374 113.404 70.2368 113.142 71.106 cv
113.138 71.1128 113.137 71.1196 113.134 71.126 cv
113.122 71.167 li
112.802 72.2188 112.46 73.2808 112.105 74.3467 cv
112.048 74.5137 111.993 74.6816 111.938 74.8477 cv
111.702 75.5439 111.456 76.2407 111.206 76.9419 cv
111.058 77.3579 110.914 77.772 110.759 78.187 cv
110.758 78.1899 110.758 78.1919 110.755 78.1948 cv
110.743 78.231 110.729 78.2656 110.716 78.3008 cv
110.405 79.1348 110.085 79.9727 109.753 80.814 cv
109.747 80.8267 li
105.739 90.9561 100.05 101.548 92.0889 112.218 cv
91.7778 112.62 89.1191 116.108 85.2671 120.511 cv
81.3018 125.042 76.103 130.481 71.2212 134.159 cv
69.5771 135.382 67.9819 136.427 66.4712 137.167 cv
64.9429 137.913 63.5161 138.343 62.1948 138.403 cv
61.1777 138.446 li
60.895 138.454 li
60.6719 138.446 li
59.6401 138.403 li
57.0288 138.302 53.9409 136.644 50.6147 134.149 cv
47.334 131.687 43.9219 128.423 40.8271 125.175 cv
37.7388 121.927 34.9712 118.685 32.9741 116.259 cv
31.9771 115.046 31.1738 114.034 30.6162 113.327 cv
30.3389 112.972 30.123 112.694 29.9751 112.505 cv
29.9038 112.409 29.8447 112.337 29.8091 112.286 cv
29.7568 112.22 29.7881 112.255 29.7339 112.19 cv
22.2832 102.202 16.8281 92.2842 12.875 82.749 cv
12.873 82.7471 12.873 82.7451 12.8711 82.7432 cv
12.812 82.5996 12.7549 82.458 12.6958 82.3125 cv
12.6929 82.3027 12.6899 82.2949 12.686 82.2852 cv
11.9492 80.4888 11.2661 78.708 10.6338 76.9419 cv
9.90576 74.9131 9.24121 72.9038 8.64014 70.9199 cv
8.62891 70.8848 li
4.64111 57.6797 3.36621 45.5537 3.36377 35.4629 cv
3.36377 35.4258 li
3.36621 26.5698 4.3418 19.2798 5.31982 14.207 cv
6.24707 9.38867 7.17676 6.58301 7.26611 6.31104 cv
10.6709 5.83594 14.2041 5.44385 17.75 5.10791 cv
18.8638 4.9668 19.9648 4.88477 21.0918 4.81006 cv
22.1147 4.72266 23.105 4.64209 24.0889 4.56689 cv
38.4238 3.49463 51.9941 3.36768 57.8228 3.36768 cv
59.7432 3.36768 60.7832 3.38086 60.832 3.38086 cv
60.8799 3.38086 li
61.0542 3.37598 li
61.061 3.37598 62.103 3.36279 64.021 3.36279 cv
72.1328 3.36475 95.271 3.62109 114.58 6.30908 cv
114.798 6.96191 118.467 18.188 118.481 35.3496 cv
118.479 35.3887 118.479 35.418 118.479 35.4419 cv
117.749 5.18262 mo
117.086 3.25781 li
115.075 2.98291 li
95.4458 .25293 72.2178 .00585938 64.021 0 cv
62.1089 0 61.0181 .0146484 61.0142 .0146484 cv
60.8398 .0180664 li
60.832 .0180664 li
60.8291 .0180664 59.7358 .00390625 57.8228 .00390625 cv
51.9429 .00390625 38.3071 .133789 23.8369 1.21289 cv
22.8369 1.28906 21.834 1.37109 20.8389 1.45605 cv
19.7197 1.53174 18.5552 1.6167 17.3818 1.76709 cv
13.8379 2.10107 10.2451 2.49805 6.76807 2.98291 cv
5.78174 3.11963 li
4.75098 3.25977 li
4.09473 5.18799 li
4.00684 5.44678 .0151367 17.1958 0 35.396 cv
0 35.4629 li
-.000976563 47.1128 1.66309 61.417 7.06396 76.9419 cv
11.2129 88.8662 17.5649 101.513 27.0649 114.234 cv
27.0962 114.275 li
27.1172 114.302 li
27.5742 114.899 32.356 121.146 38.3921 127.493 cv
41.5659 130.819 45.0781 134.196 48.6001 136.845 cv
52.124 139.448 55.6401 141.554 59.4932 141.765 cv
60.5352 141.806 li
60.835 141.819 li
60.897 141.819 li
61.3062 141.808 li
62.3408 141.765 li
64.2881 141.671 66.147 141.065 67.9468 140.188 cv
69.7388 139.31 71.4858 138.149 73.2358 136.851 cv
78.501 132.876 83.8271 127.265 87.8921 122.618 cv
89.9209 120.294 91.6299 118.216 92.8359 116.71 cv
93.439 115.956 93.917 115.349 94.2441 114.927 cv
94.4092 114.716 94.5342 114.552 94.624 114.438 cv
94.6108 114.429 li
94.6978 114.343 li
94.7739 114.243 li
104.274 101.519 110.63 88.8701 114.778 76.9419 cv
120.135 61.5391 121.817 47.3389 121.84 35.7378 cv
121.84 35.7368 li
121.842 35.4258 li
121.838 17.2139 117.834 5.43604 117.749 5.18262 cv
0 0 0 1 cmyk
f
8.62939 70.8853 mo
8.6333 70.8975 8.63623 70.9082 8.63916 70.9194 cv
8.63623 70.9082 8.6333 70.8975 8.62939 70.8853 cv
0 0 0 0 cmyk
f
12.6963 82.3125 mo
12.7554 82.458 12.8125 82.5996 12.8711 82.7432 cv
12.8721 82.7451 12.8721 82.7471 12.8745 82.749 cv
12.8101 82.5938 12.7471 82.4414 12.686 82.2852 cv
12.6904 82.2939 12.6934 82.3027 12.6963 82.3125 cv
f
63.0864 80.3071 mo
63.6914 80.0552 64.3423 79.8271 65.0225 79.6479 cv
64.8022 79.4341 64.5967 79.2134 64.4106 78.9829 cv
63.9683 79.4224 63.5273 79.8662 63.0864 80.3071 cv
0 0 0 1 cmyk
f
14.9072 82.8584 mo
14.4751 82.7822 13.9595 82.6055 13.5225 82.6191 cv
13.2632 82.6787 13.0532 82.708 12.8711 82.7432 cv
13.0142 83.0879 13.1602 83.4326 13.3071 83.7783 cv
13.9375 83.4775 14.6304 83.1846 15.4082 82.9219 cv
15.2373 82.8994 15.061 82.8838 14.9072 82.8584 cv
f
19.6802 65.5552 mo
20.4399 66.5303 20.9961 67.7251 21.5029 68.8481 cv
21.7881 69.479 22.0161 70.1431 22.1094 70.8301 cv
22.1953 71.4829 22.8643 71.3833 23.4243 71.125 cv
23.9873 70.8682 24.415 70.2871 24.8472 69.8604 cv
25.3032 69.4092 26.3223 68.6802 26.4033 68.0723 cv
26.5483 67.0122 25.5791 66.334 24.9624 65.6191 cv
24.4653 66.1182 23.9663 66.6162 23.4692 67.1123 cv
23.2993 66.189 23.4453 65.105 23.5283 64.0303 cv
23.5361 63.9092 23.5493 63.7842 23.5552 63.6611 cv
21.8071 63.752 20.3491 64.3281 19.2603 64.9551 cv
19.3403 65.0762 19.4224 65.188 19.5029 65.3052 cv
19.562 65.3882 19.6182 65.4771 19.6802 65.5552 cv
f
102.647 74.3472 mo
102.306 75.3213 101.961 76.2974 101.621 77.272 cv
101.318 78.127 101.019 78.9863 100.717 79.8423 cv
100.685 79.9409 100.647 80.0752 100.604 80.209 cv
100.579 80.2993 100.547 80.3813 100.515 80.4609 cv
100.504 80.4829 100.5 80.5083 100.489 80.5293 cv
100.483 80.541 100.477 80.5513 100.469 80.563 cv
100.459 80.583 100.448 80.6001 100.438 80.6182 cv
100.402 80.6753 100.364 80.7231 100.32 80.7461 cv
100.32 80.7974 100.289 80.8604 100.242 80.9233 cv
100.233 80.9321 100.237 80.938 100.229 80.9482 cv
100.222 80.959 100.205 80.9731 100.192 80.9854 cv
100.132 81.0552 100.062 81.1289 99.9727 81.207 cv
99.9482 81.228 99.9204 81.248 99.8945 81.272 cv
99.8193 81.334 99.7383 81.397 99.6572 81.459 cv
99.6206 81.4893 99.5854 81.5142 99.5454 81.541 cv
99.4795 81.5923 99.4136 81.6401 99.3516 81.686 cv
99.2065 81.7891 99.0757 81.8853 98.9995 81.9482 cv
98.9053 82.0264 97.9736 82.6787 98.0366 82.5576 cv
98.4883 81.6924 98.9443 80.8262 99.3975 79.96 cv
99.6572 79.4634 101.301 75.9512 102.272 74.3472 cv
102.582 73.8359 102.821 73.5142 102.926 73.5513 cv
102.833 73.8174 102.742 74.082 102.647 74.3472 cv
95.7773 82.6006 mo
95.8442 82.8936 96.4736 83.9365 96.3037 84.0635 cv
95.7217 83.7725 95.2773 83.2979 95.0454 82.6904 cv
94.6724 81.7012 94.8154 80.5933 94.8174 79.563 cv
96.2925 80.0371 97.2417 78.7554 98.0884 77.7764 cv
98.2847 77.5532 99.1982 76.8711 99.0493 76.5752 cv
98.8667 76.2134 98.6855 75.8521 98.5044 75.4932 cv
98.4326 75.3462 98.0967 74.7661 97.9155 74.3472 cv
97.7437 73.9531 97.7104 73.7021 98.1704 74.1001 cv
98.2495 74.166 98.3345 74.25 98.4224 74.3472 cv
99.0576 75.0303 99.8774 76.3662 99.1084 76.9634 cv
98.1494 78.877 95.2085 80.082 95.7773 82.6006 cv
73.0977 75.3101 mo
72.8442 74.9551 72.5483 74.6401 72.2295 74.3472 cv
72.1226 74.25 72.0225 74.144 71.9097 74.0532 cv
71.5864 73.7993 71.1333 73.4102 70.7183 73.3452 cv
70.3823 73.29 70.4863 73.1802 70.3066 73.105 cv
68.4805 72.2871 66.2925 72.085 65.1387 70.3403 cv
64.8433 69.895 64.6533 69.3872 64.5405 68.8701 cv
64.3442 67.9902 64.7617 68.7983 64.8667 69.0713 cv
65.2437 70.0532 65.6353 70.9199 66.5903 71.46 cv
67.1553 71.7803 69.0996 72.186 69.5303 71.4531 cv
69.7534 71.0762 69.3745 70.5181 69.2417 70.1533 cv
68.7266 68.7241 67.0596 67.7603 65.9106 66.8413 cv
66.2036 66.5161 66.4966 66.189 66.7886 65.8643 cv
67.0376 66.5464 66.9946 66.5352 67.6846 66.647 cv
68.4663 66.77 69.2485 66.896 70.0293 67.022 cv
70.3457 67.0713 71.1973 67.0474 71.4556 67.248 cv
71.7427 67.4771 71.8936 68.4551 72.0244 68.813 cv
71.2754 68.75 69.9473 68.2632 69.2783 68.7739 cv
68.6543 69.2471 69.7593 70.5513 69.7715 71.1899 cv
70.0435 72.2212 70.2383 73.1162 71.3506 73.293 cv
71.6426 73.3384 72.6284 73.3252 72.7363 73.6211 cv
72.8232 73.8643 72.9126 74.106 72.9995 74.3472 cv
73.1343 74.7144 73.2695 75.0811 73.4023 75.4492 cv
73.5356 75.8149 73.1484 75.3833 73.0977 75.3101 cv
62.4565 66.043 mo
62.3105 66.4829 61.7515 66.543 61.6533 66.8394 cv
61.4297 67.5083 61.2046 68.1763 60.9814 68.8442 cv
60.5684 68.6621 61.0146 67.563 60.5166 67.1372 cv
60.1167 66.7939 58.9355 65.8423 60.1997 66.3252 cv
60.3594 66.3853 61.5063 66.8032 61.5806 66.5752 cv
61.6553 66.354 61.7285 66.1323 61.8022 65.9111 cv
61.9946 65.3384 62.1865 64.7651 62.3765 64.1953 cv
62.5005 64.7852 62.6484 65.4512 62.4565 66.043 cv
56.4253 78.2822 mo
56.0986 79.042 55.7725 79.8032 55.4463 80.563 cv
55.2285 81.063 54.7466 81.772 54.6904 82.3223 cv
55.0293 82.9951 54.8784 83.6943 54.4316 84.2764 cv
54.2935 84.46 53.4053 85.5361 53.2617 85.4482 cv
53.0977 85.3467 53.8604 83.8643 53.9497 83.6592 cv
54.3486 82.7334 54.8096 82.2822 53.9004 81.4893 cv
52.8247 80.543 51.3887 81.8242 50.3994 82.2949 cv
50.0967 82.4414 47.6343 83.0088 47.5415 82.5674 cv
47.6646 82.3594 48.1196 82.4326 48.3193 82.3955 cv
48.9424 82.2842 50.2563 82.0103 50.3164 81.1909 cv
49.2705 81.2192 48.3677 80.6533 48.8965 79.5293 cv
49.2974 79.9302 49.8906 80.834 50.4106 81.0371 cv
51.8506 80.979 53.3003 80.3623 54.5063 79.6104 cv
55.5024 78.9863 56.2314 78.3501 56.6865 77.291 cv
56.9727 76.627 57.2554 75.9653 57.5405 75.3022 cv
58.3066 75.813 56.6616 77.728 56.4253 78.2822 cv
47.0605 76.7822 mo
46.9873 77.0923 46.8867 77.5493 46.4902 77.5859 cv
45.2627 77.5439 43.8936 75.2539 43.2666 74.4561 cv
43.2305 74.4092 43.2192 74.3853 43.1895 74.3472 cv
42.8467 73.877 43.1636 74.0752 43.5186 74.3472 cv
43.7324 74.5112 43.9507 74.6943 44.0313 74.7603 cv
44.5483 75.1831 45.0703 75.6021 45.6353 75.959 cv
45.9976 76.1899 46.7925 76.8013 47.0264 76.3682 cv
47.3022 75.8643 47.7954 76.2842 48.0723 76.542 cv
47.9463 76.064 47.4634 75.209 47.1235 74.3472 cv
46.6934 73.2612 46.4902 72.168 47.5293 71.813 cv
47.6572 72.6592 47.7847 73.502 47.9126 74.3472 cv
48.0474 75.2329 48.1816 76.1182 48.3145 77.002 cv
48.1313 76.7153 47.3926 76.8662 47.0605 76.7822 cv
43.7725 81.9053 mo
41.5942 81.9053 li
41.1094 81.9053 38.5586 82.1758 38.4063 81.7563 cv
42.1714 80.5083 li
42.6772 80.3403 42.9863 80.3081 43.5337 80.3081 cv
44.4385 80.3081 44.2944 80.3213 44.2944 81.2153 cv
44.2944 81.8901 44.4155 81.9053 43.7725 81.9053 cv
34.5825 77.168 mo
34.8276 77.8384 35.0703 78.5063 35.3145 79.1743 cv
35.4595 79.5732 35.6045 79.9702 35.7485 80.3682 cv
35.7686 80.4189 35.7573 80.7153 35.6636 80.582 cv
34.9106 79.4912 34.1597 78.3989 33.4063 77.3071 cv
33.7354 77.2422 34.0625 77.1582 34.3853 77.0659 cv
34.3076 76.855 34.2305 76.645 34.1543 76.4331 cv
35.0117 76.5732 35.6353 76.666 36.4873 76.543 cv
37.9893 76.3291 39.4355 76.8032 40.7725 77.4512 cv
40.5356 76.6641 39.6572 75.0039 40.9463 74.6514 cv
41.1426 75.3472 41.5322 76.0571 41.5347 76.791 cv
41.5396 77.2871 41.1084 77.4224 41.0127 77.7412 cv
40.2256 77.354 39.0566 77.375 38.1982 77.2373 cv
36.8193 77.0122 35.9307 76.791 34.5825 77.168 cv
18.4873 73.0884 mo
18.4063 73.502 18.3936 73.9263 18.3936 74.3472 cv
18.3916 74.522 18.3906 74.7002 18.3916 74.875 cv
18.4077 76.2622 18.3384 77.6123 18.1436 78.9829 cv
17.6904 78.874 17.2295 79.5801 16.6685 79.6621 cv
16.0366 79.752 15.0024 79.6899 14.7495 79.061 cv
14.6123 78.7231 14.6284 78.3833 14.2505 78.3174 cv
14.1934 78.3091 13.8745 78.2949 13.8296 78.2461 cv
13.7324 78.1401 13.8633 76.7271 13.8413 76.479 cv
13.6113 75.7212 13.3887 75.0283 13.2085 74.3472 cv
12.9204 73.2539 12.7373 72.1963 12.8037 70.9609 cv
13.2734 71.0283 12.6865 72.8682 13.2476 72.9634 cv
13.9165 73.0791 14.5854 73.1924 15.2563 73.3081 cv
14.6504 73.5063 14.3037 73.8862 14.1094 74.3472 cv
13.7363 75.2329 13.9644 76.4399 14.2744 77.3711 cv
14.5415 78.1763 14.4663 78.2031 15.2056 78.3281 cv
15.7173 78.415 16.2295 78.502 16.7417 78.5903 cv
16.9263 78.6211 17.6143 78.8579 17.7886 78.7681 cv
18.2124 78.0693 18.0313 77.252 17.9736 76.4771 cv
17.9326 75.9609 17.8486 75.147 17.8916 74.3472 cv
17.9463 73.2974 18.2173 72.2681 19.0894 71.958 cv
19.0996 72.2783 18.5786 72.625 18.4873 73.0884 cv
110.61 78.3232 mo
110.5 78.4092 109.708 79.2539 109.562 79.0229 cv
109.901 78.1973 111.295 77.438 110.572 76.356 cv
109.692 77.082 108.75 76.8901 108.36 75.7993 cv
109.045 75.9199 109.731 76.043 110.417 76.1641 cv
110.917 76.2539 111.48 75.2412 111.87 74.3472 cv
112.09 73.8384 112.255 73.3682 112.32 73.1621 cv
112.604 72.248 112.924 71.0083 112.566 70.0762 cv
112.278 69.3262 111.985 68.5771 111.696 67.8281 cv
111.651 67.709 111.469 67.4424 111.6 67.3682 cv
111.852 67.2192 112.473 68.6973 112.548 68.9243 cv
112.789 69.6421 112.835 70.3521 113.109 71.061 cv
113.119 71.082 113.126 71.104 113.133 71.125 cv
113.67 69.3662 114.162 67.6221 114.604 65.9033 cv
114.349 65.8672 114.121 65.8252 114.067 65.8091 cv
114.363 66.5732 114.541 66.627 113.909 67.1602 cv
113.738 66.8032 113.566 66.4443 113.397 66.084 cv
113.103 65.9712 112.856 65.8203 112.64 65.646 cv
112.614 65.626 112.585 65.6104 112.563 65.5913 cv
111.805 65.6411 111.022 65.7329 110.286 65.8423 cv
110.282 65.8579 110.272 65.874 110.268 65.8911 cv
110.193 66.1211 109.994 66.3901 109.893 66.5859 cv
109.646 67.062 109.851 67.6289 109.713 68.21 cv
109.619 68.6191 109.498 69.0391 109.5 69.4653 cv
109.5 69.5532 109.71 70.0742 109.702 70.104 cv
109.597 70.436 108.501 70.793 108.183 70.979 cv
109.026 71.1763 109.045 71.0781 109.118 71.918 cv
109.17 72.5322 109.221 73.147 109.273 73.7603 cv
108.764 73.6411 108.254 73.522 107.748 73.4053 cv
107.455 73.335 107.632 71.2803 107.84 71.0552 cv
107.713 71.0591 107.588 70.9673 107.464 70.9663 cv
108.155 69.625 108.846 68.2852 109.535 66.9463 cv
109.393 66.8789 109.17 66.9033 109.024 66.9512 cv
109.319 66.6201 109.614 66.2852 109.91 65.9512 cv
109.924 65.9321 109.942 65.9141 109.959 65.895 cv
108.708 66.0952 107.632 66.332 107.128 66.4482 cv
106.932 66.4932 106.665 66.5884 106.584 66.6211 cv
104.793 67.3652 103.079 67.7974 101.465 68.0151 cv
101.347 68.0322 101.228 68.0474 101.108 68.062 cv
100.962 68.0791 100.817 68.0923 100.673 68.1069 cv
100.326 68.1411 99.9775 68.166 99.6396 68.1812 cv
99.2046 68.769 98.5063 69.8032 98.6855 69.9819 cv
98.8877 70.1841 99.0923 70.3872 99.2954 70.5903 cv
99.8257 71.1182 100.351 71.644 100.879 72.1699 cv
101.274 72.564 103.347 69.9072 103.614 69.6289 cv
104.322 68.8931 105.719 67.6772 106.86 68.0391 cv
106.771 68.3149 106.315 68.186 106.026 68.2461 cv
105.614 68.418 105.263 68.7173 104.94 69.0142 cv
104.097 69.7842 103.368 70.6714 102.487 71.4063 cv
102.037 71.7832 101.558 72.145 101.09 72.5039 cv
101.01 72.5273 100.501 72.4272 100.29 72.4282 cv
99.4053 72.4282 98.4336 71.7373 98.0776 70.9712 cv
98.3784 70.2031 98.6025 70.1123 98.0293 69.543 cv
98.2402 69.4033 98.7207 68.854 99.2334 68.1982 cv
98.1426 68.2192 97.1167 68.1514 96.1675 68.022 cv
96.2563 68.1602 96.3335 68.3091 96.3843 68.4712 cv
96.9727 70.312 95.1816 72.1289 94.9595 73.8892 cv
94.9404 74.0371 94.9365 74.1924 94.9307 74.3472 cv
94.9063 75.0752 95.0366 75.8423 95.4746 76.4243 cv
95.2686 76.8271 94.6807 74.979 94.6807 74.7192 cv
94.6807 74.5952 94.6875 74.4731 94.6982 74.3472 cv
94.8696 72.3423 96.2822 70.27 95.3403 68.2974 cv
95.2803 68.1699 95.1514 68.0039 95.0073 67.8301 cv
94.5796 67.7441 94.1763 67.6479 93.7905 67.5474 cv
93.6367 67.5063 93.4893 67.4644 93.3433 67.4224 cv
93.1416 67.3652 92.9463 67.3071 92.7583 67.2451 cv
92.2744 67.0903 91.8286 66.9302 91.4375 66.7739 cv
91.4336 66.7842 91.4287 66.7939 91.4224 66.8042 cv
90.7354 68.3813 89.4824 69.5503 90.6206 71.3232 cv
91.1016 70.8423 91.5864 70.3604 92.0664 69.8804 cv
92.4482 70.2603 92.8296 70.6392 93.2095 71.02 cv
92.3086 71.438 91.8535 72.2329 91.7363 73.1924 cv
91.6904 73.5762 91.6904 73.9609 91.6963 74.3472 cv
91.6992 74.54 91.7017 74.7329 91.7075 74.9253 cv
91.7046 74.7852 91.6484 75.6523 91.5435 75.2891 cv
91.4536 74.9751 91.3643 74.6602 91.2734 74.3472 cv
91.0073 73.417 90.7417 72.4873 90.4736 71.5552 cv
90.2725 70.8521 89.7847 70.4609 89.9087 69.584 cv
89.8516 69.2012 89.6855 68.8032 89.5786 68.4321 cv
89.3223 67.543 89.0674 66.6533 88.8135 65.7642 cv
88.7813 65.6514 88.7495 65.5391 88.7173 65.4263 cv
86.0273 64.041 83.3184 63.6289 81.0576 63.6411 cv
81.1636 63.7461 81.2666 63.835 81.3535 63.8789 cv
81.3604 63.897 81.3667 63.9341 81.3716 63.979 cv
81.4004 64.2373 81.3965 64.8604 81.3066 64.8604 cv
81.1055 64.8604 80.8286 64.4712 80.5645 63.9819 cv
80.5083 63.877 80.4507 63.77 80.3975 63.6572 cv
78.5366 63.7329 77.0347 64.061 76.2124 64.2871 cv
76.3286 64.3594 76.4336 64.4443 76.5376 64.5283 cv
76.7217 64.6763 76.8926 64.8403 77.0093 65.0474 cv
77.1104 65.2241 77.1094 65.4243 77.2515 65.5674 cv
78.4653 66.7773 li
78.8545 67.1621 77.7676 67.8462 77.4917 68.2051 cv
77.1006 68.7153 76.9497 69.3071 77.1904 69.917 cv
76.7183 69.917 75.5435 70.2002 75.5435 69.6143 cv
75.5557 68.2539 76.7983 67.3071 77.0186 66.0132 cv
77.1104 65.4771 76.6133 65.0264 76.1553 64.6362 cv
76.0566 64.5522 75.9556 64.4692 75.8643 64.3892 cv
75.8066 64.4072 75.7534 64.4233 75.7085 64.438 cv
75.5845 64.478 75.3843 64.5884 75.3193 64.627 cv
72.2183 66.5342 69.1646 65.3193 68.0513 64.7461 cv
67.8613 64.7354 67.6685 64.7383 67.4746 64.7363 cv
67.3853 64.7363 67.3003 64.728 67.2065 64.731 cv
66.7065 64.7563 66.2017 64.7603 65.7007 64.7993 cv
65.2095 64.8384 65.0176 64.709 65.0215 65.229 cv
64.9966 66.0264 64.4224 65.2144 64.2954 64.936 cv
64.9463 64.918 64.8066 64.4971 64.6572 64.0493 cv
64.6377 63.9922 64.6187 63.9341 64.6006 63.875 cv
64.5845 63.8252 64.5576 63.7739 64.5415 63.7251 cv
62.7095 63.5151 60.8413 63.6963 59.1006 64.0732 cv
59.7114 64.6821 li
59.9707 64.939 59.7725 65.4282 59.7363 65.7661 cv
59.2856 65.3682 58.8374 64.9653 58.3887 64.563 cv
58.2935 64.478 58.1982 64.396 58.1045 64.311 cv
56.0464 64.8481 54.2236 65.6104 52.9272 66.231 cv
53.0396 66.375 53.1724 66.502 53.2954 66.6411 cv
53.4463 66.811 53.5884 66.9883 53.7485 67.145 cv
54.1724 67.457 54.5405 67.8384 54.8833 68.2363 cv
55.0977 68.4844 55.4507 69.1392 55.7544 69.231 cv
55.5645 68.7031 56.5566 66.3052 56.3984 66.1899 cv
55.4614 65.5161 li
55.4004 65.4702 55.3384 65.4263 55.2764 65.3813 cv
55.4707 65.3701 55.6606 65.3613 55.8525 65.3481 cv
56.3105 65.3232 56.7676 65.2964 57.2246 65.269 cv
57.0996 65.4302 56.5303 66.1001 56.6904 66.2163 cv
56.8984 66.3643 57.1035 66.5122 57.3115 66.6621 cv
56.9976 67.0332 56.2603 67.5293 56.1436 67.9961 cv
56.1436 68.354 56.2075 68.707 56.3232 69.0464 cv
56.4873 69.5161 56.6797 69.418 57.1313 69.4609 cv
58.5024 69.5903 60.1563 69.6992 60.8335 71.1162 cv
60.7163 71.2041 59.9883 70.3281 59.6846 70.1899 cv
59.0664 69.9082 58.3765 69.8633 57.7246 69.707 cv
57.7246 69.9673 57.5894 70.6289 57.7246 70.8789 cv
58.2192 71.2593 58.7734 71.562 59.3545 71.793 cv
59.3276 71.9634 59.3276 71.9399 59.1597 71.9502 cv
58.0996 72.0122 57.0405 72.0713 55.9775 72.1323 cv
56.2866 71.8291 56.5957 71.5239 56.9072 71.2212 cv
57.0942 71.0371 55.7754 69.6079 55.5483 69.313 cv
55.3994 69.2681 55.0996 68.7393 54.9814 68.5942 cv
54.6465 68.2153 54.2773 67.8701 53.9136 67.521 cv
53.6143 67.2329 53.2734 67.0122 52.9063 66.856 cv
52.6563 66.749 52.3975 66.666 52.1226 66.6313 cv
51.9814 66.7021 51.8545 66.77 51.7383 66.832 cv
51.2114 67.1152 50.5337 67.7373 50.3403 67.938 cv
50.0786 68.208 49.8145 68.4551 49.5474 68.6821 cv
49.5854 68.7354 49.6167 68.7783 49.6406 68.7964 cv
49.6563 68.8091 49.6753 68.8174 49.6914 68.8301 cv
50.1406 69.166 50.7056 69.3281 51.2207 69.5342 cv
51.9214 69.811 51.3174 70.541 51.1016 71.145 cv
50.8975 71.7134 51.7954 71.9292 52.1597 72.0601 cv
52.8975 72.3252 53.6367 72.5903 54.3735 72.854 cv
54.9834 73.0732 54.6924 73.252 54.4756 73.8511 cv
54.4087 74.0391 54.3232 74.2012 54.2554 74.3472 cv
54.1035 74.6743 54.0415 74.9063 54.4937 75.0674 cv
55.0356 75.2622 55.5786 75.457 56.1226 75.6504 cv
54.8735 76.2373 li
54.9395 76.312 54.9863 76.397 55.0225 76.4912 cv
55.0225 76.7329 54.5366 76.3213 54.4707 76.2563 cv
54.5313 76.2271 54.5903 76.2002 54.6494 76.1699 cv
54.1685 75.5581 53.6753 74.9531 53.1875 74.3472 cv
52.9185 74.0161 52.6494 73.686 52.3887 73.3481 cv
52.0015 72.8491 51.6304 72.0303 51.0244 71.812 cv
50.7324 71.707 50.6553 71.6172 50.8813 71.3042 cv
50.4463 70.6763 49.8154 69.8691 49.3804 69.0532 cv
49.3525 69 49.3184 68.9512 49.2935 68.8989 cv
46.4185 71.2051 43.3076 71.106 41.0283 70.5122 cv
40.9966 70.563 40.9644 70.6079 40.9336 70.6592 cv
40.6333 71.1221 40.3037 71.5342 40.1353 71.71 cv
39.9395 71.916 38.1323 73.7153 37.3115 74.3472 cv
37.1055 74.5063 36.9595 74.5952 36.9185 74.563 cv
36.9775 74.4873 37.0444 74.4189 37.1055 74.3472 cv
37.7065 73.6401 38.4414 73.042 39.0986 72.3872 cv
39.6846 71.8022 39.9004 71.8579 39.3184 71.272 cv
39.0435 70.998 38.7725 70.7251 38.4966 70.4512 cv
38.2935 70.2441 37.8994 70.5723 37.6167 70.5752 cv
37.2373 70.5752 37.9692 70.0361 38.4653 69.7061 cv
38.5146 69.6724 38.5645 69.6392 38.6064 69.6123 cv
38.3203 69.4712 38.0933 69.3442 37.9336 69.252 cv
37.7656 69.1553 37.4893 69.0122 37.4893 69.0122 cv
36.2266 68.4609 li
36.1626 68.5264 36.0986 68.5884 36.0347 68.6514 cv
35.7515 68.9351 35.4683 69.2202 35.1826 69.5029 cv
34.2534 70.4331 33.3604 71.4443 32.3765 72.313 cv
33.0576 72.4512 33.7256 73.5903 33.7285 74.2192 cv
33.7285 74.2563 33.7314 74.3003 33.7354 74.3472 cv
33.7627 74.6602 33.8413 75.1353 33.5957 75.1353 cv
33.4424 75.0093 33.4395 74.6841 33.4307 74.3472 cv
33.4214 74.0161 33.4063 73.6763 33.2363 73.5083 cv
32.8926 73.1641 32.5493 72.8232 32.2065 72.4829 cv
31.4395 73.3623 30.4517 73.9263 29.3853 74.3472 cv
29.1523 74.4399 28.9155 74.5352 28.6724 74.6162 cv
28.0356 74.8262 27.3906 75.0073 26.7554 75.2202 cv
26.3276 75.3643 26.2964 75.2661 26.5474 75.0161 cv
26.6455 74.918 26.9824 74.6304 27.2666 74.3472 cv
27.5366 74.0791 27.7563 73.8174 27.6704 73.7319 cv
27.2124 73.2739 26.7524 72.8149 26.2954 72.3579 cv
27.2803 71.7183 28.2017 70.7783 28.7095 69.7271 cv
29.3955 68.3149 29.2476 66.8623 29.2344 65.3481 cv
29.2334 65.2822 29.2314 65.2153 29.2314 65.1504 cv
29.2896 65.085 29.3374 65.2173 29.3765 65.418 cv
29.4595 65.8384 29.5005 66.5859 29.5005 66.7051 cv
29.5005 67.4302 29.4355 67.9932 29.8613 68.6221 cv
30.0283 68.8701 30.8403 69.3672 30.7314 69.5532 cv
30.0864 69.3423 29.5083 69.5571 29.0024 69.9712 cv
28.6235 70.2822 27.8413 70.9634 27.8413 71.4771 cv
27.8364 72.1821 28.3813 72.7271 28.8394 73.1973 cv
29.1646 73.5322 29.1997 73.7803 29.6943 73.6621 cv
30.0415 73.582 30.3784 73.457 30.6953 73.3003 cv
31.2354 73.0332 31.7915 72.6724 32.2173 72.2461 cv
33.4243 71.043 34.5503 69.6924 35.8345 68.5591 cv
35.9004 68.5 35.9634 68.436 36.0337 68.375 cv
34.0605 67.5161 li
33.8594 67.4072 li
30.1626 65.6313 li
30.1626 65.6313 29.8906 65.4902 29.8486 65.4634 cv
27.5405 64.0342 25.4463 63.584 23.6514 63.6592 cv
23.6484 63.6982 23.6494 63.7373 23.6455 63.7764 cv
23.6396 63.8682 23.6636 63.9443 23.6846 64.022 cv
23.7773 64.3892 24.1187 64.6514 24.4204 64.918 cv
25.5835 65.939 27.4985 67.4199 25.9927 68.9253 cv
25.3745 69.54 24.8184 70.2671 24.1543 70.8262 cv
23.4976 71.3789 23.6714 71.3281 24.2646 71.9214 cv
24.5254 72.1821 24.7866 72.4424 25.0454 72.7012 cv
25.1196 72.7754 24.3394 73.5083 24.2485 73.606 cv
23.9595 73.916 23.8037 74.1191 23.7544 74.3472 cv
23.7075 74.5693 23.7603 74.8091 23.8936 75.1909 cv
24.1343 75.873 24.2856 76.3013 24.7954 76.8271 cv
26.3755 78.4609 28.9536 81.104 31.3306 79.27 cv
31.5786 79.0703 31.7954 78.8052 32.0225 78.5811 cv
32.1304 78.4722 32.2896 78.5322 32.2563 78.561 cv
32.3013 78.7783 31.1333 79.6831 30.9077 79.9092 cv
32.5327 80.2803 31.0244 80.4473 30.2275 80.3823 cv
29.2983 80.3071 28.3726 80.1602 27.4727 79.9233 cv
26.6206 79.6982 25.6045 79.3872 25.0117 78.6909 cv
24.6694 78.2891 24.5464 77.5884 24.3794 77.0933 cv
24.1597 76.4463 23.9272 76.123 23.4482 75.6411 cv
23.2847 75.1724 23.3623 74.7764 23.3257 74.3472 cv
23.3115 74.1714 23.2793 73.9893 23.1997 73.793 cv
22.9717 73.2432 22.7207 72.7021 22.4307 72.1841 cv
21.8735 71.1802 21.1577 70.249 20.2246 69.5649 cv
19.5864 69.0991 19.7373 70.0112 19.1606 69.938 cv
19.0547 69.9243 18.8003 69.5771 18.7305 69.5063 cv
18.3193 69.0962 17.9087 68.6841 17.4985 68.2729 cv
17.9805 68.3652 18.4526 68.4893 18.9087 68.6689 cv
19.6152 68.9502 19.8975 69.436 20.3677 68.6211 cv
21.0244 67.4829 19.9326 66.3403 19.3384 65.395 cv
19.3232 65.3701 19.3066 65.3442 19.2925 65.3213 cv
19.2617 65.2842 19.1904 65.1821 19.1025 65.0493 cv
18.7295 65.272 18.4175 65.4941 18.1416 65.7031 cv
15.4692 67.502 li
15.4624 67.6289 15.4556 67.75 15.4497 67.8662 cv
15.4453 67.9883 15.4434 68.0991 15.4536 68.186 cv
15.5376 68.8804 15.8633 69.4609 16.4785 69.8232 cv
15.8564 70.3174 15.4404 71.106 14.8833 70.2739 cv
14.5435 69.7642 14.3774 69.1831 14.2256 68.5962 cv
14.1895 68.4609 14.1553 68.3271 14.1187 68.1943 cv
9.95068 70.3281 li
8.78027 70.8213 li
8.78955 70.8452 8.79443 70.8721 8.80371 70.8989 cv
8.88525 71.103 li
10.1353 74.3472 li
10.2783 74.7192 li
10.3877 74.999 11.0225 75.2642 11.2192 75.5972 cv
11.4692 76.019 11.5396 76.5103 11.5586 76.9932 cv
11.5747 77.4063 11.6675 78.7432 11.2925 77.772 cv
11.0156 77.0513 10.7363 76.3311 10.4595 75.6123 cv
10.2983 75.1963 10.1353 74.9199 9.86865 74.748 cv
10.7104 77.2393 11.6494 79.7603 12.6963 82.3135 cv
13.2275 82.3828 13.7017 82.4033 14.3096 82.3223 cv
15.1445 82.209 15.9453 82.2988 16.7124 82.5352 cv
17.2295 82.4033 17.7725 82.291 18.3345 82.2021 cv
18.3843 81.4141 18.5625 80.6743 19.4814 80.4243 cv
19.4307 80.9673 19.4692 81.52 19.3975 82.061 cv
19.8115 82.02 20.2305 81.9854 20.6646 81.9751 cv
20.6714 81.9751 li
22.4453 81.938 24.3765 82.1758 26.4204 82.8408 cv
26.3003 82.4814 26.1445 82.1592 25.8096 81.8521 cv
25.3687 81.4443 24.8115 81.0303 24.2256 81.2822 cv
23.8135 81.459 23.4194 81.6699 23.0034 81.833 cv
22.9595 81.688 22.8765 81.0923 22.7563 81.0254 cv
22.3994 81.0811 22.0503 81.1812 21.7114 81.3003 cv
21.9565 80.6982 22.2036 80.0972 22.4482 79.4941 cv
22.5977 79.979 22.6206 80.8623 23.1655 80.8262 cv
23.7485 80.7871 24.3154 81.0103 24.8677 80.9199 cv
25.3574 80.8384 25.7983 81.002 26.1367 81.3652 cv
26.3164 81.9512 26.5645 82.4277 26.8022 82.9678 cv
26.9155 83.0068 27.0244 83.0439 27.1377 83.085 cv
27.6353 82.835 28.1323 82.5869 28.6274 82.3379 cv
28.4692 82.7236 28.3135 83.1104 28.1553 83.4951 cv
29.8267 84.2178 31.5596 85.2334 33.3354 86.6221 cv
34.3306 85.3525 35.3223 84.0791 36.3164 82.8076 cv
36.7114 83.876 37.3374 84.9326 38.5054 85.2607 cv
39.0854 85.4229 41.6514 85.5811 41.4136 84.7627 cv
42.1367 84.8838 42.8716 84.9756 43.5864 85.1299 cv
43.4653 85.3721 41.9414 85.2607 41.5654 85.3135 cv
41.4126 85.4951 41.5654 86.4502 41.5654 86.7021 cv
41.5654 87.0576 41.4087 86.7803 41.3423 86.5791 cv
41.2373 86.251 41.0376 85.9619 40.7402 85.7783 cv
40.0786 85.3682 39.0483 85.4658 38.3154 85.5986 cv
37.1587 85.8047 36.0366 86.1963 34.9395 86.6006 cv
34.5874 86.7314 34.1753 86.8408 33.7856 86.9873 cv
33.8975 87.0791 34.0063 87.165 34.1206 87.2568 cv
34.1587 87.2881 34.3174 87.3838 34.4844 87.4404 cv
35.8345 87.9072 42.4517 89.8887 50.5703 87.1611 cv
49.9663 87.0713 49.4424 86.9873 48.8877 87.3369 cv
48.7822 86.7979 48.8916 86.0498 48.2515 86.0547 cv
47.0674 86.0674 45.8687 86.7178 44.7886 85.9092 cv
44.7134 85.6592 45.6333 86.0869 45.7207 86.1143 cv
46.2104 86.1592 46.6885 85.8545 47.0874 85.6143 cv
47.9165 85.1143 47.8774 85.2666 48.5923 85.8291 cv
49.3506 86.4248 51.0283 85.4814 51.7974 85.2295 cv
52.2314 85.0889 52.5864 85.6924 52.8696 86.2725 cv
54.2275 85.6787 55.6177 84.9443 57.0195 84.0439 cv
56.6885 83.6182 56.3545 83.1943 56.0664 82.7393 cv
56.5625 82.8721 57.1377 83.4229 57.5474 83.6982 cv
58.2593 83.2197 58.9727 82.7061 59.6885 82.1392 cv
59.6885 82.1392 59.7783 82.0752 59.9443 81.9673 cv
59.8423 81.8579 59.7485 81.7539 59.6846 81.667 cv
59.2544 81.082 58.8315 80.4502 58.6353 79.7412 cv
58.2822 78.4521 59.1533 77.5532 60.2427 77.0103 cv
60.4902 78.4502 60.7417 79.8911 60.9893 81.3301 cv
61.5156 81.0352 62.1694 80.6953 62.9146 80.375 cv
62.8354 79.7783 63.1694 79.2373 63.5356 78.7852 cv
63.8345 78.4141 64.1685 78.0752 64.4883 77.7212 cv
64.8765 77.293 64.4033 76.7061 64.2305 76.1943 cv
63.9365 75.3203 63.9043 74.6133 62.8115 74.6133 cv
61.4136 74.6133 li
61.4434 74.5239 61.4727 74.436 61.5024 74.3472 cv
61.8984 73.1611 62.2974 71.9761 62.6934 70.79 cv
62.9546 70.019 63.0195 70.0342 63.1826 70.9731 cv
63.3276 71.812 63.4785 72.6514 63.6616 73.4844 cv
63.7236 73.7739 63.7954 74.061 63.8667 74.3472 cv
63.9033 74.4932 63.9326 74.6401 63.9692 74.7852 cv
64.2114 74.8779 64.4453 74.9902 64.6694 75.1191 cv
65.0796 75.3643 65.4844 75.7251 65.4893 76.2402 cv
65.4795 76.8174 64.7856 77.2661 65.0083 77.748 cv
65.2803 78.3359 65.6016 78.9043 65.9717 79.438 cv
66.9043 79.2764 67.8652 79.2373 68.7915 79.4082 cv
68.8853 79.4263 69.2573 79.4722 69.3975 79.4644 cv
69.5444 79.457 69.9565 79.3872 69.9565 79.3872 cv
71.9365 78.9409 li
71.6284 78.9341 71.3096 78.9341 70.9795 78.9863 cv
70.1475 79.1152 69.3955 78.8989 68.5864 78.7354 cv
68.6353 78.4893 68.9775 76.5752 69.0654 76.5923 cv
69.9727 76.7764 70.4424 76.647 70.7876 77.5039 cv
70.8813 77.7383 71.0024 78.3643 71.1973 78.5264 cv
71.9624 78.8682 72.8374 78.1333 73.4253 77.647 cv
74.0576 77.127 74.9233 76.436 75.1753 75.6489 cv
75.3154 75.2173 75.4673 74.769 75.6665 74.3472 cv
75.8193 74.022 76.0015 73.7109 76.2427 73.4453 cv
75.7036 73.3359 75.1636 73.229 74.6255 73.1191 cv
74.4004 73.0752 74.2295 72.9609 74.5166 72.875 cv
75.6416 72.5371 76.7617 72.2002 77.8833 71.8643 cv
78.8315 71.5781 79.7783 71.293 80.7275 71.0083 cv
81.2256 70.8579 81.6904 70.6611 82.2095 70.562 cv
82.2915 70.6982 82.2344 70.7153 82.1133 70.75 cv
81.6494 70.8911 81.1855 71.0293 80.7236 71.168 cv
79.1665 71.8291 77.9233 73.002 76.8105 74.2432 cv
76.7793 74.2764 76.7485 74.313 76.7183 74.3472 cv
76.2056 74.9224 75.7114 75.5103 75.2026 76.0859 cv
75.0137 76.6963 74.8267 77.3174 74.5127 77.877 cv
74.3755 78.125 74.2285 78.313 74.0732 78.4609 cv
74.6553 78.3301 li
78.0903 76.7251 li
78.0903 76.7251 78.4365 76.9844 79.0474 77.4653 cv
79.0195 77.4092 78.9893 77.3521 78.9604 77.2964 cv
78.8184 77.0112 77.6772 75.0913 78.6265 75.9082 cv
79.0977 76.312 79.8965 77.3511 79.8735 78.127 cv
80.1807 78.377 80.5146 78.6489 80.8843 78.957 cv
81.6494 77.8149 82.4224 76.6782 83.1597 75.5161 cv
83.2534 75.126 83.3496 74.7373 83.4482 74.3472 cv
83.6885 73.4092 83.9526 72.479 84.3135 71.5752 cv
84.5957 70.8652 84.9326 70.1743 85.3374 69.5229 cv
85.5405 69.1963 85.8242 68.9092 85.9575 68.5684 cv
85.7734 68.5483 85.2065 68.5313 85.1465 68.5303 cv
84.6963 68.5112 85.0742 68.1714 84.8022 67.9692 cv
84.5664 67.791 83.7344 67.8623 83.4507 67.8311 cv
82.5674 67.7441 81.6855 67.6572 80.8057 67.5674 cv
80.7256 67.5591 79.6563 67.5322 79.8604 67.3193 cv
80.0054 67.168 81.2295 67.3721 81.4336 67.3823 cv
82.2485 67.4141 83.0615 67.4473 83.8745 67.479 cv
84.1216 67.4893 84.7725 67.6572 84.8843 67.397 cv
85.1387 66.812 85.3945 66.229 85.6465 65.645 cv
85.9004 66.2622 86.0815 66.9033 86.1504 67.5693 cv
86.2993 67.6802 86.8726 67.5962 87.0693 67.604 cv
86.6636 67.9941 86.2075 68.354 86.1504 68.9253 cv
86.0923 69.522 85.9604 70.1113 85.7813 70.6841 cv
85.3765 71.9751 84.7402 73.1841 84.0557 74.3472 cv
84.0522 74.355 84.0464 74.3643 84.0435 74.3711 cv
83.5835 75.147 83.2876 75.7642 83.0454 76.627 cv
82.9072 77.125 82.7495 77.627 82.4995 78.082 cv
82.1807 78.665 81.6875 79.0342 81.0464 79.0942 cv
81.7173 79.6514 82.4756 80.293 83.3086 81.022 cv
83.3784 80.8462 83.4482 80.6743 83.5176 80.5063 cv
84.2153 78.8052 85.1597 77.293 87.1377 76.897 cv
87.4946 76.9922 87.9663 77.7832 88.2256 78.0762 cv
88.4316 78.311 87.5664 77.9961 87.5264 77.9873 cv
86.9844 77.8521 86.4316 77.9189 85.9243 78.1592 cv
85.4614 78.375 84.1113 79.1079 84.1113 79.6821 cv
84.1113 81.3213 li
84.7583 80.8623 85.0645 80.9282 84.4204 81.5283 cv
84.3345 81.6079 84.2334 81.6763 84.1426 81.7539 cv
85.4106 82.8818 86.8096 84.1709 88.2686 85.5889 cv
89.0796 85.2637 89.8916 84.9404 90.7007 84.6162 cv
90.4136 84.3311 89.3364 83.5791 89.2856 83.2021 cv
89.2334 82.8154 92.4155 80.5449 92.0015 80.1333 cv
89.2114 77.3442 li
90.1216 77.3442 91.5703 77.085 92.3613 77.4014 cv
92.6475 78.3091 92.6304 79.2539 92.2007 80.1172 cv
92.1177 80.377 92.5386 80.1714 92.2114 80.4941 cv
91.6274 81.0791 91.0415 81.6621 90.4556 82.2461 cv
90.2974 82.4053 89.4043 83.1025 89.5815 83.2822 cv
90.0474 83.7451 90.5103 84.208 90.9746 84.6729 cv
90.4834 85.0205 89.9404 85.626 89.6235 86.1494 cv
89.5576 86.2568 89.5166 86.4854 89.4824 86.7314 cv
89.9727 86.5068 95.4717 84.0166 102.655 82.21 cv
102.612 81.8604 102.665 81.4961 102.983 81.2729 cv
103.551 80.8779 104.278 81.7192 104.626 81.0522 cv
104.896 80.5322 104.964 79.938 104.966 79.3604 cv
104.967 77.6714 104.528 75.959 104.896 74.3472 cv
105.01 73.8413 105.201 73.3452 105.513 72.8623 cv
105.696 73.356 105.877 73.8521 106.058 74.3472 cv
106.149 74.6001 106.239 74.8511 106.333 75.1021 cv
104.565 75.4341 104.793 76.9531 105.318 78.2622 cv
105.723 79.272 106.304 80.2729 106.683 81.3203 cv
107.685 81.127 108.711 80.9692 109.748 80.8262 cv
110.094 79.9482 110.433 79.0703 110.754 78.1953 cv
110.708 78.2373 110.666 78.2881 110.61 78.3232 cv
f
8.62939 70.8853 mo
8.63916 70.9194 li
8.67725 71.0454 8.72217 71.1724 8.7583 71.2964 cv
8.76025 71.2964 li
8.72021 71.1592 8.67041 71.0215 8.62939 70.8853 cv
0 0 0 .6 cmyk
f
112.675 55.0283 mo
108.911 54.0903 104.732 53.5015 100.862 54.1665 cv
97.9268 49.9336 93.5439 53.1646 90.0908 54.1523 cv
86.0347 55.3086 81.356 54.4385 77.4307 53.1294 cv
71.8076 51.2544 61.9448 49.6055 58.0156 55.7412 cv
57.8589 55.9863 50.9648 54.0112 50.083 53.8525 cv
47.1846 53.3345 44.2407 53.0352 41.2959 53.0532 cv
38.8838 53.0703 36.2778 53.1924 33.959 53.9502 cv
31.0728 54.8945 28.9326 56.3384 25.731 56.1895 cv
24.1187 56.1152 22.4146 55.7466 21.0039 54.9336 cv
17.1528 52.7144 13.6997 53.2744 9.56396 54.0215 cv
9.23193 54.0815 6.52393 54.5542 5.00586 55.0186 cv
4.98975 55.0254 4.97754 55.0293 4.96191 55.0342 cv
5.78564 60.0864 6.96973 65.3892 8.62988 70.8853 cv
8.78076 70.8203 li
9.94971 70.3281 li
14.1187 68.1943 li
15.4697 67.5024 li
18.1416 65.7031 li
18.417 65.4941 18.73 65.2725 19.1025 65.0493 cv
19.1538 65.0186 19.2026 64.9863 19.2598 64.9556 cv
20.3496 64.3281 21.8066 63.7524 23.5557 63.6611 cv
23.5869 63.6602 23.6187 63.6602 23.6519 63.6582 cv
25.4468 63.5845 27.5396 64.0332 29.8477 65.4634 cv
29.8896 65.4893 30.1616 65.6313 30.1616 65.6313 cv
33.8599 67.4063 li
34.0596 67.5166 li
36.0327 68.3755 li
36.2266 68.4614 li
37.4897 69.0122 li
37.4897 69.0122 37.7646 69.1543 37.9336 69.2524 cv
38.0938 69.3442 38.3208 69.4712 38.6069 69.6113 cv
39.1968 69.9014 40.0327 70.2524 41.0288 70.5122 cv
43.3076 71.1064 46.418 71.2056 49.2939 68.8994 cv
49.3799 68.8325 49.4648 68.7544 49.5479 68.6821 cv
49.8149 68.4556 50.0786 68.2085 50.3408 67.9385 cv
50.5327 67.7363 51.2119 67.1143 51.7378 66.8325 cv
51.854 66.7705 51.9819 66.7021 52.1226 66.6313 cv
52.3599 66.5093 52.6299 66.3735 52.9277 66.2314 cv
54.2236 65.6104 56.0469 64.8481 58.105 64.3115 cv
58.4326 64.2256 58.7637 64.1455 59.1006 64.0723 cv
60.8418 63.6953 62.71 63.5151 64.542 63.7256 cv
65.584 63.8423 66.6157 64.0854 67.605 64.4966 cv
67.605 64.4966 67.7656 64.6025 68.0508 64.7466 cv
69.1646 65.3193 72.2178 66.5332 75.3198 64.6274 cv
75.3848 64.5884 75.584 64.4785 75.708 64.4385 cv
75.7539 64.4233 75.8057 64.4063 75.8638 64.3892 cv
75.9648 64.3594 76.0757 64.3242 76.2129 64.2871 cv
77.0337 64.0615 78.5366 63.7334 80.397 63.6563 cv
80.6147 63.6494 80.8296 63.6426 81.0566 63.6416 cv
83.3188 63.6294 86.0278 64.0415 88.7178 65.4263 cv
88.9038 65.5225 89.0908 65.6064 89.2788 65.7114 cv
89.2788 65.7114 90.0596 66.2173 91.438 66.7744 cv
91.8276 66.9302 92.2749 67.0903 92.7578 67.2451 cv
92.9458 67.3071 93.1416 67.3643 93.3438 67.4224 cv
93.4888 67.4644 93.6367 67.5063 93.7896 67.5474 cv
94.1758 67.6484 94.5786 67.7441 95.0078 67.8306 cv
95.3779 67.9033 95.7646 67.9673 96.167 68.0225 cv
97.1157 68.1514 98.1426 68.2192 99.2339 68.1973 cv
99.3677 68.1943 99.502 68.1885 99.6396 68.1812 cv
99.9775 68.1665 100.325 68.1416 100.674 68.1074 cv
100.818 68.0923 100.963 68.0796 101.109 68.0625 cv
101.228 68.0474 101.347 68.0313 101.466 68.0151 cv
103.078 67.7974 104.794 67.3643 106.584 66.6216 cv
106.664 66.5884 106.932 66.4922 107.129 66.4473 cv
107.633 66.3325 108.708 66.0952 109.959 65.8955 cv
110.069 65.8774 110.173 65.8604 110.285 65.8423 cv
111.023 65.7334 111.805 65.6416 112.564 65.5913 cv
113.054 65.5596 113.529 65.5474 113.978 65.5625 cv
114.224 65.5703 114.452 65.5913 114.678 65.6172 cv
115.495 62.4043 116.14 59.2764 116.669 56.2285 cv
116.657 56.2212 116.649 56.2153 116.637 56.2095 cv
115.674 55.6855 113.21 55.1602 112.675 55.0283 cv
1 /0 /CSD get_res sepcs
.35 sep
f
12.6504 82.1943 mo
12.6665 82.2344 12.6812 82.2734 12.6963 82.3125 cv
12.6924 82.3027 12.6904 82.2949 12.6865 82.2852 cv
12.6733 82.2549 12.6636 82.2246 12.6504 82.1943 cv
0 0 0 1 cmyk
f
63.3203 25.3154 mo
63.2603 28.6914 63.0264 31.5786 61.0625 34.4644 cv
58.8931 37.6284 55.6421 39.0093 51.9453 39.0093 cv
45.0015 39.0093 40.1675 34.0635 40.1675 26.7876 cv
40.1675 19.2646 45.0313 14.3203 52.1533 14.3203 cv
56.6953 14.3203 60.2144 16.4717 62.1172 20.7983 cv
56.6675 23.1953 li
55.874 20.9854 54.2051 19.5127 51.8911 19.5127 cv
48.1104 19.5127 46.1475 23.2866 46.1475 26.8193 cv
46.1475 30.4116 48.1982 34.0635 51.9785 34.0635 cv
54.4663 34.0635 56.374 32.7134 56.6074 30.0444 cv
51.9185 30.0444 li
51.9185 25.3154 li
63.3203 25.3154 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
72.8833 30.166 mo
66.1694 30.166 li
66.1694 25.3521 li
72.8833 25.3521 li
72.8833 30.166 li
cp
f
81.6748 26.3433 mo
81.6748 38.2412 li
75.9297 38.2412 li
75.9297 26.1904 li
75.9297 15.0894 li
81.6748 15.0894 li
81.6748 26.3433 li
cp
f
60.5796 114.296 mo
59.9077 114.101 li
59.4487 113.96 58.7295 113.739 58.7295 113.173 cv
58.7295 112.628 59.3774 112.354 59.8677 112.354 cv
60.5117 112.354 61.1367 112.614 61.6284 113.001 cv
62.6836 111.036 li
61.7734 110.546 60.5117 110.233 59.4878 110.233 cv
57.4458 110.233 55.9707 111.528 55.9707 113.507 cv
55.9707 115.396 57.0664 115.81 58.7295 116.261 cv
59.2954 116.415 60.3418 116.663 60.3418 117.374 cv
60.3418 118.06 59.6758 118.359 59.0527 118.359 cv
58.1465 118.359 57.3647 117.905 56.7007 117.349 cv
55.5664 119.392 li
56.6064 120.091 57.8638 120.505 59.1494 120.505 cv
60.1787 120.505 61.2466 120.234 62.0444 119.587 cv
62.8555 118.925 63.0986 117.931 63.0986 116.962 cv
63.0986 115.38 62.0034 114.696 60.5796 114.296 cv
0 0 0 0 cmyk
f
64.6655 111.812 mo
63.6958 112.769 63.1694 114.05 63.1694 115.38 cv
63.1694 116.832 63.6797 118.099 64.8047 119.071 cv
65.8594 119.989 67.2095 120.505 68.6304 120.505 cv
69.4536 120.505 70.0938 120.313 70.9717 120.054 cv
70.9707 120.003 li
69.8086 117.821 li
69.4507 117.962 69.0674 118.046 68.6836 118.046 cv
67.0366 118.046 65.9214 116.935 65.9214 115.396 cv
65.9214 113.88 67.0215 112.692 68.6445 112.692 cv
69.0386 112.692 69.4233 112.767 69.7876 112.907 cv
70.9717 110.751 li
70.9717 110.724 li
70.1865 110.416 69.4023 110.233 68.5483 110.233 cv
67.1157 110.233 65.6694 110.829 64.6655 111.812 cv
f
52.8892 120.245 mo
52.7871 120.259 55.7061 120.226 55.7061 120.226 cv
51.876 110.511 li
48.999 110.503 li
46.7754 115.964 li
49.54 115.927 li
50.4292 113.329 li
51.3413 116.087 li
52.9111 116.458 li
52.958 116.663 li
52.958 116.663 48.168 115.972 44.7744 116.891 cv
44.79 116.966 li
44.79 116.966 50.0571 116.204 53.0811 117.298 cv
53.1104 117.448 li
53.1104 117.448 48.8872 116.675 44.9424 117.716 cv
44.9644 117.817 44.9644 117.831 44.9644 117.831 cv
44.9644 117.831 49.0542 116.966 53.2563 118.083 cv
53.2622 118.12 li
53.2881 118.259 li
53.2881 118.259 50.1494 117.487 45.1094 118.528 cv
45.1333 118.641 li
45.1333 118.641 45.4312 118.603 45.7383 118.585 cv
45.0562 120.245 li
47.8701 120.245 li
48.5732 118.552 li
48.5732 118.552 50.6724 118.253 52.269 118.612 cv
52.8892 120.245 li
cp
f
73.9209 112.642 mo
73.9209 114.271 li
76.9097 114.271 li
76.9097 116.415 li
73.9209 116.415 li
73.9209 118.099 li
77.0679 118.099 li
77.0679 120.246 li
71.271 120.246 li
71.271 110.496 li
77.0679 110.496 li
77.0679 112.642 li
73.9209 112.642 li
cp
f
100.423 80.4614 mo
100.407 80.4966 100.396 80.5313 100.38 80.5635 cv
100.385 80.5493 100.392 80.5415 100.399 80.5283 cv
100.407 80.5103 100.415 80.4824 100.423 80.4614 cv
0 0 0 .9 cmyk
f
100.515 80.2075 mo
100.555 80.0728 100.593 79.9404 100.625 79.8428 cv
100.593 79.9404 100.555 80.0728 100.515 80.2075 cv
f
100.15 80.9233 mo
100.135 80.9434 100.12 80.9634 100.103 80.9834 cv
100.112 80.9712 100.131 80.9595 100.139 80.9473 cv
100.146 80.9385 100.144 80.9321 100.15 80.9233 cv
f
99.8945 81.272 mo
99.8193 81.335 99.7388 81.397 99.6577 81.46 cv
99.7388 81.397 99.8193 81.335 99.8945 81.272 cv
0 0 0 1 cmyk
f
100.192 80.9849 mo
100.132 81.0547 100.062 81.1299 99.9722 81.208 cv
100.062 81.1299 100.132 81.0547 100.192 80.9849 cv
f
99.5459 81.5415 mo
99.48 81.5947 99.4131 81.6406 99.3521 81.6865 cv
99.4131 81.6406 99.48 81.5928 99.5459 81.5415 cv
f
100.32 80.7466 mo
100.32 80.7974 100.285 80.8594 100.241 80.9233 cv
100.288 80.8594 100.32 80.7974 100.32 80.7466 cv
f
100.47 80.563 mo
100.459 80.584 100.449 80.6001 100.439 80.6182 cv
100.449 80.6001 100.459 80.584 100.47 80.563 cv
f
100.604 80.2095 mo
100.579 80.2974 100.547 80.3813 100.515 80.4614 cv
100.547 80.3813 100.579 80.2993 100.604 80.2095 cv
f
100.489 80.5288 mo
100.5 80.5078 100.505 80.4829 100.514 80.4619 cv
100.5 80.4971 100.485 80.5317 100.469 80.563 cv
100.476 80.5508 100.483 80.542 100.489 80.5288 cv
0 0 0 0 cmyk
f
100.229 80.9478 mo
100.237 80.938 100.233 80.9316 100.242 80.9238 cv
100.228 80.9429 100.21 80.9639 100.192 80.9849 cv
100.205 80.9727 100.222 80.96 100.229 80.9478 cv
f
110.759 78.187 mo
110.914 77.772 111.058 77.3579 111.206 76.9419 cv
111.197 76.9419 li
111.049 77.3589 110.914 77.77 110.759 78.187 cv
f
110.755 78.1948 mo
110.758 78.1919 110.758 78.1899 110.759 78.187 cv
110.745 78.2246 110.729 78.2637 110.716 78.3008 cv
110.729 78.2656 110.743 78.231 110.755 78.1948 cv
f
100.489 80.5288 mo
100.483 80.542 100.476 80.5508 100.469 80.563 cv
100.485 80.5317 100.5 80.4971 100.514 80.4619 cv
100.505 80.4829 100.5 80.5078 100.489 80.5288 cv
100.229 80.9478 mo
100.221 80.96 100.204 80.9727 100.192 80.9849 cv
100.211 80.9639 100.227 80.9429 100.241 80.9238 cv
100.233 80.9316 100.237 80.938 100.229 80.9478 cv
f
47.9126 74.3472 mo
47.7847 73.502 47.6577 72.6592 47.5298 71.813 cv
46.4907 72.168 46.6934 73.2612 47.1226 74.3472 cv
47.4634 75.209 47.9468 76.064 48.0728 76.542 cv
47.7954 76.2842 47.3027 75.8643 47.0264 76.3682 cv
46.7925 76.8013 45.9966 76.1899 45.6357 75.959 cv
45.0708 75.6021 44.5483 75.1831 44.0317 74.7603 cv
43.9507 74.6943 43.7324 74.5112 43.5186 74.3472 cv
43.1636 74.0752 42.8467 73.877 43.1895 74.3472 cv
43.2197 74.3853 43.2295 74.4092 43.2666 74.4561 cv
43.8936 75.2539 45.2627 77.5439 46.4907 77.5859 cv
46.8867 77.5493 46.9878 77.0923 47.0605 76.7822 cv
47.3926 76.8662 48.1313 76.7153 48.3135 77.002 cv
48.1816 76.1182 48.0474 75.2329 47.9126 74.3472 cv
f
61.8027 65.9116 mo
61.7275 66.1328 61.6558 66.3535 61.5806 66.5747 cv
61.5068 66.8037 60.3599 66.3857 60.1987 66.3247 cv
58.9355 65.8428 60.1157 66.7944 60.5156 67.1377 cv
61.0137 67.5625 60.5688 68.6626 60.9819 68.8447 cv
61.2036 68.1768 61.4297 67.5088 61.6538 66.8398 cv
61.752 66.5435 62.3096 66.4824 62.4556 66.0435 cv
62.6489 65.4517 62.501 64.7856 62.377 64.1948 cv
62.1855 64.7656 61.9946 65.3389 61.8027 65.9116 cv
f
34.9395 86.6006 mo
36.0366 86.1963 37.1587 85.8057 38.3154 85.5986 cv
39.0483 85.4658 40.0786 85.3682 40.7402 85.7783 cv
41.0376 85.9619 41.2373 86.251 41.3423 86.5791 cv
41.4087 86.7803 41.5654 87.0576 41.5654 86.7021 cv
41.5654 86.4502 41.4126 85.4951 41.5654 85.3135 cv
41.9414 85.2607 43.4653 85.3711 43.5864 85.1299 cv
42.8716 84.9756 42.1367 84.8838 41.4136 84.7627 cv
41.6514 85.5801 39.0854 85.4229 38.5054 85.2607 cv
37.3374 84.9326 36.7114 83.876 36.3164 82.8076 cv
35.3223 84.0791 34.3306 85.3525 33.3354 86.6211 cv
33.4844 86.7393 33.6333 86.8662 33.7856 86.9873 cv
34.1753 86.8408 34.5874 86.7314 34.9395 86.6006 cv
f
41.5342 76.7915 mo
41.5332 76.0576 41.1421 75.3477 40.9463 74.6504 cv
39.6582 75.0044 40.5352 76.6646 40.772 77.4507 cv
39.4351 76.8037 37.9893 76.3296 36.4873 76.5435 cv
35.6353 76.6665 35.0122 76.5728 34.1543 76.4336 cv
34.231 76.6455 34.3071 76.8545 34.3853 77.0654 cv
34.062 77.1577 33.7354 77.2417 33.4072 77.3076 cv
34.1592 78.3984 34.9102 79.4907 35.6631 80.5825 cv
35.7583 80.7153 35.7681 80.4194 35.748 80.3677 cv
35.604 79.9707 35.46 79.5728 35.314 79.1743 cv
35.0713 78.5063 34.8271 77.8384 34.582 77.1685 cv
35.9302 76.7915 36.8193 77.0127 38.1992 77.2363 cv
39.0562 77.3755 40.2251 77.3545 41.0132 77.7407 cv
41.1084 77.4224 41.5391 77.2876 41.5342 76.7915 cv
f
51.7974 85.2295 mo
51.0283 85.4814 49.3506 86.4248 48.5923 85.8291 cv
47.8774 85.2666 47.9165 85.1143 47.0874 85.6143 cv
46.6885 85.8545 46.2104 86.1592 45.7202 86.1143 cv
45.6333 86.0869 44.7144 85.6592 44.7886 85.9092 cv
45.8682 86.7178 47.0684 86.0674 48.2524 86.0557 cv
48.8916 86.0498 48.7822 86.7979 48.8872 87.3369 cv
49.4434 86.9873 49.9663 87.0713 50.5703 87.1611 cv
51.3252 86.9092 52.0913 86.6123 52.8691 86.2725 cv
52.5874 85.6924 52.2324 85.0889 51.7974 85.2295 cv
f
57.54 75.3022 mo
57.2559 75.9653 56.9722 76.6274 56.686 77.291 cv
56.2319 78.3501 55.502 78.9863 54.5059 79.6104 cv
53.3013 80.3623 51.8501 80.9795 50.4102 81.0371 cv
49.8911 80.8345 49.2969 79.9302 48.896 79.5293 cv
48.3672 80.6533 49.27 81.2192 50.3169 81.1914 cv
50.2559 82.0103 48.9429 82.2832 48.3203 82.3955 cv
48.1191 82.4326 47.6641 82.3594 47.541 82.5674 cv
47.6343 83.0088 50.0962 82.4414 50.3999 82.2949 cv
51.3892 81.8232 52.8252 80.5435 53.9009 81.4893 cv
54.8101 82.2813 54.3491 82.7334 53.9492 83.6592 cv
53.8599 83.8643 53.0972 85.3467 53.2622 85.4482 cv
53.4053 85.5361 54.293 84.46 54.4312 84.2764 cv
54.8789 83.6943 55.0303 82.9951 54.6899 82.3223 cv
54.7471 81.7725 55.228 81.0635 55.4473 80.5635 cv
55.772 79.8032 56.0981 79.0425 56.4253 78.2813 cv
56.6621 77.728 58.3071 75.8135 57.54 75.3022 cv
f
59.7363 65.7661 mo
59.7725 65.4282 59.9702 64.939 59.7114 64.6821 cv
59.1006 64.0732 li
58.7632 64.145 58.4336 64.2251 58.1045 64.311 cv
58.1982 64.396 58.2935 64.478 58.3882 64.563 cv
58.8374 64.9653 59.2852 65.3682 59.7363 65.7661 cv
f
56.0669 82.7393 mo
56.355 83.1943 56.688 83.6182 57.02 84.0439 cv
57.1958 83.9307 57.3721 83.8154 57.5469 83.6982 cv
57.1367 83.4229 56.562 82.8721 56.0669 82.7393 cv
f
53.9136 67.521 mo
54.2773 67.8711 54.6465 68.2148 54.9814 68.5942 cv
55.0996 68.7393 55.3994 69.2681 55.5483 69.313 cv
55.7754 69.6079 57.0947 71.0381 56.9077 71.2212 cv
56.5957 71.5239 56.2866 71.8301 55.9775 72.1318 cv
57.0396 72.0713 58.0996 72.0122 59.1597 71.9502 cv
59.3276 71.9399 59.3276 71.9629 59.3545 71.793 cv
58.7734 71.562 58.2197 71.2593 57.7246 70.8789 cv
57.5894 70.6289 57.7246 69.9673 57.7246 69.708 cv
58.3755 69.8633 59.0664 69.9082 59.6846 70.1899 cv
59.9888 70.3291 60.7168 71.2051 60.8325 71.1162 cv
60.1567 69.6992 58.5024 69.5898 57.1313 69.4609 cv
56.6797 69.418 56.4878 69.5161 56.3237 69.0459 cv
56.2065 68.708 56.1426 68.354 56.1426 67.9971 cv
56.2607 67.5288 56.9966 67.0332 57.3105 66.6631 cv
57.1035 66.5122 56.8984 66.3643 56.6904 66.2158 cv
56.5308 66.1001 57.0996 65.4302 57.2246 65.269 cv
56.7676 65.2959 56.3105 65.3232 55.8516 65.3481 cv
55.6606 65.3608 55.4707 65.3711 55.2764 65.3809 cv
55.3384 65.4263 55.4004 65.4702 55.4614 65.5161 cv
56.3984 66.1899 li
56.5566 66.3052 55.5645 68.7041 55.7544 69.231 cv
55.4507 69.1392 55.0977 68.4839 54.8838 68.2358 cv
54.5396 67.8379 54.1724 67.458 53.7485 67.145 cv
53.5884 66.9883 53.4468 66.811 53.2954 66.6411 cv
53.1724 66.502 53.0396 66.375 52.9277 66.231 cv
52.6294 66.374 52.3594 66.5093 52.1226 66.6309 cv
52.3965 66.667 52.6567 66.75 52.9067 66.856 cv
53.2734 67.0122 53.6147 67.2329 53.9136 67.521 cv
f
50.8813 71.3042 mo
50.6553 71.6172 50.7324 71.707 51.0244 71.812 cv
51.6304 72.0303 52.0015 72.8491 52.3882 73.3481 cv
52.6494 73.686 52.9194 74.0161 53.1875 74.3472 cv
53.6753 74.9531 54.1694 75.5581 54.6504 76.1704 cv
54.5903 76.2002 54.5313 76.2271 54.4702 76.2563 cv
54.5361 76.3213 55.0225 76.7334 55.0225 76.4912 cv
54.9863 76.3975 54.9395 76.312 54.8735 76.2373 cv
56.1226 75.6504 li
55.5781 75.457 55.0352 75.2622 54.4932 75.0674 cv
54.0415 74.9063 54.1035 74.6743 54.2563 74.3472 cv
54.3232 74.2002 54.4082 74.0391 54.4756 73.8511 cv
54.6924 73.2524 54.9844 73.0732 54.3735 72.8545 cv
53.6362 72.5903 52.8984 72.3252 52.1592 72.0601 cv
51.7954 71.9292 50.8975 71.7134 51.1016 71.145 cv
51.3184 70.541 51.9214 69.811 51.2202 69.5332 cv
50.7056 69.3281 50.1401 69.166 49.6924 68.8301 cv
49.6753 68.8174 49.6563 68.8091 49.6401 68.7964 cv
49.6162 68.7783 49.5854 68.7354 49.5483 68.6821 cv
49.4644 68.7544 49.3794 68.832 49.2944 68.8994 cv
49.3184 68.9512 49.3525 69.0005 49.3813 69.0532 cv
49.8164 69.8691 50.4463 70.6763 50.8813 71.3042 cv
f
43.5332 80.3081 mo
42.9863 80.3081 42.6772 80.3403 42.1714 80.5083 cv
38.4063 81.7563 li
38.5581 82.1758 41.1104 81.9053 41.5952 81.9053 cv
43.772 81.9053 li
44.415 81.9053 44.2949 81.8901 44.2949 81.2153 cv
44.2949 80.3213 44.438 80.3081 43.5332 80.3081 cv
f
14.8838 70.2739 mo
15.4409 71.106 15.8569 70.3169 16.4775 69.8228 cv
15.8638 69.4609 15.5366 68.8799 15.4536 68.186 cv
15.4438 68.0991 15.4458 67.9878 15.4497 67.8657 cv
15.4556 67.751 15.4629 67.6289 15.4697 67.5029 cv
14.1187 68.1938 li
14.1558 68.3281 14.1899 68.4609 14.2246 68.5962 cv
14.3779 69.1831 14.543 69.7642 14.8838 70.2739 cv
f
37.6167 70.5747 mo
37.8999 70.5718 38.2925 70.2446 38.4966 70.4507 cv
38.7715 70.7246 39.0435 70.9985 39.3188 71.272 cv
39.9009 71.8579 39.6846 71.8027 39.0977 72.3877 cv
38.4419 73.043 37.7065 73.6396 37.1045 74.3467 cv
37.0444 74.4199 36.9766 74.4868 36.9185 74.563 cv
36.9595 74.5957 37.1045 74.5068 37.3105 74.3467 cv
38.1328 73.7158 39.9395 71.917 40.1357 71.7109 cv
40.3037 71.5337 40.6338 71.1226 40.9326 70.6587 cv
40.9648 70.6079 40.9966 70.563 41.0288 70.5117 cv
40.0327 70.2529 39.1968 69.9009 38.6064 69.6118 cv
38.5635 69.6387 38.5137 69.6729 38.4658 69.7065 cv
37.9697 70.0366 37.2378 70.5747 37.6167 70.5747 cv
f
19.4814 80.4243 mo
18.5625 80.6743 18.3843 81.4146 18.3345 82.2021 cv
18.6826 82.1465 19.0322 82.0962 19.3975 82.0615 cv
19.4692 81.5205 19.4307 80.9673 19.4814 80.4243 cv
f
13.522 82.6201 mo
13.959 82.6045 14.4761 82.7822 14.9067 82.8584 cv
15.062 82.8838 15.2368 82.8994 15.4082 82.9209 cv
15.8228 82.7803 16.2598 82.6514 16.7129 82.5361 cv
15.9448 82.2998 15.145 82.21 14.3091 82.3213 cv
13.7012 82.4023 13.228 82.3838 12.6958 82.3125 cv
12.8198 82.6133 12.894 82.7959 12.8711 82.7432 cv
13.0527 82.708 13.2632 82.6787 13.522 82.6201 cv
f
10.46 75.6118 mo
10.7368 76.332 11.0161 77.0508 11.293 77.772 cv
11.668 78.7427 11.5752 77.4058 11.5591 76.9937 cv
11.5391 76.5098 11.4697 76.019 11.2197 75.5967 cv
11.0229 75.2637 10.3882 75 10.2788 74.7188 cv
10.1348 74.3467 li
8.88477 71.103 li
8.8042 70.8989 li
8.79395 70.873 8.79004 70.8447 8.78076 70.8208 cv
8.62891 70.8848 li
9.01514 72.1631 9.43018 73.4517 9.86914 74.749 cv
10.1348 74.9209 10.2979 75.1958 10.46 75.6118 cv
f
17.8911 74.3472 mo
17.8481 75.147 17.9321 75.9609 17.9731 76.4771 cv
18.0322 77.252 18.2119 78.0693 17.7881 78.7681 cv
17.6152 78.8579 16.9272 78.6211 16.7412 78.5903 cv
16.229 78.502 15.7183 78.415 15.2051 78.3281 cv
14.4673 78.2031 14.541 78.1763 14.2749 77.3711 cv
13.9639 76.4399 13.7373 75.2329 14.1099 74.3472 cv
14.3032 73.8862 14.6509 73.5063 15.2568 73.3081 cv
14.5859 73.1924 13.916 73.0791 13.2471 72.9634 cv
12.686 72.8682 13.2739 71.0283 12.8042 70.9609 cv
12.7373 72.1963 12.9199 73.2539 13.208 74.3472 cv
13.3892 75.0283 13.6108 75.7212 13.8423 76.479 cv
13.8633 76.7271 13.7319 78.1401 13.8291 78.2461 cv
13.874 78.2949 14.1929 78.3091 14.25 78.3174 cv
14.6279 78.3833 14.6123 78.7231 14.749 79.061 cv
15.0029 79.6899 16.0361 79.752 16.668 79.6621 cv
17.229 79.5801 17.6899 78.874 18.1431 78.9829 cv
18.3389 77.6123 18.4082 76.2622 18.3911 74.875 cv
18.3911 74.7002 18.3911 74.522 18.3931 74.3472 cv
18.3931 73.9263 18.4072 73.502 18.4883 73.0884 cv
18.5781 72.625 19.0991 72.2783 19.0889 71.958 cv
18.2183 72.2681 17.9463 73.2974 17.8911 74.3472 cv
f
26.1367 81.3647 mo
25.7988 81.0029 25.3574 80.8389 24.8677 80.9209 cv
24.3154 81.0107 23.7476 80.7876 23.1646 80.8267 cv
22.6206 80.8618 22.5977 79.9785 22.4487 79.4946 cv
22.2036 80.0967 21.9565 80.6978 21.7119 81.3008 cv
22.0508 81.1807 22.3999 81.0815 22.7568 81.0249 cv
22.8755 81.0928 22.9595 81.688 23.0039 81.834 cv
23.4194 81.6709 23.8135 81.46 24.2246 81.2817 cv
24.8115 81.0298 25.3687 81.4438 25.8086 81.8516 cv
26.1436 82.1587 26.3008 82.4805 26.4209 82.8408 cv
26.5479 82.8799 26.6748 82.9229 26.8027 82.9678 cv
26.5635 82.4277 26.3169 81.9517 26.1367 81.3647 cv
f
32.2173 72.2466 mo
31.7915 72.6724 31.2354 73.0327 30.6963 73.3008 cv
30.3784 73.4575 30.0415 73.5825 29.6953 73.6626 cv
29.1992 73.7798 29.1641 73.5317 28.8403 73.1968 cv
28.3813 72.7266 27.8364 72.1826 27.8423 71.4766 cv
27.8423 70.9634 28.623 70.2817 29.0024 69.9717 cv
29.5093 69.5576 30.0874 69.3428 30.7314 69.5537 cv
30.8403 69.3667 30.0283 68.8706 29.8613 68.6226 cv
29.4351 67.9927 29.5005 67.4307 29.5005 66.7056 cv
29.5005 66.5864 29.4595 65.8384 29.3774 65.4185 cv
29.3384 65.2178 29.2891 65.0854 29.2324 65.1494 cv
29.2324 65.2153 29.2334 65.2817 29.2354 65.3486 cv
29.2471 66.8613 29.3955 68.3145 28.7104 69.7266 cv
28.2012 70.7773 27.2803 71.7188 26.2954 72.3574 cv
26.7534 72.8145 27.2134 73.2734 27.6714 73.7314 cv
27.7563 73.8164 27.5361 74.0796 27.2661 74.3477 cv
26.9824 74.6304 26.6455 74.9185 26.5483 75.0166 cv
26.2974 75.2666 26.3271 75.3638 26.7554 75.2207 cv
27.3901 75.0073 28.0352 74.8267 28.6724 74.6157 cv
28.915 74.5356 29.1523 74.4395 29.3853 74.3477 cv
30.4512 73.9268 31.4404 73.3613 32.2061 72.4824 cv
32.5503 72.8228 32.8921 73.1646 33.2373 73.5088 cv
33.4063 73.6768 33.4214 74.0166 33.4302 74.3477 cv
33.4395 74.6846 33.4424 75.0098 33.5952 75.1357 cv
33.8423 75.1357 33.7622 74.6606 33.7354 74.3477 cv
33.7324 74.3008 33.728 74.2563 33.728 74.2197 cv
33.7251 73.5903 33.0571 72.4517 32.3765 72.3125 cv
33.3613 71.4434 34.2544 70.4336 35.1821 69.5034 cv
35.4683 69.2207 35.7524 68.9346 36.0342 68.6504 cv
36.0981 68.5884 36.1621 68.5254 36.2261 68.4614 cv
36.0332 68.3755 li
35.9644 68.4355 35.9014 68.5005 35.8345 68.5586 cv
34.5503 69.6914 33.4243 71.0435 32.2173 72.2466 cv
f
19.3384 65.395 mo
19.9321 66.3398 21.0244 67.4829 20.3672 68.6221 cv
19.8975 69.436 19.6152 68.9502 18.9082 68.6689 cv
18.4521 68.4893 17.9805 68.3652 17.4985 68.2729 cv
17.9082 68.6841 18.3193 69.0962 18.7314 69.5059 cv
18.8003 69.5781 19.0542 69.9238 19.1602 69.938 cv
19.7373 70.0112 19.5864 69.0991 20.2246 69.5649 cv
21.1572 70.249 21.8735 71.1802 22.4302 72.1841 cv
22.7202 72.7031 22.9712 73.2441 23.1992 73.793 cv
23.2793 73.9893 23.3115 74.1709 23.3252 74.3472 cv
23.3623 74.7759 23.2842 75.1719 23.4482 75.6411 cv
23.9272 76.124 24.1592 76.4463 24.3804 77.0933 cv
24.5464 77.5879 24.6694 78.29 25.0112 78.6909 cv
25.6045 79.3872 26.6206 79.6982 27.4722 79.9229 cv
28.3726 80.1611 29.2983 80.3071 30.2275 80.3818 cv
31.0244 80.4473 32.5322 80.2803 30.9072 79.9092 cv
31.1333 79.6831 32.3013 78.7778 32.2563 78.561 cv
32.2896 78.5322 32.1304 78.4722 32.0225 78.582 cv
31.7954 78.8052 31.5781 79.0698 31.3306 79.27 cv
28.9531 81.104 26.3755 78.4609 24.7954 76.8281 cv
24.2852 76.3013 24.1343 75.874 23.8936 75.1909 cv
23.7603 74.8091 23.7075 74.5688 23.7554 74.3472 cv
23.8032 74.1201 23.9595 73.916 24.2485 73.606 cv
24.3394 73.5078 25.1191 72.7749 25.0454 72.7012 cv
24.7861 72.4419 24.5254 72.1821 24.2642 71.9209 cv
23.6714 71.3291 23.4976 71.3789 24.1543 70.8271 cv
24.8184 70.2671 25.3745 69.541 25.9922 68.9248 cv
27.4985 67.4199 25.5835 65.939 24.4204 64.918 cv
24.1182 64.6509 23.7773 64.3892 23.6846 64.022 cv
23.6636 63.9438 23.6392 63.8682 23.6455 63.7759 cv
23.6504 63.7368 23.6484 63.6982 23.6514 63.6592 cv
23.6182 63.6611 23.5864 63.6611 23.5552 63.6621 cv
23.5493 63.7842 23.5361 63.9092 23.5273 64.0303 cv
23.4443 65.105 23.2983 66.189 23.4683 67.1118 cv
23.9663 66.6162 24.4644 66.1182 24.9624 65.6201 cv
25.5796 66.334 26.5474 67.0122 26.4033 68.0723 cv
26.3223 68.6802 25.3022 69.4092 24.8462 69.8599 cv
24.4155 70.2881 23.9873 70.8682 23.4243 71.125 cv
22.8633 71.3828 22.1943 71.4829 22.1094 70.8311 cv
22.0166 70.1431 21.7886 69.479 21.5034 68.8481 cv
20.9966 67.7251 20.4404 66.5303 19.6802 65.5552 cv
19.6182 65.4771 19.5625 65.3882 19.5034 65.3052 cv
19.4214 65.188 19.3394 65.0762 19.2603 64.9561 cv
19.2021 64.9868 19.1533 65.0181 19.1025 65.0488 cv
19.1904 65.1821 19.2612 65.2842 19.2925 65.3213 cv
19.3062 65.3442 19.3232 65.3711 19.3384 65.395 cv
f
28.6279 82.3379 mo
28.1328 82.5869 27.6357 82.835 27.1372 83.085 cv
27.4761 83.21 27.813 83.3486 28.1558 83.4951 cv
28.314 83.1104 28.4697 82.7236 28.6279 82.3379 cv
f
89.4829 86.7314 mo
89.5171 86.4854 89.5566 86.2568 89.623 86.1494 cv
89.9409 85.626 90.4839 85.0205 90.9751 84.6729 cv
90.5107 84.208 90.0469 83.7451 89.582 83.2822 cv
89.4048 83.1025 90.2979 82.4043 90.4561 82.2461 cv
91.041 81.6626 91.6279 81.0796 92.2119 80.4946 cv
92.5391 80.1714 92.1167 80.3774 92.2007 80.1162 cv
92.6299 79.2544 92.6479 78.3096 92.3618 77.4004 cv
91.5698 77.0854 90.1221 77.3442 89.2119 77.3442 cv
92.002 80.1333 li
92.415 80.5454 89.2339 82.8154 89.2847 83.2021 cv
89.3369 83.5791 90.4131 84.3311 90.7007 84.6162 cv
89.8906 84.9404 89.0791 85.2646 88.269 85.5889 cv
88.6567 85.9678 89.0498 86.3525 89.4468 86.749 cv
89.4468 86.749 89.46 86.7412 89.4829 86.7314 cv
f
102.272 74.3472 mo
101.301 75.9512 99.6572 79.4634 99.3975 79.96 cv
98.9443 80.8262 98.4883 81.6924 98.0366 82.5576 cv
97.9736 82.6787 98.9053 82.0264 98.9995 81.9482 cv
99.0767 81.8853 99.2046 81.791 99.3516 81.686 cv
99.4136 81.6401 99.4795 81.5942 99.5454 81.541 cv
99.5845 81.5161 99.6206 81.4873 99.6572 81.459 cv
99.7383 81.397 99.8193 81.334 99.8945 81.272 cv
99.9204 81.248 99.9482 81.228 99.9727 81.207 cv
100.062 81.1289 100.132 81.0552 100.192 80.9854 cv
100.21 80.9634 100.228 80.9434 100.242 80.9233 cv
100.286 80.8604 100.32 80.7974 100.32 80.7461 cv
100.364 80.7231 100.402 80.6753 100.438 80.6182 cv
100.448 80.6001 100.459 80.583 100.469 80.563 cv
100.485 80.5322 100.5 80.4961 100.515 80.4609 cv
100.547 80.3813 100.579 80.2974 100.604 80.209 cv
100.647 80.0752 100.685 79.9409 100.717 79.8423 cv
101.019 78.9863 101.318 78.127 101.621 77.272 cv
101.961 76.2974 102.306 75.3213 102.647 74.3472 cv
102.742 74.082 102.833 73.8174 102.926 73.5513 cv
102.821 73.5142 102.582 73.8359 102.272 74.3472 cv
f
105.318 78.2622 mo
104.794 76.9531 104.565 75.4341 106.333 75.1021 cv
106.239 74.8511 106.149 74.6001 106.058 74.3472 cv
105.878 73.8521 105.696 73.3564 105.512 72.8623 cv
105.2 73.3452 105.01 73.8413 104.896 74.3472 cv
104.528 75.9595 104.967 77.6714 104.966 79.3604 cv
104.964 79.9385 104.896 80.5322 104.626 81.0522 cv
104.278 81.7192 103.551 80.8784 102.983 81.2734 cv
102.665 81.4961 102.612 81.8604 102.655 82.21 cv
103.949 81.8872 105.297 81.582 106.683 81.3203 cv
106.303 80.2734 105.722 79.2725 105.318 78.2622 cv
f
98.0293 69.5435 mo
98.6021 70.1113 98.3794 70.2036 98.0771 70.9717 cv
98.4331 71.7363 99.4053 72.4282 100.289 72.4282 cv
100.502 72.4272 101.01 72.5264 101.091 72.5044 cv
101.557 72.1455 102.036 71.7822 102.487 71.4053 cv
103.367 70.6714 104.096 69.7832 104.94 69.0146 cv
105.262 68.7173 105.614 68.4185 106.026 68.2466 cv
106.315 68.1865 106.771 68.3145 106.86 68.0396 cv
105.719 67.6772 104.322 68.8936 103.614 69.6294 cv
103.346 69.9063 101.274 72.5645 100.88 72.1704 cv
100.35 71.6445 99.8252 71.1177 99.2964 70.5903 cv
99.0923 70.3872 98.8872 70.1846 98.6851 69.9814 cv
98.5073 69.8032 99.2041 68.7695 99.6392 68.1816 cv
99.5024 68.1885 99.3682 68.1934 99.2334 68.1973 cv
98.7202 68.8545 98.2402 69.4023 98.0293 69.5435 cv
f
94.6982 74.3472 mo
94.6875 74.4731 94.6802 74.5952 94.6802 74.7192 cv
94.6802 74.979 95.2681 76.8271 95.4741 76.4243 cv
95.0361 75.8423 94.9063 75.0752 94.9302 74.3472 cv
94.936 74.1924 94.9404 74.0371 94.9604 73.8892 cv
95.1812 72.1289 96.9722 70.312 96.3853 68.4712 cv
96.3335 68.3091 96.2573 68.1602 96.1675 68.022 cv
95.7642 67.9673 95.3784 67.9033 95.0083 67.8301 cv
95.1514 68.0039 95.2803 68.1699 95.3413 68.2974 cv
96.2822 70.27 94.8691 72.3423 94.6982 74.3472 cv
f
89.5786 68.4321 mo
89.6846 68.8032 89.8516 69.2012 89.9087 69.584 cv
89.7847 70.4609 90.2725 70.8521 90.4736 71.5552 cv
90.7417 72.4873 91.0073 73.417 91.2734 74.3472 cv
91.3647 74.6611 91.4536 74.9751 91.5435 75.2891 cv
91.6484 75.6523 91.7036 74.7861 91.7065 74.9253 cv
91.7017 74.7329 91.6997 74.54 91.6968 74.3472 cv
91.6904 73.9609 91.6904 73.5762 91.7363 73.1924 cv
91.8525 72.2329 92.3086 71.438 93.2085 71.02 cv
92.8286 70.6392 92.4487 70.2603 92.0664 69.8804 cv
91.5864 70.3604 91.1016 70.8423 90.6206 71.3232 cv
89.4824 69.5503 90.7354 68.3813 91.4224 66.8042 cv
91.4287 66.7939 91.4336 66.7852 91.4375 66.7739 cv
90.0596 66.2173 89.2783 65.7109 89.2783 65.7109 cv
89.0903 65.606 88.9033 65.522 88.7178 65.4263 cv
88.7485 65.5391 88.7817 65.6514 88.8135 65.7642 cv
89.0674 66.6533 89.3228 67.543 89.5786 68.4321 cv
f
98.4229 74.3472 mo
98.335 74.25 98.249 74.166 98.1709 74.1001 cv
97.7109 73.7021 97.7427 73.9531 97.915 74.3472 cv
98.0967 74.7661 98.4326 75.3462 98.5049 75.4932 cv
98.686 75.8521 98.8657 76.2134 99.0498 76.5752 cv
99.1978 76.8711 98.2837 77.5532 98.0889 77.7764 cv
97.2407 78.7554 96.292 80.0371 94.8179 79.563 cv
94.8159 80.5933 94.6729 81.7012 95.0459 82.6904 cv
95.2769 83.2979 95.7217 83.7725 96.3037 84.0635 cv
96.4736 83.9365 95.8447 82.8936 95.7769 82.6006 cv
95.208 80.082 98.1499 78.877 99.1089 76.9634 cv
99.8779 76.3662 99.0576 75.0303 98.4229 74.3472 cv
f
109.024 66.9517 mo
109.17 66.9028 109.393 66.8799 109.534 66.9458 cv
108.845 68.2856 108.155 69.6255 107.464 70.9668 cv
107.588 70.9678 107.713 71.0586 107.84 71.0557 cv
107.632 71.2798 107.455 73.3354 107.748 73.4048 cv
108.254 73.5215 108.763 73.6406 109.273 73.7607 cv
109.22 73.1465 109.17 72.5317 109.117 71.9185 cv
109.045 71.0786 109.026 71.1768 108.182 70.9785 cv
108.501 70.7935 109.596 70.4355 109.701 70.1035 cv
109.71 70.0737 109.5 69.5537 109.5 69.4658 cv
109.498 69.0396 109.618 68.6196 109.713 68.2104 cv
109.851 67.6299 109.646 67.0615 109.893 66.5864 cv
109.993 66.3896 110.193 66.1216 110.268 65.8906 cv
110.272 65.8745 110.282 65.8574 110.285 65.8428 cv
110.172 65.8599 110.068 65.8774 109.959 65.8945 cv
109.942 65.9146 109.924 65.9316 109.909 65.9517 cv
109.614 66.2856 109.319 66.6206 109.024 66.9517 cv
f
112.549 68.9243 mo
112.473 68.6963 111.852 67.2192 111.6 67.3672 cv
111.47 67.4424 111.652 67.7095 111.696 67.8281 cv
111.986 68.5771 112.278 69.3262 112.567 70.0762 cv
112.925 71.0083 112.605 72.2485 112.32 73.1621 cv
112.256 73.3672 112.091 73.8384 111.869 74.3472 cv
111.481 75.2402 110.917 76.2544 110.417 76.1646 cv
109.732 76.0435 109.046 75.9204 108.361 75.7993 cv
108.75 76.8901 109.693 77.0825 110.572 76.3564 cv
111.296 77.4385 109.902 78.1963 109.562 79.0234 cv
109.708 79.2544 110.5 78.4082 110.611 78.3223 cv
110.665 78.2886 110.708 78.2373 110.755 78.1953 cv
111.64 75.8086 112.429 73.4512 113.134 71.1255 cv
113.126 71.1045 113.118 71.0825 113.11 71.0615 cv
112.835 70.3525 112.788 69.6426 112.549 68.9243 cv
f
64.6572 64.0493 mo
64.8062 64.4976 64.9473 64.9185 64.2954 64.9365 cv
64.4224 65.2144 64.9961 66.0264 65.0215 65.2295 cv
65.0171 64.7095 65.2095 64.8384 65.7002 64.7993 cv
66.2012 64.7603 66.7061 64.7563 67.2061 64.7314 cv
67.3013 64.7285 67.3862 64.7363 67.4741 64.7363 cv
67.6685 64.7373 67.8613 64.7354 68.0513 64.7466 cv
67.7651 64.6025 67.6045 64.4966 67.6045 64.4966 cv
66.6152 64.0854 65.5845 63.8423 64.5415 63.7256 cv
64.5571 63.7744 64.5845 63.8242 64.6001 63.8755 cv
64.6182 63.9346 64.6372 63.9912 64.6572 64.0493 cv
f
78.6265 75.9077 mo
77.6772 75.0918 78.8184 77.0117 78.9604 77.2969 cv
78.9893 77.3516 79.0195 77.4087 79.0474 77.4658 cv
79.2822 77.6528 79.5645 77.8779 79.8735 78.1279 cv
79.8965 77.3506 79.0977 76.3115 78.6265 75.9077 cv
f
60.2422 77.0103 mo
59.1543 77.5532 58.2832 78.4521 58.6353 79.7402 cv
58.8311 80.4492 59.2554 81.082 59.6841 81.6675 cv
59.748 81.7544 59.8433 81.8584 59.9443 81.9673 cv
60.165 81.8232 60.5264 81.5942 60.9893 81.3301 cv
60.7412 79.8911 60.4912 78.4492 60.2422 77.0103 cv
f
72.9995 74.3472 mo
72.9126 74.106 72.8232 73.8643 72.7363 73.6211 cv
72.6284 73.3252 71.6426 73.3384 71.3506 73.293 cv
70.2383 73.1162 70.0435 72.2212 69.7715 71.1899 cv
69.7593 70.5513 68.6543 69.2471 69.2783 68.7739 cv
69.9473 68.2632 71.2754 68.75 72.0244 68.813 cv
71.8936 68.4551 71.7427 67.4771 71.4556 67.248 cv
71.1973 67.0474 70.3457 67.0713 70.0293 67.022 cv
69.2485 66.896 68.4663 66.77 67.6846 66.647 cv
66.9946 66.5352 67.0376 66.5464 66.7886 65.8643 cv
66.4966 66.189 66.2036 66.5161 65.9106 66.8413 cv
67.0596 67.7603 68.7266 68.7241 69.2417 70.1533 cv
69.3745 70.5181 69.7534 71.0762 69.5303 71.4531 cv
69.0996 72.186 67.1553 71.7803 66.5903 71.46 cv
65.6353 70.9199 65.2437 70.0532 64.8667 69.0713 cv
64.7612 68.7983 64.3442 67.9902 64.5405 68.8701 cv
64.6533 69.3872 64.8433 69.895 65.1387 70.3403 cv
66.2925 72.085 68.4805 72.2871 70.3066 73.105 cv
70.4863 73.1802 70.3823 73.29 70.7183 73.3452 cv
71.1333 73.4102 71.5864 73.7993 71.9097 74.0532 cv
72.0225 74.144 72.1226 74.25 72.2285 74.3472 cv
72.5483 74.6401 72.8442 74.9551 73.0977 75.3101 cv
73.1484 75.3833 73.5356 75.8149 73.4023 75.4492 cv
73.2695 75.0811 73.1343 74.7144 72.9995 74.3472 cv
f
64.4106 78.9829 mo
64.5967 79.2129 64.8027 79.4341 65.0225 79.6479 cv
65.3345 79.5659 65.6499 79.4951 65.9717 79.438 cv
65.6016 78.9038 65.2808 78.3369 65.0088 77.749 cv
64.7856 77.2661 65.4785 76.8169 65.4897 76.2397 cv
65.4849 75.7251 65.0796 75.3638 64.6694 75.1201 cv
64.4458 74.9897 64.2119 74.8789 63.9697 74.7861 cv
63.9326 74.6401 63.9038 74.4941 63.8667 74.3472 cv
63.7959 74.061 63.7236 73.7739 63.6616 73.4839 cv
63.4785 72.6509 63.3276 71.812 63.1816 70.9731 cv
63.0186 70.0342 62.9546 70.019 62.6938 70.791 cv
62.2979 71.9761 61.8984 73.1621 61.5024 74.3472 cv
61.4727 74.436 61.4438 74.5239 61.4136 74.6128 cv
62.8105 74.6128 li
63.9048 74.6128 63.9355 75.3198 64.2305 76.1938 cv
64.4038 76.707 64.8755 77.2939 64.4888 77.7212 cv
64.1685 78.0752 63.8335 78.415 63.5356 78.7852 cv
63.1694 79.2368 62.8354 79.7778 62.9136 80.376 cv
62.9185 80.4111 63.0308 80.3638 63.0869 80.3071 cv
63.5278 79.8657 63.9688 79.4219 64.4106 78.9829 cv
f
81.3062 64.8599 mo
81.396 64.8599 81.4004 64.2368 81.3711 63.979 cv
81.3672 63.9341 81.3613 63.897 81.353 63.8799 cv
81.2661 63.8359 81.1631 63.7471 81.0571 63.6406 cv
80.8301 63.6421 80.6152 63.6489 80.397 63.6567 cv
80.4502 63.77 80.5093 63.8779 80.5649 63.9819 cv
80.8281 64.4707 81.105 64.8599 81.3062 64.8599 cv
f
82.499 78.0825 mo
82.749 77.6274 82.9072 77.1255 83.0449 76.6274 cv
83.2871 75.7646 83.583 75.1465 84.043 74.3716 cv
84.0469 74.3638 84.0522 74.3545 84.0562 74.3477 cv
84.7412 73.1846 85.376 71.9756 85.7813 70.6846 cv
85.96 70.1104 86.0923 69.5215 86.1499 68.9258 cv
86.207 68.3535 86.6631 67.9946 87.0703 67.6035 cv
86.873 67.5967 86.2988 67.6807 86.1499 67.5684 cv
86.0811 66.9023 85.9009 66.2627 85.646 65.6445 cv
85.394 66.2285 85.1392 66.8115 84.8853 67.3965 cv
84.7729 67.6567 84.1221 67.4888 83.874 67.4785 cv
83.062 67.4468 82.248 67.4146 81.4331 67.3823 cv
81.229 67.3726 80.0059 67.1685 79.8599 67.3184 cv
79.6572 67.5317 80.7261 67.5596 80.8052 67.5664 cv
81.686 67.6567 82.5679 67.7446 83.4512 67.8315 cv
83.7339 67.8613 84.5669 67.7915 84.8032 67.9697 cv
85.0742 68.1714 84.6963 68.5117 85.146 68.5298 cv
85.207 68.5308 85.7739 68.5483 85.957 68.5674 cv
85.8242 68.9087 85.54 69.1953 85.3369 69.5225 cv
84.9331 70.1743 84.5952 70.8647 84.313 71.5747 cv
83.9521 72.4785 83.688 73.4097 83.4482 74.3477 cv
83.3491 74.7363 83.2529 75.1265 83.1592 75.5166 cv
82.4219 76.6787 81.6499 77.8145 80.8853 78.9575 cv
80.936 79.0005 80.9941 79.0493 81.0459 79.0947 cv
81.687 79.0337 82.1812 78.6655 82.499 78.0825 cv
f
84.4209 81.5278 mo
85.064 80.9277 84.7588 80.8618 84.1108 81.3208 cv
84.1108 79.6816 li
84.1108 79.1079 85.4619 78.376 85.9248 78.1587 cv
86.4307 77.9199 86.9849 77.8521 87.5259 77.9868 cv
87.5669 77.9971 88.4316 78.311 88.2261 78.0757 cv
87.9658 77.7827 87.4937 76.9917 87.1377 76.897 cv
85.1597 77.2939 84.2158 78.8047 83.5181 80.5068 cv
83.4478 80.6738 83.3789 80.8457 83.3076 81.022 cv
83.5801 81.2578 83.8569 81.5029 84.1431 81.7549 cv
84.2329 81.6758 84.334 81.6079 84.4209 81.5278 cv
f
77.0181 66.0132 mo
76.7979 67.3071 75.5562 68.2539 75.543 69.6143 cv
75.543 70.2002 76.7192 69.917 77.1899 69.917 cv
76.9492 69.3071 77.1011 68.7153 77.4912 68.2051 cv
77.7671 67.8462 78.854 67.1621 78.4663 66.7773 cv
77.251 65.5674 li
77.1089 65.4243 77.1108 65.2241 77.0103 65.0474 cv
76.8931 64.8403 76.7222 64.6763 76.5381 64.5283 cv
76.4331 64.4443 76.3281 64.3594 76.2119 64.2871 cv
76.0762 64.3252 75.9639 64.3594 75.8643 64.3892 cv
75.9551 64.4692 76.0562 64.5522 76.1563 64.6362 cv
76.6143 65.0264 77.1108 65.4771 77.0181 66.0132 cv
f
74.5122 77.8774 mo
74.8262 77.3164 75.0132 76.6953 75.2021 76.0864 cv
75.7124 75.5103 76.2051 74.9224 76.7192 74.3477 cv
76.748 74.3135 76.7793 74.2754 76.8101 74.2427 cv
77.9233 73.0024 79.166 71.8296 80.7231 71.1685 cv
81.1851 71.0283 81.6504 70.8916 82.1143 70.7505 cv
82.2354 70.7153 82.291 70.6973 82.209 70.5625 cv
81.6914 70.6616 81.2251 70.8574 80.7271 71.0083 cv
79.7793 71.2935 78.8311 71.5786 77.8833 71.8633 cv
76.7622 72.1992 75.6411 72.5376 74.5161 72.8755 cv
74.229 72.9614 74.4004 73.0742 74.625 73.1196 cv
75.1631 73.2295 75.7031 73.3364 76.2422 73.4443 cv
76.001 73.7114 75.8203 74.0225 75.666 74.3477 cv
75.4673 74.7695 75.3164 75.2173 75.1763 75.6484 cv
74.9243 76.4365 74.0571 77.1274 73.4263 77.6475 cv
72.8384 78.1333 71.9624 78.8677 71.1973 78.5254 cv
71.002 78.3633 70.8813 77.7373 70.7871 77.5044 cv
70.4434 76.6475 69.9722 76.7754 69.0649 76.5923 cv
68.9771 76.5742 68.6353 78.4883 68.5859 78.7344 cv
69.395 78.8984 70.1479 79.1143 70.979 78.9854 cv
71.3091 78.9346 71.6294 78.9346 71.936 78.9404 cv
74.0732 78.4614 li
74.228 78.3135 74.375 78.1255 74.5122 77.8774 cv
f
112.563 65.5913 mo
112.585 65.6104 112.614 65.6265 112.64 65.6465 cv
112.856 65.8203 113.103 65.9712 113.397 66.0845 cv
113.566 66.4443 113.738 66.8032 113.909 67.1602 cv
114.541 66.6274 114.363 66.5723 114.067 65.8096 cv
114.121 65.8242 114.349 65.8662 114.604 65.9033 cv
114.627 65.8071 114.652 65.7114 114.677 65.6172 cv
114.453 65.5913 114.224 65.5703 113.978 65.5625 cv
113.529 65.5474 113.054 65.5596 112.563 65.5913 cv
f
215.851 99.0127 mo
135.571 99.0127 li
135.571 92.9922 li
215.851 92.9922 li
215.851 99.0127 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
138.106 123.787 mo
135.703 109.593 li
136.988 109.593 li
138.275 109.593 li
139.845 120.377 li
139.843 120.377 li
141.647 109.593 li
143.127 109.593 li
144.606 109.593 li
146.589 120.548 li
146.595 120.548 li
148.134 109.593 li
149.353 109.593 li
150.582 109.593 li
148.218 123.787 li
146.568 123.787 li
144.918 123.787 li
143.05 113.697 li
143.052 113.697 li
141.408 123.787 li
139.757 123.787 li
138.106 123.787 li
cp
0 0 0 1 cmyk
f
152.322 113.908 mo
153.621 113.908 li
154.927 113.908 li
154.927 123.787 li
153.631 123.787 li
152.322 123.787 li
152.322 113.908 li
cp
152.312 109.713 mo
154.927 109.713 li
154.927 112.067 li
152.312 112.067 li
152.312 109.713 li
cp
f
161.059 116.876 mo
161.059 116.584 li
161.078 116.142 161.02 115.81 160.882 115.588 cv
160.745 115.367 160.531 115.256 160.236 115.256 cv
159.941 115.256 159.722 115.337 159.578 115.498 cv
159.436 115.658 159.363 115.903 159.363 116.232 cv
159.363 116.534 159.464 116.792 159.665 117.007 cv
159.865 117.215 160.214 117.426 160.708 117.641 cv
161.96 118.184 162.794 118.674 163.21 119.109 cv
163.617 119.545 163.82 120.155 163.82 120.94 cv
163.82 121.96 163.525 122.725 162.936 123.233 cv
162.345 123.743 161.454 123.998 160.27 123.998 cv
158.994 123.998 158.078 123.75 157.521 123.254 cv
156.977 122.771 156.704 121.996 156.704 120.93 cv
156.704 120.819 li
156.704 120.527 li
159.29 120.527 li
159.29 120.819 li
159.263 121.416 159.324 121.836 159.468 122.077 cv
159.613 122.318 159.878 122.438 160.263 122.438 cv
160.609 122.438 160.867 122.342 161.038 122.146 cv
161.21 121.953 161.296 121.658 161.296 121.262 cv
161.296 120.9 161.186 120.598 160.962 120.355 cv
160.747 120.122 160.37 119.888 159.833 119.652 cv
158.607 119.123 157.788 118.65 157.378 118.234 cv
156.979 117.825 156.779 117.262 156.779 116.544 cv
156.779 115.592 157.066 114.879 157.638 114.406 cv
158.212 113.934 159.076 113.697 160.23 113.697 cv
161.439 113.697 162.316 113.925 162.863 114.381 cv
163.41 114.837 163.684 115.548 163.684 116.514 cv
163.684 116.584 li
163.684 116.876 li
161.059 116.876 li
cp
f
172.061 120.085 mo
172.061 120.669 li
172.08 121.782 171.804 122.615 171.234 123.168 cv
170.664 123.722 169.802 123.998 168.65 123.998 cv
167.441 123.998 166.572 123.703 166.039 123.113 cv
165.505 122.522 165.238 121.563 165.238 120.236 cv
165.238 117.459 li
165.238 116.132 165.505 115.173 166.039 114.582 cv
166.572 113.992 167.441 113.697 168.65 113.697 cv
169.849 113.697 170.722 113.976 171.265 114.532 cv
171.794 115.062 172.061 115.903 172.061 117.057 cv
172.061 117.178 li
172.061 117.47 li
169.474 117.47 li
169.474 117.178 li
169.501 116.595 169.449 116.158 169.318 115.87 cv
169.188 115.582 168.974 115.438 168.679 115.438 cv
168.357 115.438 168.134 115.568 168.009 115.83 cv
167.886 116.091 167.824 116.567 167.824 117.258 cv
167.824 120.035 li
167.824 120.94 167.878 121.537 167.986 121.825 cv
168.091 122.114 168.314 122.258 168.65 122.258 cv
168.97 122.258 169.195 122.136 169.324 121.891 cv
169.451 121.646 169.501 121.238 169.474 120.669 cv
169.474 120.085 li
172.061 120.085 li
cp
f
178.201 121.966 mo
178.34 121.651 178.407 121.004 178.407 120.024 cv
178.407 117.248 li
178.407 116.518 178.33 116.002 178.172 115.704 cv
178.013 115.405 177.744 115.256 177.36 115.256 cv
176.979 115.256 176.711 115.405 176.556 115.704 cv
176.401 116.002 176.326 116.518 176.326 117.248 cv
176.326 120.024 li
176.326 121.004 176.392 121.651 176.526 121.966 cv
176.66 122.281 176.938 122.439 177.36 122.439 cv
177.785 122.439 178.063 122.281 178.201 121.966 cv
174.59 123.113 mo
174.022 122.523 173.739 121.563 173.739 120.237 cv
173.739 117.459 li
173.739 116.132 174.022 115.173 174.59 114.582 cv
175.155 113.992 176.08 113.697 177.36 113.697 cv
178.642 113.697 179.567 113.992 180.139 114.582 cv
180.709 115.173 180.994 116.132 180.994 117.459 cv
180.994 120.237 li
180.994 121.563 180.709 122.523 180.139 123.113 cv
179.567 123.703 178.642 123.998 177.36 123.998 cv
176.08 123.998 175.155 123.703 174.59 123.113 cv
f
183.056 113.908 mo
184.354 113.908 li
185.661 113.908 li
185.661 114.834 li
186.224 114.076 187.033 113.697 188.085 113.697 cv
188.829 113.697 189.386 113.913 189.755 114.347 cv
190.124 114.778 190.309 115.431 190.309 116.304 cv
190.309 123.787 li
189.011 123.787 li
187.702 123.787 li
187.702 116.604 li
187.702 116.202 187.63 115.91 187.486 115.729 cv
187.343 115.548 187.109 115.457 186.786 115.457 cv
186.352 115.457 186.048 115.629 185.876 115.972 cv
185.706 116.313 185.634 116.902 185.661 117.741 cv
185.661 123.787 li
184.363 123.787 li
183.056 123.787 li
183.056 113.908 li
cp
f
196.389 116.876 mo
196.389 116.584 li
196.408 116.142 196.35 115.81 196.212 115.588 cv
196.075 115.367 195.861 115.256 195.566 115.256 cv
195.271 115.256 195.052 115.337 194.908 115.498 cv
194.766 115.658 194.693 115.903 194.693 116.232 cv
194.693 116.534 194.794 116.792 194.995 117.007 cv
195.195 117.215 195.544 117.426 196.038 117.641 cv
197.29 118.184 198.124 118.674 198.54 119.109 cv
198.947 119.545 199.15 120.155 199.15 120.94 cv
199.15 121.96 198.855 122.725 198.266 123.233 cv
197.675 123.743 196.784 123.998 195.6 123.998 cv
194.324 123.998 193.408 123.75 192.852 123.254 cv
192.307 122.771 192.034 121.996 192.034 120.93 cv
192.034 120.819 li
192.034 120.527 li
194.62 120.527 li
194.62 120.819 li
194.593 121.416 194.654 121.836 194.798 122.077 cv
194.943 122.318 195.208 122.438 195.593 122.438 cv
195.939 122.438 196.197 122.342 196.368 122.146 cv
196.54 121.953 196.626 121.658 196.626 121.262 cv
196.626 120.9 196.516 120.598 196.292 120.355 cv
196.077 120.122 195.7 119.888 195.163 119.652 cv
193.938 119.123 193.118 118.65 192.708 118.234 cv
192.309 117.825 192.109 117.262 192.109 116.544 cv
192.109 115.592 192.396 114.879 192.968 114.406 cv
193.542 113.934 194.406 113.697 195.561 113.697 cv
196.77 113.697 197.646 113.925 198.193 114.381 cv
198.74 114.837 199.014 115.548 199.014 116.514 cv
199.014 116.584 li
199.014 116.876 li
196.389 116.876 li
cp
f
200.952 113.908 mo
202.25 113.908 li
203.558 113.908 li
203.558 123.787 li
202.26 123.787 li
200.952 123.787 li
200.952 113.908 li
cp
200.942 109.713 mo
203.558 109.713 li
203.558 112.067 li
200.942 112.067 li
200.942 109.713 li
cp
f
205.852 113.908 mo
207.15 113.908 li
208.456 113.908 li
208.456 114.834 li
209.021 114.076 209.828 113.697 210.88 113.697 cv
211.626 113.697 212.183 113.913 212.55 114.347 cv
212.919 114.778 213.105 115.431 213.105 116.304 cv
213.105 123.787 li
211.806 123.787 li
210.499 123.787 li
210.499 116.604 li
210.499 116.202 210.427 115.91 210.283 115.729 cv
210.138 115.548 209.906 115.457 209.583 115.457 cv
209.148 115.457 208.843 115.629 208.673 115.972 cv
208.501 116.313 208.429 116.902 208.456 117.741 cv
208.456 123.787 li
207.16 123.787 li
205.852 123.787 li
205.852 113.908 li
cp
f
225.665 113.988 mo
225.665 113.566 li
225.68 112.815 225.586 112.285 225.387 111.977 cv
225.186 111.668 224.834 111.514 224.331 111.514 cv
223.836 111.514 223.465 111.656 223.217 111.941 cv
222.971 112.227 222.846 112.654 222.846 113.225 cv
222.846 113.667 222.993 114.046 223.288 114.361 cv
223.575 114.676 224.086 115.005 224.815 115.347 cv
226.256 116.031 227.264 116.698 227.84 117.349 cv
228.418 117.999 228.706 118.798 228.706 119.743 cv
228.706 121.165 228.338 122.229 227.598 122.938 cv
226.854 123.645 225.741 123.998 224.254 123.998 cv
222.631 123.998 221.483 123.682 220.811 123.048 cv
220.137 122.414 219.799 121.38 219.799 119.944 cv
219.799 119.813 li
219.799 119.391 li
222.665 119.391 li
222.665 119.813 li
222.651 120.497 222.778 121.01 223.043 121.353 cv
223.307 121.694 223.711 121.865 224.252 121.865 cv
224.78 121.865 225.176 121.712 225.436 121.403 cv
225.696 121.095 225.827 120.628 225.827 120.005 cv
225.827 119.542 225.668 119.143 225.35 118.808 cv
225.032 118.472 224.479 118.117 223.688 117.741 cv
222.309 117.091 221.344 116.45 220.793 115.819 cv
220.241 115.196 219.965 114.421 219.965 113.496 cv
219.965 112.121 220.336 111.092 221.075 110.407 cv
221.817 109.724 222.932 109.381 224.42 109.381 cv
225.948 109.381 227.026 109.7 227.657 110.337 cv
228.247 110.94 228.538 111.913 228.532 113.254 cv
228.532 113.566 li
228.532 113.988 li
225.665 113.988 li
cp
f
235.248 117.802 mo
235.248 117.248 li
235.248 116.477 235.174 115.952 235.024 115.674 cv
234.879 115.396 234.6 115.256 234.19 115.256 cv
233.78 115.256 233.504 115.424 233.354 115.759 cv
233.207 116.095 233.135 116.729 233.135 117.66 cv
233.135 117.802 li
235.248 117.802 li
cp
233.969 123.998 mo
232.762 123.998 231.891 123.696 231.353 123.093 cv
230.815 122.489 230.549 121.504 230.549 120.136 cv
230.549 118.184 li
230.549 116.541 230.821 115.382 231.368 114.708 cv
231.916 114.034 232.854 113.697 234.19 113.697 cv
235.6 113.697 236.559 113.988 237.067 114.572 cv
237.577 115.155 237.832 116.256 237.832 117.872 cv
237.832 119.311 li
233.135 119.311 li
233.135 119.612 li
233.135 120.759 233.202 121.517 233.34 121.886 cv
233.478 122.255 233.762 122.439 234.19 122.439 cv
234.6 122.439 234.885 122.307 235.045 122.042 cv
235.207 121.776 235.272 121.336 235.246 120.719 cv
235.246 120.427 li
237.832 120.427 li
237.832 120.719 li
237.852 121.813 237.541 122.632 236.896 123.179 cv
236.252 123.726 235.276 123.998 233.969 123.998 cv
f
246.131 120.085 mo
246.131 120.669 li
246.15 121.782 245.876 122.615 245.307 123.168 cv
244.735 123.722 243.874 123.998 242.721 123.998 cv
241.514 123.998 240.643 123.703 240.109 123.113 cv
239.575 122.522 239.311 121.563 239.311 120.236 cv
239.311 117.459 li
239.311 116.132 239.575 115.173 240.109 114.582 cv
240.643 113.992 241.514 113.697 242.721 113.697 cv
243.922 113.697 244.792 113.976 245.335 114.532 cv
245.864 115.062 246.131 115.903 246.131 117.057 cv
246.131 117.178 li
246.131 117.47 li
243.544 117.47 li
243.544 117.178 li
243.571 116.595 243.521 116.158 243.391 115.87 cv
243.26 115.582 243.047 115.438 242.749 115.438 cv
242.43 115.438 242.204 115.568 242.081 115.83 cv
241.956 116.091 241.896 116.567 241.896 117.258 cv
241.896 120.035 li
241.896 120.94 241.948 121.537 242.057 121.825 cv
242.163 122.114 242.385 122.258 242.721 122.258 cv
243.042 122.258 243.268 122.136 243.395 121.891 cv
243.521 121.646 243.571 121.238 243.544 120.669 cv
243.544 120.085 li
246.131 120.085 li
cp
f
252.902 123.878 mo
252.392 123.958 251.812 123.998 251.162 123.998 cv
250.336 123.998 249.716 123.754 249.3 123.264 cv
248.884 122.774 248.677 122.043 248.677 121.071 cv
248.677 115.658 li
247.289 115.658 li
247.289 113.908 li
248.677 113.908 li
248.677 112.329 li
251.283 111.252 li
251.283 113.908 li
252.902 113.908 li
252.902 115.658 li
251.283 115.658 li
251.283 121.079 li
251.283 121.557 251.332 121.868 251.433 122.017 cv
251.533 122.164 251.752 122.238 252.088 122.238 cv
252.382 122.23 252.654 122.207 252.902 122.167 cv
252.902 123.878 li
cp
f
254.511 113.908 mo
255.809 113.908 li
257.116 113.908 li
257.116 123.787 li
255.818 123.787 li
254.511 123.787 li
254.511 113.908 li
cp
254.501 109.713 mo
257.116 109.713 li
257.116 112.067 li
254.501 112.067 li
254.501 109.713 li
cp
f
263.669 121.966 mo
263.809 121.651 263.876 121.004 263.876 120.024 cv
263.876 117.248 li
263.876 116.518 263.799 116.002 263.641 115.704 cv
263.481 115.405 263.213 115.256 262.829 115.256 cv
262.448 115.256 262.18 115.405 262.024 115.704 cv
261.87 116.002 261.794 116.518 261.794 117.248 cv
261.794 120.024 li
261.794 121.004 261.86 121.651 261.995 121.966 cv
262.128 122.281 262.407 122.439 262.829 122.439 cv
263.253 122.439 263.532 122.281 263.669 121.966 cv
260.059 123.113 mo
259.491 122.523 259.208 121.563 259.208 120.237 cv
259.208 117.459 li
259.208 116.132 259.491 115.173 260.059 114.582 cv
260.624 113.992 261.549 113.697 262.829 113.697 cv
264.11 113.697 265.036 113.992 265.607 114.582 cv
266.178 115.173 266.463 116.132 266.463 117.459 cv
266.463 120.237 li
266.463 121.563 266.178 122.523 265.607 123.113 cv
265.036 123.703 264.11 123.998 262.829 123.998 cv
261.549 123.998 260.624 123.703 260.059 123.113 cv
f
268.525 113.908 mo
269.822 113.908 li
271.13 113.908 li
271.13 114.834 li
271.693 114.076 272.502 113.697 273.554 113.697 cv
274.298 113.697 274.854 113.913 275.224 114.347 cv
275.593 114.778 275.777 115.431 275.777 116.304 cv
275.777 123.787 li
274.479 123.787 li
273.171 123.787 li
273.171 116.604 li
273.171 116.202 273.099 115.91 272.955 115.729 cv
272.812 115.548 272.578 115.457 272.255 115.457 cv
271.82 115.457 271.517 115.629 271.345 115.972 cv
271.175 116.313 271.103 116.902 271.13 117.741 cv
271.13 123.787 li
269.832 123.787 li
268.525 123.787 li
268.525 113.908 li
cp
f
144.988 141.682 mo
144.988 142.104 li
145.015 143.768 144.707 144.953 144.062 145.661 cv
143.42 146.368 142.33 146.722 140.793 146.722 cv
139.164 146.722 138.015 146.338 137.347 145.57 cv
136.681 144.803 136.347 143.482 136.347 141.611 cv
136.347 137.235 li
136.347 135.351 136.681 134.024 137.347 133.257 cv
138.015 132.489 139.164 132.104 140.793 132.104 cv
142.209 132.104 143.258 132.464 143.942 133.182 cv
144.586 133.852 144.903 134.848 144.897 136.169 cv
144.897 136.44 li
144.897 136.863 li
142.011 136.863 li
142.011 136.44 li
142.024 135.703 141.929 135.151 141.724 134.786 cv
141.519 134.421 141.209 134.237 140.793 134.237 cv
140.25 134.237 139.856 134.447 139.617 134.866 cv
139.375 135.286 139.254 135.968 139.254 136.913 cv
139.254 141.29 li
139.254 142.523 139.367 143.382 139.592 143.865 cv
139.815 144.348 140.217 144.589 140.793 144.589 cv
141.242 144.589 141.576 144.383 141.795 143.971 cv
142.013 143.559 142.115 142.937 142.101 142.104 cv
142.101 141.682 li
144.988 141.682 li
cp
f
146.97 132.316 mo
148.27 132.316 li
149.575 132.316 li
149.575 137.487 li
150.154 136.776 150.954 136.421 151.98 136.421 cv
152.652 136.421 153.193 136.662 153.605 137.145 cv
154.018 137.629 154.225 138.262 154.225 139.046 cv
154.225 146.511 li
152.925 146.511 li
151.618 146.511 li
151.618 139.328 li
151.618 138.926 151.546 138.634 151.402 138.453 cv
151.257 138.271 151.025 138.181 150.702 138.181 cv
150.286 138.181 149.988 138.364 149.809 138.729 cv
149.626 139.095 149.548 139.674 149.575 140.465 cv
149.575 146.511 li
148.279 146.511 li
146.97 146.511 li
146.97 132.316 li
cp
f
160.731 141.843 mo
160.39 141.843 li
159.772 141.843 159.337 141.974 159.082 142.235 cv
158.828 142.497 158.701 142.949 158.701 143.594 cv
158.701 144.196 li
158.701 144.506 158.781 144.747 158.94 144.921 cv
159.103 145.096 159.324 145.183 159.604 145.183 cv
159.981 145.183 160.263 145.017 160.451 144.685 cv
160.638 144.353 160.731 143.858 160.731 143.201 cv
160.731 141.843 li
cp
158.49 146.722 mo
157.738 146.722 157.15 146.49 156.724 146.028 cv
156.296 145.565 156.086 144.925 156.086 144.106 cv
156.086 143.503 li
156.086 142.329 156.373 141.503 156.949 141.023 cv
157.527 140.544 158.522 140.304 159.937 140.304 cv
160.731 140.304 li
160.731 139.097 li
160.731 138.728 160.664 138.449 160.527 138.262 cv
160.388 138.074 160.183 137.979 159.908 137.979 cv
159.565 137.979 159.313 138.08 159.152 138.28 cv
158.992 138.482 158.921 138.785 158.94 139.188 cv
158.94 139.479 li
156.336 139.479 li
156.336 139.188 li
156.322 138.229 156.595 137.527 157.156 137.085 cv
157.716 136.642 158.609 136.421 159.837 136.421 cv
161.022 136.421 161.904 136.667 162.478 137.16 cv
163.05 137.653 163.337 138.416 163.337 139.447 cv
163.337 146.511 li
160.812 146.511 li
160.812 145.696 li
160.703 145.827 li
160.212 146.424 159.474 146.722 158.49 146.722 cv
f
169.011 144.951 mo
169.441 144.951 169.725 144.799 169.861 144.494 cv
169.999 144.188 170.068 143.56 170.068 142.607 cv
170.068 140.133 li
170.068 139.408 169.99 138.904 169.835 138.619 cv
169.682 138.334 169.409 138.191 169.021 138.191 cv
168.652 138.191 168.386 138.365 168.223 138.714 cv
168.059 139.063 167.977 139.633 167.977 140.425 cv
167.977 142.718 li
167.988 143.624 168.063 144.222 168.197 144.513 cv
168.331 144.805 168.604 144.951 169.011 144.951 cv
165.37 136.632 mo
166.667 136.632 li
167.977 136.632 li
167.977 137.477 li
168.016 137.427 li
168.511 136.756 169.259 136.421 170.259 136.421 cv
171.05 136.421 171.643 136.679 172.034 137.195 cv
172.427 137.712 172.622 138.486 172.622 139.52 cv
172.622 143.02 li
172.622 144.375 172.443 145.33 172.079 145.887 cv
171.718 146.443 171.091 146.722 170.199 146.722 cv
169.232 146.729 168.491 146.41 167.977 145.767 cv
167.977 150.414 li
166.677 150.414 li
165.37 150.414 li
165.37 136.632 li
cp
f
179.573 146.602 mo
179.063 146.682 178.483 146.722 177.834 146.722 cv
177.01 146.722 176.388 146.478 175.972 145.987 cv
175.556 145.497 175.349 144.767 175.349 143.795 cv
175.349 138.382 li
173.961 138.382 li
173.961 136.632 li
175.349 136.632 li
175.349 135.053 li
177.955 133.976 li
177.955 136.632 li
179.573 136.632 li
179.573 138.382 li
177.955 138.382 li
177.955 143.803 li
177.955 144.28 178.006 144.592 178.104 144.74 cv
178.207 144.888 178.424 144.962 178.76 144.962 cv
179.054 144.954 179.326 144.931 179.573 144.891 cv
179.573 146.602 li
cp
f
185.47 140.525 mo
185.47 139.972 li
185.47 139.2 185.398 138.676 185.249 138.397 cv
185.102 138.119 184.824 137.979 184.413 137.979 cv
184.005 137.979 183.727 138.147 183.579 138.482 cv
183.432 138.818 183.357 139.452 183.357 140.384 cv
183.357 140.525 li
185.47 140.525 li
cp
184.193 146.722 mo
182.986 146.722 182.113 146.42 181.577 145.816 cv
181.04 145.213 180.773 144.228 180.773 142.859 cv
180.773 140.907 li
180.773 139.265 181.044 138.105 181.591 137.432 cv
182.139 136.758 183.079 136.421 184.413 136.421 cv
185.822 136.421 186.781 136.712 187.29 137.296 cv
187.8 137.879 188.057 138.979 188.057 140.596 cv
188.057 142.034 li
183.357 142.034 li
183.357 142.336 li
183.357 143.482 183.425 144.24 183.564 144.609 cv
183.7 144.979 183.984 145.163 184.413 145.163 cv
184.822 145.163 185.107 145.03 185.27 144.766 cv
185.43 144.5 185.497 144.06 185.47 143.442 cv
185.47 143.15 li
188.057 143.15 li
188.057 143.442 li
188.075 144.536 187.764 145.355 187.12 145.902 cv
186.477 146.449 185.499 146.722 184.193 146.722 cv
f
189.915 136.632 mo
191.153 136.632 li
192.399 136.632 li
192.399 137.909 li
192.493 137.729 192.596 137.564 192.702 137.417 cv
193.165 136.826 193.95 136.498 195.057 136.431 cv
195.057 138.644 li
194.889 138.611 194.7 138.597 194.493 138.604 cv
193.741 138.604 193.219 138.788 192.924 139.157 cv
192.629 139.525 192.493 140.163 192.521 141.068 cv
192.521 146.511 li
191.225 146.511 li
189.915 146.511 li
189.915 136.632 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Katie Linnell) ()%%Title: (GEO_right_Wisconsin_curves.eps)%%CreationDate: 8/31/12 5:00 PM%%Canvassize: 16383%AI9_DataStream%Gb!R&q0MTkcT(in!9X?!.6Ae`V_)HdJJMF&ksdVSP#;Vj)IR1FpQ,($5Kh>I'#HEUo=VhbY+^s0Ot=e^,[7_3?'m5lrS_9`R/W:h%`Y-R1g)4Ir:-)*0h!W>SQCmJ8KG02e*#/i;nJIL%_QarAG1*?HHBUsr>3rW*r8B#]L+r#bo6G=:SdP(JZS:h>7LjYA,2VI:A"K.s%5FmLlVSX$0UmZC73?7dsQTnb^a>frO,Wq*qEV93SB>A/MpcEbK1$O[aID18_o)4IgoQh!#P&:-1aY+EcA;$4K&QE#\(XjI_*cE9Q%I94093MU[?mO\32_;\IqW[`[:4"2NlAs-m#%t.$fd,13n9m(fV.f%EfEm"uJo7bOo%&]:JT@bW%3rA.I,=DdRJ6Il86tn#9-cl0H%rb".W/9oB\3^na:3hAa`8nia1AJ$k@\Ib<,L/Y'Re/=.?'$b_a77nmUL6PY`LAu&1s.+.9FaCsI@QON5Ci0Z.UkA6TU,i,n`,RgR%UF>\)hV9a(]Pp(Q/q@tePU9D6VL<o`EADQ_DVQ+cXeQ.DaX8NVf+A5b!_M!c]EGrZS1+aHP(6a!%kj$i!sJ975Im7I@#@<n.N4>E%R=pbq0k!*`90&d+"HuG>OZXiU0PSIn'LnF>?SVYhoLZ7e9RnOb6IP"6+N^Sj_ng;T#r-F'A7_!^&]lL1_nI<s8]I/B+%/XtWrLPr%s+Gj>MT(1>M![Kk?G'1o:fR4i8J'[*+lT&8L5:mI6\$D]$:oOkChM/;37ARV>)!!s=no<'H)K$(BG<WD$2@2liNlXNSjoLE2]@CZ%d3uYe7`ekpKA*,%+p"MQ$2BcV5cI-Q8gP)i-c&KSThIKVARI2Wm;s7=V:/6J^;21].Me^WYm<4F7<h`^65bf9[iC`*5])O6pDc]g%&;ge-KH>`-]S2g&qe4L<L/03$D1YP3"`9E+9&;jli"O6uMr59&/THBlKf6apr.5^#-U8l',*8Ken-SK:^[Mrk"?6]H$%=9+m=J+^%_f>0>l5u[hn<e0WE!\^":""&K4e\Fn7^*!V;BJIVa?M'Vm=S2b7!as%R_0k.#(N<\Zqosq_A,rbg'=8>$X-'s+$L"mn,tqK'XSB7%8M:]*+abU2!M^nB5e/.);P+Qt#hPaaiL@b%dW.Z;:ep3uGR7o[^IS[q+-_?-8WjC^KA*-Oj=R_L5+r[QDeL6O$)n<):^1+dE(c?G%N?,krJq6J%,f>eH8C@^,'1j@Q+H6c.:C5nbFbK&`0B!jH0(k%M2F9KiP->V`Ucs'"rXm;pa<]2-qOI&05iD,r,/;96-ZpDHBs]?7%9B)-ZqaA"A\Q@i&C+D%bNHD"`,q^_H!#/"pK\?bl,[)L?-+j@5WCbPQrWdq0<i!]a$q&l"J&spBd,:PeQi(p7j)OWXq+L]5PN94D%Qi'LQaR<)#_OV>>jn%PmnsB8)'Zb4S0DXdMZRgBrr$DA8-1Y:99E%fZ5GHJtn)0E%/,:dq,(EJeQrl'Yk?'4UEVWQtQ"6(p4H4g1%iXD$hs&!BX*H(fh;@bsT/3r7J35QABd'FFMeG]udj^0Pji`e!)rb%C6-HU:E/C/<-Q:V_E!#[13fDm"!6Hqjl`Ki4I+$]h+86l^j%6ScVMBqUDXOlm.M,0HQkBdSZkV19eX-N"iL:Qaf_OmiR(d7F7u>nE([JSR**8t_'k#!-`A^m(^R<#km-4]A-hnN>bjH&Ba@:_Re>%20!EYdprcMJc?AP8SY/4W&BT2r/?k-mA*9iBX(N@`*,jR&0)J9(2Mj^.bmi*TZ3--=5[dV753mnC!!8%+ru>WoL>WRU_dd(r<^%:%\!LRo3(<4pV\,QJs/?k5QRj;-)B'lM!>NC>9Ndso4,uh?`!<:Z:Qm_H94V5%SftHP.*uJ6#8.H-s+JI["OKMD9!AVd<(qiEZ6iG$%3.UP^0f=6]:'ughqEK[<V!8VT)&Qj%C1t.Z&9_2/'!$E^/]"2Mbn1k-P9^2T*RVa+8cu(d`>ObY'kT#9W4c*pMpQ+H03Rq*<Nm*n%JSQI\3+.FU&fFcn8?ejDIK,FQ_fK[Ui:3Tm%@"c/`6utod0d;QilHm1T]P\_YpP7H3n/g;$#dme#9<e-kAZW_UaA@HPS^Qaj7)e&%JVYb2M_0f!*D$#Gl]3I@"S`6J;9j1-j5+@H1k>rG!,qEJE/g+'Va8>_Bd2lkR*B\?rc,+fV/_FNUd1gZ%alE"hpV!u_G%H\Q,a5_%0)^k()CJri^ENUjm]8T"oHd-?\+*[aC8.1c.[*+4iHuUU.+"C/A!g17dDSmZrXk+%#g;3\N,O%hNW,[+p`$(8F-XrY&g,4(!>LIg%4=\H,e1tgK^&RKN-F3rFB*iGE(Ie`!<SX>l_*l;J"KJ9<pof?tI7^3K:`K/A1iCdj4J7fGf!mkPO/Y`cV%0oYJf@Nj)TR@E[pIU[%cu2<j)"fkN25L_d=o]bO,)@jRXbihr%6VZl2,E9HlJ_P0KGKX.?:]VO:t&+pPM2h95k7JcQkUDE:]`$gnF64/.PsH[it7/*:0nnf%Gs'gpqh<+HpbsOb^qY\B_r>s#@A*?_b6RX46ms9U^g_hCKm.:R!hM1o8\;bOU/@Qf;p(#nR:mOo_J`&0]J<HLPp@+$@*KK40Sng\%,aqhe#R2S`=):<W)'D:>Lnp.F/($[eKC-=984e]O-2LlpnUQ0mB##M9g.=$iW!=r:\"oiC/TOK<:/61(TTG`[B7+0jEfqceo2o2'%rPWoQm5WTbEFp^5b`YF@1eG968.0-+4sb3@i$B:lb]Dck-.\?'(<k[S&dK;9Al?KG,'f@FOR5u7IO;&HWDYr2D'PJ^)&&O]JZ.(&%+tp4W,2(=r;Me/*3`:TD%nWYFP8*79(e:AcP9TTTB`fe7ot!O-RJisb(iV"=5\__7PNG4L>GM]@,g9\Sn6Frf4H\]$.L0nN%H]m1%D.@BZ&tYj:-.8Q5Cks[,Cg;*IOJcWr&AE[rOn#16$)rZXBpCVjk%AAUGEP`I8[&I^WLb13')n4AHA3&L=7R/T"3K.=e.TG[A6YS?%dunPucJ9qrpC_AS&(90O!*gW\in7XPQ`(:*NbBap7N'EEU88RW<lTeP6;rbKK=r2VZBmD4.,P#a"aHcl8+\^E19fOI3@DKdNWf0]%;@57doNZ^.(O\T(P5$PQC#jbHbEo"G-M/g"0]d:[XV;i6-1s'N;fU42;gWRpX%UAH`H"kn?A\U*kV#k4f>^TWc`qIn[&?W$q9W"g%qLV0_/H=^YJc<Z6LaKI*FS2i/o$tM%gVAkp<#XR2b&n]]jF=#7j;1VrdECCF[akC3F#&]cViBbbe%_^!(sr_aMMcnt+.e+?_MD\C%NQr9pZFR&-Iu/'Z*`#Yoo`k(XSstt+W&Bi-.H[la^PN)&3DUQ/L\:ZdBa9VU8?&D3M]U@H`Hi1h?9D$]DZk3<*`HHu[)ED`hEX-@%"sk%*SfmV9:$_I.-i<#"]p=sH8VeLGdCgrb:2+i$*m8S'"P(NLUN,8uK/K_^9kG/-K/h&PLi!og'&S4-#E\A94EN;M8Wa:QB[+nu%(Q#5"&u/*UmD^k01-2\LQY&2iGp0rP*0F\A&=\eu77%[X-+("Dp9-=%OXFPGLjfI&'KnuLZg$cg.iMVknm%#s:*LTFQ*e^i&]G>)%LeiS=6t-3q42J7"8i#%C_YdsN/nt"aMaaq^M;:i(9!MXC.TS**'*"&&6_%hlMD5?@#()MlA2.Kf:FYs*T-Hp<88]0)7Ed=r)3!`U%4V#I@`,`tt</rELnKT"S_QAY-pmC4nM:XFFngW6i9So?=9!TOiB#t5[RLn([MX='Z.:*.^ZG[#K9S&(M!NcdhR`P.GM/OS""nrYN%Ilsk*Y$USD\D;hEP,5#K:nW6h_MfsN'X>nS+%cGKTp?@sLt5p2Z'C-)0)?'J`!Ko/9<_9?3"g_MB1GL&9_9@p=;Blg*;H/EXqn"6%,VN-n9B(iI6H;kMdUR=$E0>#LRe=(bdA(qO;U9kF01GEmIPK?Ol8P*bY]9_i-;C38V!"s0O!TAT-(]hO@1loP@X_in"NEUS=);-@%/h')$'.G1jJJ</:4Wp%Y)PdYC[PuFn:hbALUc%frB0j(';8k-93DGCF-eK0VoGjaHBQZW37>N;tF(1(aRq^">#$m;U7FdM4m!fg*%s3^^G<1XIig=\lY`1jX46=Ld"cD>c9oG9uMUn*`)NoR^Vjs:TQd;,R4m#pFR&M6QGWhO>E=XMQgi[n&m"Mn[rR35?AXSkTF3R3^'%[cH8.=HDM\k4)d[QP3jDAH#6C0m&7ZUjZ-o9[SD(<DpIsW\*nAU)PAk-L-="d6ggm<[rr@-ag:QoY9I:92U+3.5iX/M&a^TqCrAh%*pU7.P<S?4+lA1++4q>dQZh+?K^!_B+ReC[pe?rZ/8&Ju&cUV#StaZN$#JaD>iRcBG%80QYKF_(3P1Z+:*&2=J(j"TG67->)E@'=%Dn`^M3PFDSj]cdd>k$^tE9=J0`/Qh[mj'P`Ac,L']=p2HInk\>V)im*Rf(-cV_]&iq+55IG<U2'fm;#)EG*]3SG9W'\Mj?n^$-X\%.Bo(M2Lord?d?NUTCh;%9_)*iO$$VWYM"Qa=G!k%/E^Bc]BODgK@R]!To5!%;^h\'JYRcH9^3;.TN+Zp!Bm<mYkYE>JkDMB5VN/,%TbffNnSfUmAm`HI&H[UZ1+)R0'>aP:e")MSo,gDm<)4DQ@57,.q<"=FK)`*-#2Jtn:ARKmZ-lLJSc6i@_lpEBeX>qEk2M<:-(?[*%GT/)$[H\-RXEA!@]RaprMa(^#mYFgie%[:*LGRu[^*'9%=cO;:5%irfo><YBN_"6d1IFkKMbq^1K+^+aNmP7>LU==mlB(_+;U21)%kf5"Gnr4^hm>O'/S1efFZ]C\Ah)\s@k>U7M+j0#eiJ\ndkV"7o[7DHZD&XFb0otB:'@H#)bVo>"8TVqp(>q[.@;fd5.eJd3A\0[s%hC-H%8u-:O!B!9)Rd2IT^]h12Bpp6LLfa_Gs%e$$!9kPn!#K@72Cju*\fHo^,@Q+0_]CM<,Q,Bm]lYf!Kde92c%Q.]XEToDi0NE.%<9o)Ok,:CglU/OC._K$VrSd=fWU)nTiOb]jHdb/3!C;Cf:)PdXr12hb?8Q[@!^Gia:(UM/2"G`g]11<[8N_!=s7mO.d-D5E+:Pm*%"[<ghjTV>F9)[Kep&JH"WqS@jpB?"4atV,^"_*\n(-WL`Ag2</a-1fGYDt;$;>$*`k[0nN;CW(#k9f:;1;?7Mk*fZW8%I(hi[bJk%#'1=hOXLjI>L+I8krf@;[V_O.-Y=X)gGb_t7XX)ggSC!ZlM_f.:Kt9a<kf,+h(`h<nCRBps.t:<q9/J.LSFfW.>I!XE0ek#<g3K/%EgW8=_"NAJ(T@nViqT^<$Ui0f&Lm`5N7.ObhuC[%nUGd#bf@WXs)hV+GYgYcV0O;tdfiW[2?%Y_1>hHjnnO`qX@B)I<&d@f:g7l6%N^[0epu1/SNXCnArb(!),idio1)XBLY.obj`L!--M$<pcXccS<f/2b7>PdJHh&%ROH;.oKfP/R%s,+o?CVAkP.J.kTq>DD-rQuVX%T-iNP?Zc.c(tt78oT"#5p;Kj]*H=sl%N5b6-q0!BoOl&q.2*MioVQ+Q9L;>Ba%p>3dQQlSLND9&1S7B1FO>au->&g_ih>HeSGD8U%lFcN.(VDI"+'o1.J!"p"3\t)]cA+X-0b0Rbq[cAAKLL+=&c0coUn5aPn9`6XcO5+JO';Ds^G9]>;@nt2dUA;#kG4n,%%WKoP)Oc<%*D\_E\=31ZiOmee)'>L_8PMTO;41\boRY<KYKjd0\!^:N9N0543N=ogW06Wdn!sBr$T!Ttl+*mrcl3L.L_F1$s5Ogg!Fj`0Krpd^%e)b%$SFFi"6C<dXRtV[V5@WNuZKUM0$Fj/)J+:4k<,d"Bj3FGJ[METTB\]s&S[>^RMn,8fg*oUuF#62.4sJ!,+NmCn7>LI`*1h[g%ni3QlRgG6O!X2['r(E>C/82%cTK"![(m?^&RR*b=]\TlF'WAel:SFPt>g-$FX=7RWO;C5r17r]N<pBQK'FakPX@P[cQ3r>jCO8J"%\@#o0`mL4rBh5OWLP3]Nl44]%mVk9nr6^O-UG-Jc1Dq`*"5_^ucD9kl!P\6(6D*_Ml83/7HFhJ9-FT+kJT5!k]?^6].a4I+3/eQ+%&qGA9G]Ak'ZTQ0ViFVAgIf'g<I6@+kFIn)NdGoPOO;#c$?^\aKFih1G?;GRn$."YFpQ\Y90U'+%B<Pe-RG+_).OQco8Zp!:V;-/D%G">JOp7!'*WMA7jHe=rP%F4+HH'O4GgprW;999Kd/dd6R9eCQ-j."$H=glA*_k+[OW`m/kn0M5_SOl#3([Um#+ncl_k's89H2aPK%p^1OFLJ*Ye*Bb1Pa.>eVS,K-8]8"+]P3L<R_p-A?riR)e0Lr,qQ[-cFNjuQ'AfgpXYX/#Ho9T9G%Q@u8pX-,sg!@.JA7:uI5@m"d%?]3oFnsS(5j5ZNodC%lel+,u>^d06lMsl;m.Je5cb?jfo>_Q#>q^C>1*DQkL:S%L5iD+lL"2.ScIcE#/`S)];H$Am?:q.!a"EHrW%4]g^2rp7PaiR^Z)f,;E6@A*6qq]_DA.aglq_kW::nGTY"(q\*W+X-?dbh&<(^HfOeGB3K_7in0_]]J^JT'%J?G'+Ehrk+g3PKCoD%1R],+(Na&LTk0$Cp2^._fTu1!ai>g[cO>_o%dIEtlHC1SnqD(hnO$L,Wk!2iMpoSa;D9,`UOKau8K;?+`T_a-oV);J@Ch54(i4BT%7LdKer.iWF08[`fblmg+/W>(6O=6P.r>J,>*F?"5cKR(H$9S]H,lo[U0bdm2iMO0k(GYhNOQB6VDl8Ym.Oe[4Q9GR.VSud_d=%_j%fk`+YYigWp&^KFikt1pPqAo=+9JD'"0>p:1W)2GN-K%TAJG,Sj66SOIT>b(>[Z+G7o(2HTi]6PbbMTS^!VS<Ir@N.QSteWHH[h5s%\=`3\ojXW2IPutr\_jm?^u6oa>'Fi#bi_Co\^[JY%u&Y7^<X"@O6trr3tXLKr,E7WihrD<%*X/GPILLiJhP[PrMerF21Lm$IJkYS%NPoKSql'6*Zg^]Ir1W^T)O*sl3k:Hd`BjLkEj8kdRZ=^(5"H^a,e,*r9f-nU`J)38HLABMbfAs.96%/G-l.B_O&M'-dbt]@$IeXZ%^9=o6<HkOo&O^Zb^ZJ25-.E\fT.Xp@I/B)H&p"tYSU>D5cY>F8S_cLc^8(F$6AUpJM</TCkIehk?h#Xd4":DK@8;qa1]U]XcnN^B%+!`[u#1_$SC>,Ab3;=uJP:+'@gO/R[H.;RSUG@;F^cj056G[QnW(YP`^'^?Xn#lKfUg^QC[SUb!N2X]A<TVB*j<kj&-&,mOZ)^mH%=Yr*F@sl.unRj21/UrEnDP^X;<P;22`5\!p7&^*8'i(.!49RB:2Y&To(VU^aT>GjD0[8L'4WP[WeUS'9<XMU*)=BJKI*(8pIX+bt%\)Te!;#;Hjd`6f_.LAN1oS[D!d_f!P;W.mIp$FBSjT]?nT\r&eDX?[DJ+)gM[H3G?[s'LceFtqEMD^hX&KiXIqroDL=r;Nt6gh<T%HW@ZUq:=G#o*!;a.V2=Qh.=]TpA:f41qL.eP.ce7!0P;\=5Ki=![efU:Sb7BL[bGZ*5CR(+.#FdD*%]Z40947W6!!]dK6i:!r]cJ%kF9Z,R.;"/7X>J+prNiUbVA?6p%XKQ:=&7F8MXH9*)`,]QQ0#urfkc"^Hbf`I\(r!Cn7EM\#1d'f#an`d=VM'JZu(GG/T8<n";(/%r'oRkkm"+3es6jY3!@lm6flU3dC4%['G1`!#Srgj.&;TMZ2ChP&1Z]$)OI3_.oJ`*!obmJ6j$g?c,:0E-srZ>Sr(7%X"Y<fX_3bi%Z6!`I<9+L?LYMB?Y,Zo\W1TeNpZLc#-*Lo,7dkcO8R+Bk;6bZ@o@\1:6$^d,S4-Pe*G+$6Rs'If)e:LYX"5t5&LnQGa\$s/Y_/0=%IM-qBOoq(QBeX7ZSM%`1+Q"H#i`jZ'&.@\<'>^maMe?*ch'tim<geYK!#?ekOg\^o8F00\)%%<<(!D?3bp!7$Np0c-lA54G&6`gJ%K9S4e-*'<=n-II?/06H:DeXQ`n.$S(ieS7;6U_uV:^mVZ>"CBJDpg<.IT':NPo%[8-djh?`oN.]lB#F6-uL>c\4ad&@ZKE0%(L_B%](?Fj#b"%_l?UpKIfB9$6Zp9-4T$5*oKO5dKTXPUcs/T0E?A8a%-R2:d4@cWh+UG0m6aCbEa_JKa2@d?EVSD9Q$T4_@ks=Kb_c+h%@IDF>c&TRaG%ZmiVKHQ+U$No_4"$n4j21Pjb]+P>M`T'FGeE;#fCJX'X]BoZl38!WI/\<+eoT)[To1JSEUJV5@L6H"+`gA;gS^_U%DQ81*3Uj^)-hLhJl36W#Kg_"/WVf5sclK@'^Jn'H/$P6jQYD..U)!BjWiKA`[1Rsp;t+YQ@rD-7bd/#a:GGg#1lYbr^?0u!A18[;%4oW*PF(3$E!D@,skJW*j,$KE#KSH.6`+@Np^@*;c6V39T6:L6nHhU(<O.Is3fSii*Uk&;kbHo!E[,b"_?J0':iB[`sh82nS`F$,p%^FcZM9O3tKU]I+;^'GMOCn_h[0><VjKl+o;!60l^cVH%4LN2]6?b`cgECZdf#cC"FR8ZEHR8"t)nc1'S`ehM>[f1:+VeH+6'$AhZ%o#T(NiH92K6&cr^(0m):#MjJ_E"]e6JutG#.An5]@ESE.3#=if#JYBLp:S]3mTjPS;n_eoLfpM*)Q03Q*ZZ$2?<nF:E4[^pr`^3s%2iPb*@<<5LN_&1d-4c1H3!Si*&Td)4?HBuYAbnW$$G,J"j!,oYghH"1/43!Lmr/1mXu':U;9?>s5:IdZ_5#(E.bUk.(2b&$#30Lt%>`47f>OMF6Fn5W]D<]%"G?!YnoU&72QJDaFRt\oEH(>anR)Mq%_nC!4%_"!P>YYjEmUMZca)d3tKK;?n!:R']IAVo=.bODsTi-[u%$PXVoT=Zq.nFE/HT2\2KMn@V[GaQOc==KUN%PB9%h\V4pFnLRgRp^_tAuAjnC\q@Dd*cUq[/3&/4l-=%1LG^q&5@W<D_1'$mCX(I%W.`er_>cf3CfOqLV(=&EO'`>MH_Zp!jH&g>#]Z5Sj#<t@*N_i8M@^W<a;(4o(5MKi!hp$q(M#apIZ$7C2S=DPfGbWq\Y[[mV9?jC%(`1<@.G$Eqqn?*@Ofu4W53^(nl?/`ds.k:1n9GP+T70P?`QB?lN'^HE2G=/Q,^T0/(=2Ila1TKk8g@4NLMpl0ZoPs7LVlh??Jh[;%9'pis$R1&Xb5E+4^%.-T--I=W\qqXji^EVEk+"`:)gNK>D&B@Z?a/uOcI]H)ZBUN5=0ncImNs6DVpQ,aHEVPIa>Q$ZL%FOZo`EWY%53>Ss+SGJr,.<#X5'iSX4hj3n07JX/L%rPa3.Kt,%.^lO!=k)*GPNgn(t!atD5r[(jXe8T][ZjeCu""o83<G%NJLBd*?R/Lp>L"L%rC$Q5N)N54p<r9u@cKp!qq.&K\49(:dK_.l8'N[hUbO]_hTeapJ)XBi]g6#Mg4f:V_pMp:A$2LX*k2i@)M^Gh6MrGUd_,.\W/I#5%W<bh^?ZCbmlML0/1\BI-+d4OGkL`hSDq$U<\TkpK5'`X3]NQ%rn0bDd-Zr^W'E6fH_Jus,p#'@_$;R4-U`&37^)?+jb!-9K#KhHf%)J2Eq%d.LX\b[M)b^&3I>eD[QSEj]Q>eL\R0?@u/]g\K^qc-dS+t+q"f_[XL\FBWV5p(d-poGeTBA@FePTAB8M@hC_iqoF-rG6pV%Mo11B3"kR[4[7%p9T<Qgq?;PT54-VC=.^'c?dFt:\Wam(D0_&(SU,?D.(obSSBE;;qUb(HqBJmajql'!I\sj`cQ/JKhcop@=5Aos%VA0m">f&^4(#fg&k8,TsadsfQ7KS_oj\'gnAGR(2NG\C\Ar^J6U+/QG.u.@as#/em\\W.Ek`!6sV^%tLEKRp6483]<dG[jRKo-eE%M%:,;R7D^f9?i,JN_?Na.5="NmOKPONA%mq-"`_ab%Z-Kob5Cnb7ukKr'$a[jGo*A79Q'HR/R:]a7jTAiU^rdJt5V@0%o`25Es>r%IudRK3Vp6Y*,q+9\F^sUfAA\h6bWMPAj6b%4laU"s8F1HRZFH$;5l5%b56S3#.n.)e9Buf8$^eD/c=,)nPskF3C)'FkSYqJ'AAB:%>g/1$[CZ_AGpa_IO8AcONPLJJgIKrA\Z.[Kn9r-%:5,p'^o#M\3Ujl=c4a:W4HCu08+^0(3(Q@YQC(e0dF7iO@cF.9[[_L3aM^Us%8.;s$n3!&RSoEPErZaChYFm,3=T7q5>_Q`SE<)h8SuCQ49>uUK7q<@"^[lTZ&4LL1q'^HUSK4`NU1=J%DuGKLMpslaSB0R-9)3_1%H39%V?H%L(@7&j3k0@p@3oFb:;D14"QpY;S!OFoaAFk[GIF)`iVtj,l0c%_'C<?s<(KjP`+EJ9RU7(ZAfO\ioC;c_9Mj`MH_09XF%#4^Lp:GM%f%2,ZOWmkejEAgmdrCVcr;_[DJ7$,Qng__[aMUk5Sm.0sM`>pf$]G8H.g_"]U`.cD</1r4H9@+KaRF(,r+Lb;jK".iU%W5<dAqp7@mMN"O3m;AmrSU/d$]Eg5X?KB-I*`aQs@Bh/0S-K"gb+_ef-WuB7K&n<S(d773:N#HWHujSZXA0IL!RT0',%(+21X.nq%I9a>3(2>pPH<\&If+,(,WRo(2PCG&FNV#j!BdI:8S>pURa,b/8cH!m)W"I_h1W"``2pSV!nosFS\M@;Z^nd7TSD-:;UKB]+0m)<O%F]*VZlYmZD9/ct#+j606G`b^qa.%NgHeiu<WSg3"GOfp<bb4#k!"W[]/&C60<Et+_e@pkMSs<I&`8nI5JGtr[ATg!_N.7]RXa^5U%d'&F=AAar!l^kR`.$:%*eS6DKj_nE+QLkhSh0T]C1Ps;%Fi><g&6\[M\&E-+rXABtiM:e<^9V#Cpek8LOUAiE,&>t</YnJd&:t##%*rW/!oasR_io^a7_oVB$/";s4(]Bg,1*!tI=YmcPI2J[Z''nVrWR5+]g+0H]&t*Y931h\H(M&lKm9O@VB"84TLlM7Z'iE<iM<3"L%':Qo.K1%k#fk"''f2*(,N>Bch;Pr@?h;NAaG<WTo5+`$`*tO'FLqYCKg9V=>^2dDK#UTEolRZ1E&PXR^(Q$'`SM%g#+]\:Y9o]3H%Q+_Q[jq&;N.'iB5]_a+&:P6jB@3YU75:Q8CHtSmM+"gHJE9o=jCSBWEB_LtLcjZ:i&H*Eph/[-=Oj`hCL_5g"mBUtj^7??s4-u;b%6IcY;i+&gSDnfhgW]h3$e6n(#`PRuqABKhfITQ7ZA5)4E&2&mRWto)ZS?[][Z(f/]0pb`^fmYAhI</*0eU1_aQssYjQ+D287s5G>%*2H*8moh>hnFMH+.RZdl.Dq,9Ep#u?0l@J_k3$)H3fha.2H'BpF/@BgR\[cqd*(%A'j+-MZk+!LO.\('Ck%k"J>k/p0A\Z^4=D*p%Fa#Z6R(t?I@DVr4CM35l&?dO@&Ofu=)Z^<VO@G`:&J[+-=\7*>2omJYi]Ka>GiFR8qmV@0cK?RY$hl,IP,Xp"o(Ug1f-dC,1^-Y<%)9k0q-0Gpob!mLOan)hGa,Z4u82`ddD027@7]"u4@#-oQrp9,EDLY+jj9FF*1dg<bo!Qt/5E6s+q](E\1!#k5QqoodjT1^_.CP=_%]k,,pbJnc*m_4L'?QYtSQ4#P((J72opC[@XoGHb"\Ol[TI2fgr13joLkHpUorNI)$YEuUBRs=S2Of(9M7hN.g](6kLiOPmggXap^%f/^QCp+C@*jk;8I5BM<.lp^Q(@?4_M'^oe,`EbnsNJt?h>`'4Y"`U99ZoGcZ!se9H2NLS)?rSbMOnP7+IL@ChgW*1`J$[R@>MZG@%(2mZjZ#rgqR28`/TLWCV?A%@nGJ`k4$LY'[2t<$TN(.C+.-LI2S1gVm`bSP`/9Llqe%[7UqlDiKo^-+<>a4pN8^ZKbg;k7Gi`;/;%G!;ph5to)7TKG='@1<!,Z:;'fbO1m-E7;qg(,gR:ehS96VLkQ^Cm9T)_n5u6hoU5gXX`9+]*]QElq\t"=B?>W*7J_72XaPr(Yi0_%o$pc^b;p'o,<oND-[6_L@lb\)riE<O>]_=kNmP7OXS&H&X%%_L_SI&j5DMT/'Zm^s\l9h+/CsQHGc8EKC2:#Dh>kFZG6[KIm0;4F%1'C:>Jc"DTc=?B31s+LTXdX[]%of"9MY=Wg);YQN47gE9hhBh@lo+<M.df!NY3Ab.Q0Jh&hUNhqek!02LMsN%G]_"K<Q2R'Ia1%6%%&h,]n*H6*4IgK_8ic(l?i7i&n,*>33tperGeCt-O%]`?-^#3WB+C!AdsG1lhDQI!U@&,FkYhlUcZJEANDZP:`6%b/n-5X7i!,b2%`&Z<i$9AbS\`s<;fX[@NL`Z")/td1(3UZfrh>Ehs%#o84l[?M6I0"U0'?%07@%r/pfI!O1Q\`6;Vh0@WG:k6f3)(`9]/+cME2N!(%\(M@(T71c@!<u);XTekGbd/1*6W6OfjAcU>&M=k]1U:G<-tR,N,R1k*HmO]$M;,4m0@J'gVc"/Pg0%hl%B6IPZg9)-bIXBN;dm"U%C?t/S\^!GpV:VHueT<S6I0n@EhFRN5/M..$]))-?/9qC1bhF)CL"ihM'39FerqQj9%]YI7^qZea8?pQ#X/EBI2lipHZo4s5:C$Sg%$*orFd<fn+OJ9Hhks*mZ2H,0+Bh\C"2H$!,-6pE?)OH;FgIk&C;;!WZc-#SjFi`VsEk[_HK2JCao0$O9m4?=1Yj8POKIKSUq!qiV%\rER!KRqp?%,a%P$$9+n73B>aIL^X3I1&`qCDuc<2AoIAZWU,URuYO::M\l2#8CSlia7r-Y9`Nn4+Hd%#f@2[9O>pn'>),^(b#S]%pj:_c&mn\)!k[IS.PrPVUGV?h24Dh%78bGlb[8.&`"L]ZbDk#9\s*)J/KANTQnU4sZWP<Leeaf!V2]kTJ]0=]`Lpe5n^tG&Ho.@9%d@aMQH4>c=4:E\\g0c(+C:#!epK>ZJe<F^Hg3+\'%`0ZCW*@+*FTQbg\s.;jY",l[Tt&EM3f@&%)c*>'W\'U8TY%)mU!tM<F+?aT%&/c8(_QCm]&QE:<<0=Y)'q($H>">rFjFQOSJjpQWo3"Y!A>&RMO@'=e[Z]</VuJWrVkd3"GQYuo67&/#WNW\#"bb8]GsD_+1L[\m%iLj0AMA3DA/5gjoDNS,gfsQM`R*C:<3E+(JUd5mGfb56bArJ8A.&T,jK4^L<=Y]S0-XNV5;:GBemN3f,%0(oFD`)p9^2i.^ThWta%O^_Wf9o'C2E$:bHCg4;\BNkX"(;`;7[M<4;5<KYb@8#V!14Q9TI`A5H^!<"3@')$TQNcK\ctmN0k)_@3akVcMW6A^FS7X\S)276m%+R#7L>p\uS=pCBu1NS^D-];qnXQ^A81@o'YC6_Z#Ai:0\dC_?FTOf24if%g!+qoFP;%A[A.Fah^(ALEfM_\eRLZ:ji`]kq3s6?8&%<b:h?Q3'^)K)@;1A,`*'Gcf)Jb(,mt:,j^WSb4P.c+(REU?T0QJ%;['KrS>f?t;&9Ft>"(>7(CtmS"tUnKc,?(,!!i%JP<NMSjc_%DMF^CHl(%<aGfFH?bO_)HK3Q=r/4]f1&iB&$/=?Hbeb23`:>LTStPA[_o5CVr,^+>A>]'HfNVOp=Y4^\P-S5DXMpcb[7IYI9Vn:;%kY]/l,^<ZpiI=BI,70*&fE,!h1=<dk_Js4s?:Tq8/G(FC;>^PlpZpRs.AG=rZmaaDV[i!t`Gd!d<0LlA>SPHW@/+Eu:h.qi72T42%&E.)Ml6tq?$6+BYY.QH!XLVm/5Q1LJWqURC]C98jZX$VYQj;qLGLqP-E:G#PH-fH+UTdG"NO$Ei!0jp6GKhnB[Z/Hj0.f.eN++QC%c@jO.`+lO:\P/%Q=dDEe]lk#D%UUFY/a*q4EC^n2*8"+o0P;!B[8?a?(?J'uC!@?d)=`I1/t$EAf4Jn4-,M.&`0GX5J#r:=;K05B%ioME,[u[p6OY^@'-%B>meq@n>.&\JYT@aTHiB";/b_tM<D5(Y9oINrbC0%K'Vp%8l+b[=),C3WeGrR18VHslaW>`u;6Q(qt\ZgB2%>I[.$*-klV*9i=ug&QQ6@]!&h7L"PdXQbU4qcQ5'"]Z=qA\$*V(a2@'S@hg-'u`19oo#)n(plg5"!hn5!-m8H3sUf-Wh1-"i"X8P%5E^ThLMhd&"KhfWo<1Rs^+lnARnQe1E?ftN02A8)GDcP"R4aOMLUUn:fLVU!h_KbhgVfH%(Tj4<64qPG_sIeA8#IusolJh%r#2;2%+.ltC@$t`?JlbaL.n!Yt<91.B`TZ?bU@0EeBBE9O3-GutYCC)XKiBmoGY\0!j")[-KTPbjWjMSr_^u/IZYhrd]=uKhe+7CUEr$X8%VU)N&P48<AZ-Q\@N]YFVok8h=3>&MaO)>$<OT-*TX!PuY9,\M)f$['E@k37JF$VdRh]X8]$Rud)P%H,,bu<EWJU*lJNiE"4NA9$"%Yeh>:5=MeTb<WN&3lVWLrPFT3Oa3rH9DtH0US$X&Wnh-l87.([X4J;#UugZa4EL$62FRCjFBrstF_DMcM.*gY2F`#Xnd9Hl/Jo^L%d''\V-KA0h3nt(r\L2V:1-liYnod-tOtkBel\XULs-4bU"0S88\;uf^^2'LP;V^(QCP"B_k\`6KGr)6<<;H%Z?9sHE4Hn0Y6TNI]%2uI4-i7IEm6:BPsG]`;3Sh.m0N"jBC\"rE?(6[`;k40G;qGqr#r";*'.L$I4fQ9QHhG6.1V"&I'@%e]C,ak=m#k,h%#8<n<0/;uB%U4u5%q7!:?dL,!doVFE&DX6P<GOA$D$V![@jTk2HH-]jSN0$qB\s-3V+tVGS4_d.d-cS\eXZ),aX5"W%oRNF'\4;[:V@c^]RjnZ0%f-Y?/*.%BGY&;Zc=%&G%)Fo>-^V\hHc@;G0\ZQLljNQT6\$_MQZp^^lOB72odB&<K#h%/eLsra'3ChV+8oZ)O%eomoniKX-%W;ss%XWH_l?Po4Uc&LGr]F!"&+4\U)F,UfD9ZQ(+kdB.-K*t&Bc1^si.FRP6b%8Bp.;8_599FPi4J`H(Hr)n02@&&eaq3f)NLlR_]e;mu%@uSpr2J?lkHC.-B-:lI2&+>Q$GseBgk?Yh7;P]KWD7c?G4IRu!2+G:0msN,GYNpi0-hc&.M"GNr^;3?KIT^OR:EsiVA;6>Dg,HdE%`^oDUTCA#9(Ni7lY6WF?^-`2?#,`rRa(q\EOEM*LAaQ-N(RC+80gHXZ))V$('Ar]XVi=/Ws7f:7\+RXgHR'dUV>[unk*W`kNanlD%-gRmJObSSci:7G@L(pEhMl7b5@FsgRJjW(Mo+b:#3_^9`kMB*5a'Mi=X*Y-#[mfFW_d;5Ki1tC:M6J,0O]>D+:PY+@j)9U8>O%=X%_fMH+1ij>][^:'^E$(]]Us\f2=q)\[/>TD'0CsG_V#a,d'aA$CNt7ft2\u`KZ_F"EI!9TQE(<]`h\K*\-b&MZYEt"4QQ=[,Fn$AP%R(W*&l-?q]B_3)5!#Kaf$V)b\2:=1DmNdqUNbE[P+uT[kYF.54)82RHanf3fY'V\nIV#cTdFm]YEUAZo=0DO)\hSKB32p4h*mTc&%<iJ$5]+t[jQR;/7mH\##kqRHfrG6#-%jAj"WU"2#RRrp?!QSs)Okc:se[LCqqp%h`C\%2KqbTD'bj"!,*30hPO%7'k?rFTLC_mb/%YJtLao%`u-0Bt?BH[UfajR7B+'JOh4o_fGo7i7H!5JP[oLeeo'D7qe>\"+)0CV[26s,/GaX0p]s&!B+5Gh[LQc45FtcAZ92dl"To%W:S$:5H2+FchGD0iEQ'::&i&q\ir'!.gTeT)i$MD]CC4+I<bEJ;n/d`'Ro!-M@pQmm@UrTc,1I6?%-=sIeTi-"2A.#(j^\ooB.1n%*Mmq&ju]-U*o@AVWGK.doSp6p<V^;BA_/JIjI3&2$^\VS6G%j9m@u3,n;dFhG5okLIISoJ>6FfLU+92[,?sAGPU+ebB@@HeVO>?s%'[2]?eAR!pdAJ:6G-I>*Gq,RPN""%D5%NUmP`WKjdHXHbJFT-e6DCf-1f[>ffu#5:s2uMDlu\;+8*YA,NAfpG2+Mu.]n]:D;HtAB%2aNll6se:eHI>j@C65m\/Wc9(EH@r;ZI"bs7_uZ4ThSMsIhU",$#+[dAal0-BrlTUB(&I^<e[o1I!hk879E=)pX]aU*J6Z3B#[AO%Xd1uq")^A<7\pkPp)Qhg,&\+i%UCld*E/bANL-W'Bj7i2@YtldOaAnX"r3rP]$RnYi`Og5F:d+D(d7jFG/X'ZDl[.AOOoJ?PEH1D%1RF)A_Ql=FX0`&;=k8l\QfkrRMeWL1J\lMX9r&kZ.t[_DJJf\P<Z^emqCU^s<D`TQVc;Uo*$56s1)@N&O/KuP;NIE9U.BLk[X\Y.%9X?Nns%XXn6Kef>0:m=(a.\I-Y7#E.d2k^%$VU@)h]*>f&eKrSb@XCbeHaN]MS1SGZ;cMsa1kLaZ+4oA!g-/^`nbP1!Q(LL1doLO%EXUMb[Mu?I(oZG@q7_E/*lH40oOE8n]U0?if+Fi(.5F$0"Ru`U-]-G_.#Osr_T3PbkA/969ZJ6aC7j:SIHP^[B%0#">MVXDd<T2\%H;Nk@kkW-Pe[k_f?A\4SrXd0'C'tW]-[oiCg$c[rF+W,O&[O$=4dZVh_ehcr'kU=8T&1p-P,66bbV?M9:$KrcVm6otc1i>W,^F%J%GN[P)G??RmVg;O_M-fk>?AgTs!kIu-e`1VPm>^iQ?$`!,AIq^K#*u=1U/>M^.SHu<KdAla[g1mP73-JUiEZaPkc0d!2BS2Je##Qp%:9(^]R\lXp#ch;Cf<b=@N$0uD.)+0E='DGd0hn]ra1,-hC:"_GBr?eF%5Q<bV,oRVd4k,FeAsYh2o<U=>@$&Zg%+G^Ar@X)hMs=_%)=Oob/:A`N9i*.X!=N;Sn;@```h:\We&5Y#?"U)YGFaB?YDmO74mK6sG<!-p8RDZp61Q2m'g48eMf/1&W&qgndWR$dLft>pYmk6=%F)XR;b!tH-)E?3nKdAbNCI/p1b7pPsQc>!n(;'iPR(c3MCJ!2VC8U;0<;U"+e?sI":DrN(L5.RQR+BrL)HlEn[9?Qf/NMT*p?sE;%gt[32*rCcgY038:d([S)P0sRNF/;3a%?h:\q`6PY.4:.(]00hBdYUT)^%>F\r0e[3B@>K%5=(m@U66ej!j(kTPcX+i\Es?%kBC%U%V-+JP^s$><o0t31h&\PQe[.DY9WQQ!k*R"=&d=7D4LILZa0bt9V6mdUXO)jbr'8RP]1-k?$sI.(2Q3"3f+.P4JSf3R<:ldW%\n&@%@G[<(l3<8(=j:7>ai1epiJm&XDpBC#DBIktBNqWYVqh'P)b)Mq96RHd"gd`.URS>i4<5T`;DKM/SJJFsLu,SqMC7_E]gR\;,9ok(%B/i<pT%^HoHucNg.>PDjHUp=UG`ho)*SU4mMp2g#">qgQ$?(1lojKU@O;i@N8s7**&Q)a^!*R<@6gjh\:C7*0ms%c\hm@gpR@>^B%Q9/n<SR!YPJus9P`faEDqO"bf(VLoa63FNi$9+(B`B)Rak*(:%:nRAGbD(C*f(U<!YWKcth&as:!bTDq@+J#R1-Wu!\cE:eN4rQN%n@I4AQS.q5gakd$'h^f8nrYdeVY9mZKHtl.JO%%4Vq=I0p/80Q,tZrU9S,NSm=mPbo,CIlQRgPU(?(7F98]@&*Z]-^R"X9">qU!4%kT"B4FO?lUDp0hD9\G$&["V4`+D1-^`#Z1/NE23BH;bJkd$iCe24;m]dT*t0X_#5aD8V_Vq]Ks$\0^ShH]6<]^*^85'%ZPi<n0rt%;6;L[d6sA4fu&'6lK>r7j?.MD_JdPBjgNS#kkVnRC84')CIt_p-G?Mq^oWEtkiTME(h4R;FKA5[-FPIE-b7nm,hoWC*n*l,5&W]u%Ifm+DWG+N`X@Jg^P*$C6H$oaGmibu+=&qcW`iB)A`6NTN11hPF"^oi_3k:(>=Dk[EXQ!QmR.=3lI-]a)*Q\bh;:`Z?S=N.mL@V@*%frK5c-?(l5pJh.+!ANmJiC9$0Apk6:aN]RuV1`LY>%,54aLV[jlbEnTC:<>9^;aet6p0;YA>RHHFL[>.F'5:6%5cf;jr2Jq6A!4s%*]2SuUgL74Do!@m1LKd:k";*n8-"V%h,5^H(SQ,Yle&s2dV)jDrVOhsRSiDQ_qA=jh=#"D'uOaT/tM)PIW6IGio;_PCt1B`G!_UC%d$gdu@iIkF/O`Q"a8sT_Fdou/DLA[nkN_<Je<.2S,`fOc8BK!dps%;>!k*rK`FIe)c*h5Rms`Uok"j<Abi.F35_1Kl!IG_s/KDGI%[h1Lm2@oq&k:I5^MP2?+](3QNNqpaN29?;/'/6X"UOH6b@8MngBP56'?0lotOM:_R\SsKg%m6pN':>lAf$B'VQlYqKF=u'f('rR<%0pa*L+oZ0L=mU/"OI"iVp:-$/YCRnCKfdOgO%/iV&JU"I/KA!$U%MY=Bpd2^'sl)"W1+0'96a:$$UlTsHXF58NWcJ617AT9\Pg+d%9%er-C'u/qhG)g'%4gtI[#S7=Z`qHDZsi2k3Z.t)2'?a<\d28_>u\X<f4m<(ESKkPU+K)&U*lGjghQKr%0_QKbt!gA>(6En3^$'S%K9Sp4NT$_'R)0'V;Tj/c16!ZN:/'KSKp-,SF3WLtDs@#ES$CD]i'O#[iFuii)qj'<<^`U0oi$dK?T)*$!FQ;i6G/UoG2gVU.g+Ls%"A.0\^U42V@U^%h&W=oC80VGsW[JMm)amh_Ke3Lq4<ob=+N7_2S&,X(WR#2HhB!tK_6<;SAB*/)Ti@t-PX4JOmjEn93eM;r@qa%*%3pR28ik=cO6YDrUB9b'Y8Ih;6#+[YVE;LV9lO5h0HTsN4eerS@Cr*5pkc?T(*:Eddcrk#.iS>N$aJ#pmLU3WHO@*ZO6)Ta[m?0hL%SO"XWA*\4"Zl>1Q1X'H#f!aZ]Gk4V%h![]XR72E@a25EIgLjfqNI31?e[OSag;`ZO*MN0O]nfID:%ja>YOOJ4ju^gGimVY.c0A%[%^Wg;nJ;k\/G)afL=E*Hs@1.7,k+)DDL"D;#gJ$3Nk,]rP4S*Pe(sIT-eW`(MNc(4@B2@-dJuW7]g"Wi9!n@KZ6-.\;gC3XZg<\Im%ffNr99XIsO/5:>6f?N#[2sjA]blWOGr3C+V=A!`m?FJ7.8SaOG[b;(_eWu"G(@/PHf6",6!heUj"u>Xc#Y_i6$i-mcJ9Jnde+r&/%R?'7K<p/D_HAdEul#g[b0O3j=c8<XbUD-W]O3_\Nj*KUS1Kqt&fjjm*g%rKm?o:X+0,l2KD7<t38sq(#)eFTZ]aCW^?nVn'F(1=q%53nsOD""^rQVDZ@X7ojJ5qDQV[-ZfMdY&kR;q`W$O,,RK"#"khXo:s8XkNrm5p"q%qQ,7c%J';Fk/<VpK-l@T"P0+08$\AE&+e#0%9n6qjPoVmY]#JO=Lh#R?+WE@<e7dTW9H3b$$7d'd(>67D*o#+o(f]'50T&6R1i@#i0;mD;AcNO!A"*4<8!AukUO.!0AAa7DfQ$Uc%6G"#YT#hi^9VHTJ]F,!9__UjfeD@7Sdj@1SVoil06`V^^k!"iOMVJ!4^RcJ.98kp:2e@a/>_R=eYd.L`ejl=QVk)JH,FQ#d2lsD3%0@j^RP)LR->TYEDB<k+]@`;?1/1&IB3<QBnSe5P`"'aGgLa9IcY_?nSRIY(N[6%Wqe*K2W2+6-ZPC=6:.frV'SLkFUQPjF.OtIgo%db-O9aB4N<h/!k5b-82gO]f.Th*t;4"\JQs43m*6\Lo'>4\F&OpiL['1?WcP@/!rAQSp$Cnf$C(\)HLjQ\^UoXoZ-!ftD)(&K,/(%L]'':bp+tJfn/JGD)Va$qe@E%Fh@Ra9d2>>EIM<>\t/OQPB.:R'"0(=hCaZ?E[B*qF5pH=DqpAX4KIlp-h7,+[b``Ha3c#,\E\Np%3k/ln4(krWZCNhZ1Z.>ajE1":XD2P:_V4W:h:;b9Cr(7>Fdqc01u+d.[C]el3j2;Hj"*!?f5D5:a`Za$<2h1shGudmq9Ynk[Z6r)%X`n<<M9`C"I*[6%_iamOCVo'mkJM.Xrn-B/E5oM_pRMi(dgfC4q/C+mW9u)V%dW2H8)Ut+35ZCq:%nm1Rh)FS%4*V+m5H-4i7q00%[c`#t)lEi*+WjJ00Bt-;Hd7C&nAS(eFWcjQm/ih2?];<,+PV5eF[lk0gQm$V7'>m>fP^'5n"*hr9$$-iaL,ugFp?]-i<;2%kBR_U%A:"a&fepgA5[!cLNVC5lf4aoE!AXP%B6!9B%RYlF4@ine:;kNg6M^<sj%QYiA44raNnk.j$.sn+a>)(PVSfY1g=daA<+h18Id^\^%[UskH%2d!f)M[su<t&_s@Anp4#2tSTh%2R.lflEeBpikF#%6.0B%EN-V?XGK=sLC.TSm6pZaH[;Ps_[r8:B8`7dB=.*]$\+Yl/./%^AdOD,F(HKmis'bF)Vl$L12e\'uAQpDlWBICn3&]Q5W-bC"&#?qo:t&?"2iBI<^9E*1FJ'-6kKI-fYZ=%)\$J9h3ioCPf$0VL!'^%WGl7+XkhC"D<)J3E+]'Shc.+Vig.#OiAU9X[nVS*SO(a@rfpGB_l1H/;rPs[@lF9A1k44V"hO;h/J=\_)^I='&RKC:[J"d:)C1hE%iFD2[#AjU*!LWR'nf;P6mTb+[n7IRdg2-Cj3+?Y0a("?9AGN@GkgW^N,WG$[Z7-Bckbu>i+@^m!aK9H:i[gLHpk$`NkK@M$IHDT>%\]CLA.gbZWmB\lt6p'2C6KI^"4le8cm!57LG;fC*,ga#@"-rKm\YiN3cZl`#/?oM$\5sD@IP=<9]09<Z@R7j@?:gBEh$tN1%<_G<%P6.&p'OP$Ua_jnO=_D\0+)R-KLTf5d6(0cd9=<[$P24]"fZg/Q8E!`h;l"B3p:r3qbGWUhdj;U`if"5D2?aLr2(^''-bI1uR:EQ3%]9png_sW'@KM@S,>kPI4Je[Y5F2tH:&$ofU[T0Wf;8O;eq<%0L6+V(YT=[;"lBia.[:&HGot_=kdUT-%4f@\t,B@1CoM*!CDWsBD%fI@[h;S$mZ]]`!d+9"sj#/ic=\gT"+-Yd]QVDgmX0?I]XTbad(gooOSX1)IK>N7p7)A-apK9O!uSho3%)S98NAUTg<b+:,)U5Ea[%P?RGHOM08Zh'?WTO.>0s.QcH3[p]tgjj:?9ZQZ4V2mqcfEUCJ(b=gpIm-EET-$#mM1V*8)k$HlO,d"aq^c'YYCo,XOV7-@$EV@Gr%FPV6<7b_59>sPkOd^sc_h6q<jc*HSmquA#M\$'U/UKfk?o3lgaVDF)9)N:"'Zg!Ehl#t-qggD#SFJo)gflT9`k]<g!PYGcnC@)<N%)e[V;3VE)Xj@urEN7M]BF60"!l&9ZIF=SS_aJLbNZY7[=gIF/m;64'n?MB^ZB5u5I*jb*iEp9rX8,&-?B/F>_hVW*,SInHiPDse4%VDIL%LO19;e4)?e;?%O%L>")GDAC[T4,(/bVDG\5pR+ab&]_?*VHX3-B;t8[Rr2GjD3dn/jC((BSkWi#!9[DO24MksJ7J'$F@N;W%.sp2ucDED?V:0dp]4]S1V2o=l7eVs=B9Z&eT3lcfVDD\9k-hA)ACK5QjOusZSP_#1`I3-G4+QL#<ko3<mXDFW)AC##Js]3OGD!Lf%lm4jKeeZ38f_9f:7O2,?(L,]sB5(Z(j3u_OD)FX0F%MuOIUU-uYU9M=6:k!-c$D8pC6^&KWkd3QEZ<,a&P6MWa+]M#HFnP[g.5YK%@4_2lgE!tr9J3G;A?be*F/b]C%(9;C7-7ITR/'0p)s"(<?ZW,.kK9Af^A0X1jr3C1`qlpqC[N`/\a1WjffBf%H@N5FdG9fl\m-G>%m@)g>j-i%k&]Mr<YPU&6-sBktB.$c[BQ_RjPl%o25%)j<;"XZLE+mb`NR#)'<VMelELs_GQ2J4BM\9c.`k-:Ec`Cks0*[S8H1.\O%,2J^R$J*C5<SYp8LIA_]H[d'E1(;DdES/N."3)V[ZAGYt)Z%oUZCMrCY`;u5-YiRH:3=Kg6^b(N5e:-DM[L9l]:k\jgC;]gkAI5q%c.u332E!LCljg`eR?,(QQU3A?e)S4am`j[+2s"bd,Re>;&W!.EFLPDMnG8\](te]'>)O?Pong*I&]Lc4dm$%&Su(hH$4+G)MiB8M%F.48%0t)7[X6)$5<dsXh*@l!^pM+,)J@4Ogn"<.roTqD:n\e/r:u?2%\m*sS\$m:b@BSBi`ob1g1m)41Ys0>`\nGc*k2V;J=*(+G%H:m^.X48'4B).rDpK4O;;7pbHo_0VKGS-!SJ640SCq.=i[[2IiOhpY$2D`>70\koI4!hYipl;tgL>g8aGMD"Z]u^_-(=kIZj),s,%O)/3"2s%.Z5.5CPgIkk9fc>8U\'"2Rn!1O23u:V/I)Fd/qd+oU0s(%,gt=j@*&ae_-*^+uY$pb3g/"g;*44>Y_E.$2eohP7L*6X<%:8fN2E=[o6YJ3Q[m@0\g7Gqu#bq_=)!l<PW@P'j-2EG"<@dE!?T*qRR>,++ldPQsJEMNGTK+U8qY)7]'63b?sC$3!llJ=JkK4QlO%J;khO[\36"['SE=1o?Os0RI]LWaAF?pSXQ@A#VrZPH?OHSKt)@T_%!KpF@E7dr#e^I&HJ6i^+W50NZI;)29C]2/G42ad-@;%#8qZ%+^caRf?>O!%E"L2@>OY`CmsBfGks0YWPS)JH?)?aBh$_n\&dup%H3]RNlEXQa8j@:34Y"XZa,'jmG``Zh1E7GpXl%s.F2&Go6QDI%Z92PfQh>0[j/S&E.`/S\7eic91VP7CkHp_SkhVdW>7NUhbdHlkkE:qM<t]_D`Bq(9//BF0fZ)U78J@/3X<gZ$0'Ve4]:Y'iN:PpI%DFdNLZ+0#c-IYeLOsV8'E71eV-/lhXr9dM8<3;@l$!ZQ&J+EcF+#-2VEHd*U,GYf.\VEnM-)O3/@<Kh#.'5h9bn:]PRD<&B]?jo,%(OQ"YSXAL;*I(:WdtHffD4$!33//;uHLdiBF&&'VVn651gX6n=beG5h'8+iur_;kL9T^CJpohCL;Vh\YFRNH!qW>na_,T[qV/1`?%<RG&XW(2/dOfE$S6Td1o!q8-'#rAp9qo7_m9Zr9>XX2c+2-UW%^'6#6:6W)=J^GnU>])Q.\bjK(:7O,/mB!`j#0?%L\m*C=Vfqfq%=j>2EXEIm#Yn8-6:J(Dj9+o?sYTR\UXY=@D9q]Q#['f1Q2;MB2NPX>),W.^\/SI&RcKJl+(O!-e<>GmKqNE;9cUqEN6W;bFCJ17r%3oSk;D\'J%QHaOtBgpKY]\$i-rEWSdSnsZ!BHAPXE4f<>e&i8K<qjUKeQ$k*Z?Y14Wp\%ecK):/Y22fpQS0q"Yk["`]pp!BK&5B`%2UZqd&$%gkBs5.ha50I934BLm\^?T5L?D`Y)-PPZ*A-[=&6d-U[$r_WenY:ok.A"e`5cth7_6fCT/G@`W*-U_Y(l0rbC03-2T!9g%K>F)BSiO*F@-@AI%C<4]&%aS(fjTnD>q:P'L<s`Z.'GjX6#VgOHK+n/`T4O3,$AZcrlu54M.H)OEt4Gkh)NGiSaiS6`_%MYk.c/d%Ggg^DCfo_4P#h9*m>q[Reb=ftS@WdEbYnOdl9A"7L$.eGZo;E<#j^XOSUa.Fd&#!i[/dZ/o&!/$[e>.lqi,.[ag(%n3>OCS[ZW8U%C)neaAXb59]/bE<*SjpFLtQ`1V,K7q5cd[A[Zpq#]t\t2TYCHMEWB*$<4BpM[*IW4=VogJ$W&3#VB4mb5$5-4g>tde_Qdsa!&\%k%OTW+V@qEfC?#J.jq8ccN!Lf4JNKr_Y.g\?hXjU?J)dgasd>_sH?co:[/aM<*Pg:bXYl@Alf&+QWO%];)O6kO1T1gp"_^gS5h12uR%V0ka0\G]dWB6c`4hCdorH[k,eQh"jb$:%QBp1conrSCRiYfX"rq`#N%me,=--J.,"L>)$$5AemAM+q4@[Pb_LcT3OdOCP]K]m`#A%eD9E!mFb>4Hi:%@6Dg@LLA1P4oT4<uT@qmoS)3ID99OM5f?\bULamGQe%L2g1:d*tY91mI1(39fo?30gqH5aop&<,$me*p#eShK-%5Rd)RZYklp%b8hmoeYq]lVl';\C]&Qa-k%Pcs#ki9g:C-5#PO345K484ji4gSitlpB76i<L*ofchWnhAlC.'khY:DAUKpg@XaW@h%a1$hoGPh.2=[U$=^P@17X;=i841]XIf?ZKtefZ2[X*af((K@27rH,M)CjiMEl8CWpXa\\^V6/3F`-_HaQ'juuGAV]1TA_hjCdJ[d%C%luQX>aC"1K(]sf2%UF[;r>*auNO-hWnh!5j:bH?17Hm*,G9kanrU"c['_YKDYFe35n73+5cL3&&u*TD4]!\I'918'!_7MgWf0Z%ZaSpdcMR&(qH;_@\"Bb/Fo*s7metr,B>*0'haOd:]mePAqX&5DhZfQ,XR>-'q(Nib<kl?'a1'Wd[W-W2lFhY9>fEVi0Y?0,[utR$%\^aL$(u"Ld5?YW-DtVj3.rB>`a&L&:][tKPb^'.Urr-6lp"N!nlhYu,m,bqKHEWqL`TH"?gYM2)fq'^HHi:BKL6liOe(g"c?<,]=%kK3!i5DrIc2S.Md7$!1:^re4:jh6,o)kC#=8mC0<B9jST>K8Jq3DUNr]hu?3]mcIHQ.t0]Vbp\L\,,KtHVf-oT=%'HC^,1:h<S]j%(s4@c45T:9SIhjGaLg9oB76hQJN^Hl]ma!O&@#[;ENc!?)eQR+rNn_e^X^Xc]68gRrN%B%2-HHXn+F#Y*(3F+Q7Bd&dmG^!5r+iE%<d/rTcBX8.V+2+Qn#JdeGSS\L3*U=6f;:.boN3YhX'ND!edQooO#l?U'si92#Yl%p;P6qQ@(1Ri&S-R*]J%!q.hqMYKql'JO]88;%(Be?AGPMK\9dJfF*(M*Siq[gC0`S_?9U?bqKhnQDk:]?O#Hiu=c^![2,6t@F7-:HDGf[HdP@i(WJ'C:iGG87;D'qjPg)r?N\GiN!%c#igY[IX4AUhA6(k1@jsHs_n=/K`\XT=<W/#(5=1pil\7&NKTV"eKcC_;4a0"<i*P3gfKeLmpI%3q5AbH4PRKi6%Pf4o2.ofQU+n%5rd1I>lM5'Q&@*@a+9F\/4X^0H'[IX*]^6J35)33p$47s(nQM9j]C"hpB7\3cu>>=BpnoO"jU#t0@2!tSG#F;*g1AK5.E_.;-E&k%'p@3&357:3?a.j]^;c`*c[*_KOQ7HK:Z;'!Qs!o[f)3*D6?]YrRj>.BO4Vp4;-QUbQQP02s0;I#EKiL%(Yk!^q9nl^]JthGO09/s%3B7drdq^CsX;ud8Ym>=?"7@Ao&r(<qOs,DJ(/6B'5s(ZqlJ_?n*c#5c?quOJeq2=,AbK!miB6@E+MjI$Z-m.@pE:>Upt7nner:A9%9I5Ic?!ZSVn*dFNQ,L^c+<<[.kL)l0rSlSn@0O-).C9.&19C#G9"+Z]Kl>fJ)g!_nDrou10"kmm*U_pk';;+@-DfS_2bc`47NnX7%km+1Yk;NNbr"8:O#XN;a@@g1`dI[6f0Es&lp-T@6L8[X*k/0Cqa)Y,N1D@PgnYo6l^Z[rn_snk*Hk:dc*hAmOE,FK*Q25mS%<<gR%Q[n;&WX0,4P7RJC?i?__m`I1jkHO7%4l)H3L".g\B:n`&9(aBMFR^Zj\G"mIdcK1K7t)5hKcP&/]_ii=afe#\39=:tJnG[88r-hQ%OKe@E<t[@pIPM%LpY@F=^'TlFh&-["FPMOKo?.^Y(,+GREt]mSHANi]\Y8MtnT:s4a$3"s^#p1M].$^T`<@Gebu#1g]aNi/N%^<U%fl@mpYY`'/'ZH$#mSYb+HdA6Z%nCAsPgV:CLT0lOF^?Es)pn\/lj#)<!_Z#nkGNn.'-WLOO'Uq4Dga;/`<qRm\`j_Q\b3i#J#9W!%^A@X"Ta2Rs>P:Q"'-;cuf.h+'$uEdN,3KC3HpNqs_"R&5r!c4Q42,@GVotEN4RAK!YL=9%0nVH9L_C?ek8Za7%c_@?VEICD4KdFF%hMSO%Hr%''4Ypgj@m3Zaht!gMT_._QJ[T[^[QLVR>aS)_=h86%[n>W#qERn;nnNcPE`NlL4EcUrSR1G&o@Z.T3pa0$W#I3+h0lu2%lpK&[EJDi9i56!nHLhbbM1ARhi>8JS?l8aqMgiCciGCu#m]3jM3_k%l[@[-t:@p@,-b?0rd#=+;[j1C?I`:/6\csO+K+7F2/;XU_%$k'e34=//Ho02bT(lUbLkZ*j>q1Ep>FO9Uo!R9S%X-E5X@a*AQ9_',Hl2oA#/Rj.kKrpo@_Y@NUdD>Q&YL5Ygj?od=1!96QXZ@t?%AINWk3TGb;\\a[b,OV@`YgDKYD[Q1+TFQi)-n;2^$tS]c/G?V+M'*jH/Zt/>b=7uH2o8WW#L8d7^1]-hoe^7qQD)bWn[`[JVKg^P%WVoHe'M\e@P!FE)ocTRV`\4VH;G1J,*Bu?HW_!mhF.K_sXPhh:=BYC0b^-M,@]bA'7"!/A5t!A4'G*uUi]A$f8B-f+OBE+Sq^Ee!%IRG(Y.K'8N1SdfogA1E"cUJ-?kiB6)!dtO@V^'=WaO#g$iQj[`44q+EUBEE'@uATgd+t.L"r0=j<Bb@fF*hs(5W$9rpX_[o!PE)[%e,I$Q^HB'(OcjtKJKPY1&;Rfb@&2ZIdHrFsh,mg0m":\cME/+e.9<&k2Ld`Q$pK&AG5>%/7M?jgl$A!h\S+6L#fh_=KNJ@56)J7i%:G*kC@-:7P"g@^XC7,COQb(BDh#SQ_*>=B6&C'$U]cmhFkB5Ta;J%O:!MNM]^8+CqR'<l_'?bj@=-ZobGmb^Ahd[EE$W`Pr,<6m%%dh<m"ejgntQmJkH6*G`K-3kU>*Y[dM"ujPrA-kRKMcKh6c#3l>>gL%b%>\.i^N_j6FsFjkDL]#b".V]a$:6>->;_$^4LIM5$j"C,%D$J*#fRsIr4n"P`^5Gf*8L8?"4pWgH)@T*Ep"3<ua^2A[D?*!(TU*af1lPLu9.^E2&j[^C?F=%,Jl'phB;Hf;7boMQrU\6H,(]6q%ocR4S\W("751kkV;?oON8lIpH[TH:NMHj$o[b6qlj-aT(q%Vf*7lSQOhXiScZR')sXn%lp5-9cHJhW<A4*"),bbrP7FsGjVXna4[%ZNd+dZ#,5r:G$'\2T&5.?F;P#7>6^=g#ZXLDaXTLr*9]GYFUfbiIkR#8o#@+)0qJS;r))Q#47A^c%u,KO\/bni>Ge%\GY+,aOon?%^\N[&<'G*:Ue!-nhN+')n\G&kqF$:1EUC3qaYfr#M7H4^i7pCT3#H1_>>*s0UOt8'Mko`Q5uHKXKK-#[VsP4o$MXf,<2W%a:U%/.%>foZ(r0d),9iq^Y5AMtc"EIoeP.u?0ajH,-WmY%G75D2@++E0f'A$46K'ZW*WC(liMJ(@q@Rtd\'V=d>V&'p[j[Jh*A<<-ae7fY`%GOaJ'nsNi;riX7G/d></<1(iF@1['9;@frjHK[_kr-O9,gsYt1o_dRR"A*Ll'\I98JHA!pE**^JOY:+#).ERp*6uS*>?%C>!FZK_%"M[Ijk<0%8-_1ob]L:kK)=18E*hFG4?j/k.7S[HoVD.."_X`7=54KV%,G!<Db[BG@k>"[TDq4[dnYOE)2_1@oQs(E#&2G^&$qCZ@%?mrb4e4hu(k&MOBNkOYK\\p@Fe:K&OP1;W`(&[W^gP8\bX:pd:fhmZ*[uTJd6.%j`hFBsGmljTj[s$__Id+Sn@`YJEc=GB?aR+n-%4&P6H5DDJ^DFA!p(./MheLC.^.3d=`]hm.dG?Ul@bBV<J=ZL4[l:4jXhHeMeM=>purOQuQE:?L4#$l&f3\ogL;f'T;150c^pCNh"%N_CTIH\kI"8#Ge$iH;E)s33T&'TI3\.Md0(QukA/G=HJ:@pZ)A_ng<O$p%-'Oo,AWhbX)I:>kq0rgs?Um4Eh_ahjHc7e4g``C29%%o"Ab0GN'9'iZCa;QiofC(LpY6APl1+lNF*Q!rJB<O",poB-$]0C1UD=0K]sCU6RN:i^:GJ/!(dB\pW,UBije>LgGLWL0]@AVWeFo%4gD.$FiD/7@CT-o6O;(+.[isl-[qX_6Qb)?q&#t)\tpL9eZriDHuO7WRB*4Jfi7)*1!E@a@h0mEopNZEY2[td49S`PF),L=<D1a_%ru6a#-YgKlP:QFt?:)Rp5.S>"c2k<@&jB&qTmX4u>(->:ndWWB=(lXGl3d1#Bp_?F3djEdMd-T"-Uj_E<_>DC5HeU"HHo\>N"/M>%=AaiA.@(4)3&W;X.'7aaJWm=%"Ab,.E=/KP+Il@:8i-*P0as4G$-O&`UJrh\fpGhu:\MKYN:\=S=&"FR3[VP]+Y9YX&6+b`M@6Ik%]Ii#^dYjQ/2V*j04H6<pQZE3#go8;!k*5](*AR%).@Y?P;Ng-&"_oD-:1!%/#1$jqQ/*hmn8p%Xm)DIbM>Jt)i_X@=_IQF6S3>-E%cW^a`!f]D?nFMKe7H7rG//cHO'_Y,!9Gb2d"7"RQ<=b!iYfra/n%R--=+[Ih`i6k?8gJE._P/I[VVaJ3XR`i<,=_/Bmd21S;lW]?%J!MPGmuL7.MI4Kj/:X"Y4H`:DnD\pfP"ZXOH;?nRodhSNf8$qe]=";HmNb7hpGP^Bc-e-.,MtNe%qI.Y/8sOi!_tm/4@^n5[Vm<d%3k`>d`3/J;iaeW+G1Ge?%+[1nH7ah\H6EDQmj6jjf$pY9W$Y'>j-7)q&<lI2B.7Zq6li:N>%gt;&8WUbP+'KpWu7^A5gefG$rW['%d&*/&2]JE*.^#H5r6@RP*9ku^Oa*[/aa=38`A-%5^GOr>1U0d>(Tc^69WBg#'j5cI1UIrrF$[>fZG0dg#=P&nEVuT?\Q`"<^s.+E%XuEW[6,Ni1It9[/1438Yak$2p0GD6[/]\tc>oIP[6iqC7Q)8fr"('c@jo[BdeJ^msX2m>g8?RjAC%.^K[T"KojK,W3CD7NP<ahbH%Pub([(Od$BC;t>V[9mep(bDk9EC:q=S3/##!a+Hlcg=7+=eo'b^6Q-b/)+quRrZRsRG=6bRY,)K5[LC7d.hp[/`E[)%3db_ks,B/%8*;2KU6IUmMX$M'%M#f-ASF_NlIRUZ3Sa3.NcQ]n./k>1d=HOgC?/q;6a(6c&f+ccnH/Gll1H;94[+.b&WbTfCa'.B[q4TtBO6&l%PG`?jFqi8\OpJE2)U?ORdLFu:FgeF-+E8,g4RDs(;:\'AmGZ<#3=)hE)_VFVgih78ZE<''H7d'],m8QhL4N77+cCl."YW3L/$T)X%d"s;m\:)?Zrk$+%E(IkLI'/h/R[F+G`Id^@mo6t?jCJM=!kdg)DILn23G=Vt^#9l!`5\75eZtjoX5Y>)j@Lk[>#DR.iR<@^!C2.D%NIQ!\=o\SunUUMUmYL?9\"l;M-Vh=KB8:)P9ntUWr-"M@fnBWnVaTo%<4"L_EK/`\7*oRVFBaalT\n_b'u]MY-5\Q?@94Y)7&352%R=`f4TEc(;d@GO<*:)[NQ#cr1P>D8[7ALL8[KAhM@&5V6nCZ?F?mH;?6Y1Me&'EFsVHh'CP_4l;)S0-)jDk9*11o(:L`NVXE*Io"%m3q.[YY)pD)t=Np![>h?$4(CuAuN(s_nB>3R#Pd@G'dmf7+[L.9'kmO\b2<o+WHJW!&/`$UWgf&3PjA#.ANe,2^:,j$5F44P),A@%fr?tJ43!9-L*'trAgk93WM9L+IE;B5bt/0Z]33kdfYi-en&XA[IVaU)^E\*_qluu"T6<`u^@u-T%_U=4g&'WeNHOg7NpM2_`tm^$%\fKJtp1$b0[*cm-m8e&841oDt1u*fPE%Cgis1M^jYkM>TL]-]/_T':hXBlaMZO<8%-#LT$P\??B?]8&8d41Z1nLqk^P\:f'?iHmH%<BuRF&Ns_^?8_c?XQ.7XL..n]C!p'9+?A4poVBS^Q89p#D\r2bE)Q$"i<9JR,l^a*5PRpLSMZON1@[@#&Vm9lY/?1@3bb4mL)c>!%,VL_$@;dlj:--66B*KD??.J?r=D,WFb-k1#';lXD6a]d*oZ@E><c(65gHdjkkl7Qq*D?%&m[uu/,6oM-JmSFB5;(?MDtN73B?YY_%I!MKWIAhAUTMqh/+rs<:l"E,J9#mJeped378"Fa\%b&NVj+Je"MM\#S9K5Y@;(GS%E&pQFb**mH(D"uO<*W^$H31mGEV4rpQqjL,%RVG\HS;O5m\5YRb7I_#o#8*:pL7&mD<1Z@g,U,%@.?t5rd<H!_@A#G6/t$8>K4k<$.6:GSio(`<@[o:aMPfCQO-8IH4H:M[l#8bI%:745>_XSK1*2?#'315XOn=sYH8_BB()>o"Wd55`9,!dN>-dWh[S4qCOFX]doNn?Vm8MV9F+UUb'ngm7a;pcF7'Vb\R//F6m0gAN>%@LTA$JSOF'O=ceb%8"QK$/BgJ</Pk!RRSQt[jipda!YV?'X]QU-LHM)s%tpHnECeTkF.$sB[d:OKZQ%"6pr2;1kE6'NYt$<,5bD4%Wej3[fs=(+Q=A:r\jk!WX.iMB3,lssM:ei55tdpMrZs$57>OBH@A:O<jUlT-R\H@Q-R-m!LkbqZb2-CTOsJ]jrIXs&,E``R4qAi7%jHBq;'Z^Zh>ej:*.C-eep[g=F7-q7(h1sT6<,OcPHFTI!Y\`!\M>R*S8hO`tc1X-^QGf%@M/W,NXk',3=V$(]ds\]PdQJZL3pMn'%6Jp\fO!"DJ;0Dp#S@a921\raX*MW/(F*>4Urn.o1ed7D(^,/>Oj33>Q4K/;8[H?Y+6?9j4/NSs($;U28c<&4Q4\%IWJ,Ql!ks"BY%PNtQmh@2.:TDn"NRHM9T3Wm72F>!C\hRWS9H'_1rk>O3e[bW7AcEuriqpi3P(=^kq$LBm)9kWSfI`V)JKiL/`7-,i^QFU%VmO[C'%qP3C><9j?\(:X)3iO4'"o<>oef7s[cj";9d3NZ@cs-[%RP:*!QeE8,^cqg9EcZ@FA>@i8Lh+ri,\HbV#.8)nOi1KJ0c\%P56IqhY%5KTLlnGRbi$<RKgT9CBlZW']oF*;9rQK<PW<ehGR'Bj8'PEN82[bc29H)=J2B5OO$DqV=l/H%-5?re<T4r1?P\.kVrTr^VU7?G]1%c_J&c+s_6\rK*Obc_J+#Sn7T]Q.W7bPKnmNG9jTbrKNfq=koikd<Vqej;<MlZoPm!SQS`k)[7N4\D,\f7NTmNQJ\j85thp@0d^g>%cK.&_B2/#'DqV=lm-OF_k_8=BS^19aGrRq'd01&;<#m=2I8%IZ1gXgt3hMT2F-Z?;J,OW5c8b8Up#'s%8m6M*SGd(q]l;%*Q?ol0%4.FS[=l-%jZj[X8?`W#3rqAd'riqLSU,"`INA'cuG#)C["Du`f=nXiLba-[;!C+Zb=akdD4t[@>LXBFm`%ASXeh+I//u;)JI$A4/%6N'>p0@fg/nl^uZQU5qUi$E`_>rcu:@HN'&4[uK2A!`MZ=nXuP4DQPAZg9DuDpQJ%DJ.Meq=;lU!oC%QSf8l&R:H/\ZXoH.*jb.a%6SmhL9?q@lhNIX)TVF<p^hMuq1E@O"\Ck#6QgF6RNZ#6*C7f(aB3M-ukWJ(O\Do;hdgk1;9*9q'#[Q+oNuYcP(RWFu;9&Zu?;*%T%7t!pU\+?8ZkV:6;a-2/2c]Y@)AWT:Oph9V20'De.p6Z!M]Mn7iZg;Za9Y!l'qa'q#jR5mB7rCQ;c<+CReg5ZjKMehY5KV2;8]SF%%MbMHXO#$&/7H`g*Hh[%hZ76%KEpa/MCos.`TB3$=ni*k$9u"@p7NpHQrEhdnLXARO*b\8\TT:s^8N^%fAN4n*Vkp3UU+L]>*Xg)0%"co`Dls5^TUU^@%+alNF/c-hsMfU%')qM8;/`Ckno_@)`kIMshrRdLql#G(%Q*YSI4HFbJc[OZM4PlS8I&qln>HW#sa)2a;)t%H*%G<:_&S/:EgK%9*PO7@9*I-)[5<]86L02'@T6]CVY=<H^M5LU;/S:1;4M5#%adBE/dlBs1n!,[.#[PJkHKo0*=#O%]ud;%#d8!M<D%^O!_nL1?7oK#d4jL+F0@oB_M#Tl:XW1-G&Z5C>ZN=\>[QQ,^AW=jn)SER2*Y$4SoAM[8IeY92A1m8s]5&"(Xq.tqu#a]HPr*"XB/%8*RIYH]LW4!@$=r#Wb-$L;2rBRC37h&C+KlI&3SqO2ZLll,W7]ZI%2c07@FudGN8^lbP]l9;.PPpTXu/4@KC'NaTaI*:W`iDDU7S%o1L0p=748O"YgtAn5@X1q2Fnr?T?(@.uPJD6tBioS6D!,1s^!:;suO*REOb\N$<IT*e4-YF0,5oMOpZh@k](=dcf>EF1!h'a5Yo"%km/cB1O%<oSYk7We2(+`qfY0jH,Y)9&Pb.fZHF[\k=eZ=$r!:WMkV$3D`Uq's,MaRQ<nms<`m)i)NG_3UWN_%I<,%;Q>%ulcXhHV%3sOf:<u(l@\6Z(*!MhNJ$O9&%a>nS?Y".c&n?d8'ig9&3antK7YFOE].[4rf6^`82SiDZ"R4-idc=qPHQ?B&nk>JG[a*GaTCs0D"%Em[(+N01:gl3S+B3k6l&a^,gS1KeImqX1I9dK3Qh(;Xa=TOdksX\Gph>(&s%`6ACj*,=`NUR'ld"PaFT8p_d07S24K3k?/Sn0oi>%.dnhO(u(s=qM9_h6.JAuW'WYkI$>f#b0g?MDP\f(=fS/q'EL>^GN0^)>"idJT01EJ[cXBJqb?B,$?<M-A(9u=^[mN6c@=U#J,&L4%q-X-AJ,>T4qGkl5I/WRWcU%ToI"l]$\1j:d[4+WM?,_R\12=.C1s26dg3\jPM1OG!p*r.qb8*C$j1s[t9QSj0>U'W>UH(fk,0>4r%j$2m&*C1QeU8"&O_>/D?*9Z>IhgT7l,5.HZ!JVB\0d(W/CNf1#1)CT]#VHT%6.sYtgG-UfD=fB12&41n+&6G75%DmeN`C_`4<oC,%J`"MAeM*P."'aiR?#h#&*BpPdHCAkJnSVHbFl>d7=#rE$cGFIgj`1!n5in,f:(nTs.d8?b(6m1k6sqlP40"au"d*9\U@><nnf5iY%%K.o$+K5sYlp8<cZ%bH*a[;*WeaS-Mj-0%qA7cm7:iY#gE9KcflmU)pU\I>M#+hk<StYID(s+b<3GNtQa&jtD<DkjqR^^hNJ+0DB%G.u9bV?VEVc7PF=FYYe!]]%nV984#O&S7o]XAPF?iJid*hkG^JqMR*>-'pK<VkKeHrc%l5k7:[8]D+JLo2TMZfpTj8a"2jEgU5t"%!Q>S9O6W`/W6leKVI#no:?Q=S5[5!_:W%HGQ&u+&D)RETIO)VaJ3(W5.68Mn!oj#p)&PWSebbHS0QPX7AsWs0#CRQjD%HU4W!<4*%YBKe6'MM"pb-'TB(3Z/<hlV$B<WIdER-1kk`K/<@\Fb(GU*Z1N[`Zs\SEX.^<gDh/OkA-6's)V3^"@_[^71._h1DF#Z1akeUddg%%VR+\YNuGGl&_Z*T76'7><*oL$JNC44=6EeYbo4J%ag!Xu:<)Q[B$enXeg[ZbR`?kqk)99rf6YDJ;8,k5<P*A!flXibg1,TsMT7=g%?Q0pl#O]h&@no:.XsUR-@JCiVjCjK7H+c3s$FbIBNmLq$j-Z_p.jMiB.LYuRfYNG6a45oQZV&\pl:SF*k3<Sdb]/C-1\:=B/!&rb%.-j"Mq0gb^cCmP@F,nYB@ud.K39GOSN<%9:UngjZNL%jpYaM>=>ODB)T's"Dp&s5[*j))`_l!Dnko>V0)diSX'c`sM)'AUOMg7K)%c%,C)oCnc+O2`Obr+P8;Vo=JLfOp6&\-0ANpBI3fiF5]<NV3W?A$?P]$FJPrl5#-Ic@/Kq7d&qs_SGp:Xp=&Qi#<)!l*20O<>;9W%MgiJO=^.S`Z-MPAfUIoR%)a_&<0D,T&f9'&(rfkpSQStN\Tja$$$IA:aEMDe2D`A-iS(Vl_T^jDTTsMe"IMSul8`R8S29XHLL0(e%6Ka^l>F*<G_&XEG.D6uS]a!+;RM*[ZSWf+_mj3Crk1P*r3e@rHbA_0(n6+&MO'R.W_hBfrfZB8'_cY2-L]:KCB,]-aa*0bC$OQN:%r%;,B@'S`NFOU&6eABWO$pm3WGlZCaq,srmcL6=DGp:tbST#&bo-VnnQ0ptjc&3gO!T6Z<+*b<8[-Ec)R&@:6LRQlh1"D:uGr3\!%Z7n$)c2tiY3K!au@X'PQ[J"b@ad15"J=kQ@V,tm?VEcPX$i3_/$6k"M#5:*MB.>b'O0]DUG4dD%3$eaUNtllOj<f#(8I)#<9WM+9%XWuatOEXL.%8eS'c@%p(.7M::ZtQjN?]J<1XQ*L!(j+^(JGU'#+.U2<i4ZkI.dYMEZ#.?c3mV%b%c!`I%pI>=D4Xrb4>WLd:"urf%75E0db&eR0>dH4j@G0,;c#Ut36Mobj?o#T9KQ\2SK9#>R<J$:fYf@q5LbJoX<nEr"L@!-,[QRe,kIFeX!pFj.MrWnsX)^1gp=eB6%lkj\50ZIMudjmi!)[c,[cA&%\kfqHPotPr`j_SOJcH9i0B>'.N;5Et4[^;f;.Ib'\`o[PD33s;Mq<af7H+V5BSXA%+hoo`ifSRgc%$%*]9AZYphFN>driG6Li4qhKMB:e1LN5^VTkCB#mCj@To[S5G#+]_lcln54o8sG=UJ50VU6RF*OVe@;a@=*YVV3!Zg`Jc`eC#9N(%EQ]?<g?g%^"=qM5])u09?38*Ld^frT"DS]8!6p+`$k#)%W:c8fe@7nZnM,K82Ua9t#5$rk,<$XZNJ[2+\mXZ.2I[8h?(_=N,JcZ+%?R.@qNDN'd>;;JN`Cn^9_D7Uj#A@@qFO",R.skNnkDp^Pj:0,POn>E6c>]<Xh"'rY77clC"I^[>I=D0sd*pAtc,$^W4:PB1"&<K,%+?7rHr*s9-s7l+.8d!\=a<6DtcdG<3Wut,Y>c;[4'G98TdCL?WUDDIW3LaQOS?ZJ3"+pd;Ag1u;IO!iQ)dX0jQrQXSiE6+O$1asT%5[XMB2,Y"33<,Q0h!lfdA#jd#YN+(i`[\U/b<3?0&m]Qj9SYekq`GH8Q/T!&BsG;"jV_SIC9eR_&Y.h/kCi((n,9nBcF0=*)ES"J%en[mEPUJRcYD1a8"9B_%3Ac$W0%r,Y`2jWu9>Lplb=e%;"B63K=n:;)Q8_K\`h&3fbt$S1c^uqN^Z\j@9C)(;[aK-*@jnXk.)aOm%<YO=QdrpAER'CDO["QO/f=F9B_#D-g(_Pa5+#Vjl0P3jj*N+D>Z*%1bB6b_ndMWSM8p$S;\,1>*lRZ>qL=4htKe+(!9kG_^6-3IP%qi:e2$$k\Yg:T&"?H@$0/jgY2Jkn<G>Pj%#Q$FD\U;lsk6l"SbdgFj(7'1@O`oDJUaNq)-LcAh*'09'\YD"Dg2hPQW>?6)jXC4jN%3o/G`@!t>-XFR"lpr%!FraW2/Ci+u?]uYjLU'qF%&`u]@R53P2CUh8@U5?/j-8-*dq6grM48UZ@OBk/Yaahft/5,S47PkmHaj=>a%l9^u*%+Fj]I>&-I-n!g?^UUc&attW]4#jF.F@usW%S@:1Jcp?5T?"H=WQ5n>lEY#_KZOT-<jKNn^#>"[fpT"SGa[(p*Y&KU"XRY`%kL%>)N;42lFiaM(of;Y]l-iL+;Oj&_E(\M&jFO;7PpkIm'-U57!=:?r%r`Tf\O\nopSVDP+T&OnS-t"!e7fX(I=t\E7SI86eBBnq%G"`!hg,-3Iq_X21Ed:X9Oq_I3\Ud#?kGEnN%&+J<8t9ZeeA`2aU%P33AO&VV>j?nKe6rHpIR=mcf\fpDp]6!Z7l!,65\KJeBh;tj%qOBV8k]n2fTOXmjkKI5jmBEcjE\BH6m2-.;lmD=s5.@0ob^jkDB:@g=D<:/kR_h\m-\J"oJse31L6t/a:J4@FD)ug\5TtD>6,NGZ%XGDrIRCaJ"Cr`,nL#3(Db8Bme$DQq!']-Z(_agC\4)T*T?cB&?Z?b?/@Tq't=F"#oZEDs"\u,Eh+8.X1o^T<9Bu\KRN0g)"DED4>%^jPt[ne^H+?YIS@h&Z`I%\.Y<**FWCm?Z+=)7SXXf,pu?F-PNdTW*-\Fd.nJeR"8V0`L#Z]fThJh:gu%]mFsDs8)-_d62<4HUnB>%G)mZb2]%Z1ke(.s3N;&tUrnT9QPU#WGIQ>K`C%ILHFgqGj^!m%*U+_;\dc:*j42]JcmTE;]Os7fp=1*XHogl^iS0:&hrUV'31qIh%E<cotNj[VE0c1M$f&Mr6*AfLJB<,.%9tbNi$mcVO',cRI6jPEX$E?k$,6YCGTWR?5Xpsh&5qu8o)]LP<_Z?KXe?)KG$G0%Z6Rh6T%_4%7Yg!H2,O;LquDSc]6aH&>XWK`QDOu*nsI5-Nioq53%SGc-XSVS7I*sn<(\>dRe%-0g;iSU@'"74R2P;,E<EumkTn#E`O2D3pO%@@].Y^$BON4"\-Qm"jsaB!XFK$]2:roA.#<-f1@,Vp8i0*83r/oD5<-H@9>TX%.be1'YphTuUK;$pC=_Mr8;q-0Mt,jhK7AMQ_.d%07a+W0tC.[1K<9@K]!!`Dut?\JfN9j*7QWN&lQJ1$,eFBLEg\fCD,8(fZ(if8?%W`,A"p+Ed=%<3&$rTb>D@OQB^K-TH.3/!kQe6%/X(oM-A^"'eUHsT7PdGeM@AB\Pc$T\a^78sJ%VA[aW<X;<.EsWWLeE`+=/e2mPG,t7^A<K04mUnA50\bVTM??R#SDYSs#\[hQ>$1%O;tbIc1$/!)1P;t*"+<Uj#(d]A.(kq'!uGJ5f\75k3XY%GJ^[W+fnlk0W``jBR_E>"i,&Ynj2m>3koI.q+Z@HD]8%[MLhhpe2uOO%-cW09<'1^p&k=qHEp9`nf=Ae$N"E\`T`g4$9ib7;klcBB67]7S8U;DpE&hjfPd<Ik[3k$U9*/.?:K=!PKZ[-JD@EH8MJg`o_:pd*%'a=ZY77i;hqNg"Ma['>tr2<Hq]1XRP@oj/-&H6K_Hh;J):4+Hc"H-@%%'/cVT2so$VDg9*F2q(AJ-dHToHH?*$(kV`h-#u5AJ8nC%/fM0E#4Ll"n=KLZ5\eF0aNt..FN"d.N7$B.E+lKMj)GFUJ&O>eX9"LIP(=YuMT7F5%@_Jkf.IeKVs)(:8L7gJ^uhI!R'86ae`cMW%`Y)7+Z,%>.G7h'2aMO\9GkAFn(DINWe7Vn1)^4!,1jY9t!FCL3Ne$dAAhsV2BGK$8--i"ebQGQn4<^.B"`AtrB:1EMLNLHpq\ZHX%.2BY<@C@4=O2.R.@\Ei39#lpO=hEdOC5s92Y#tW+@&?>ngSe3W"c:,`CG!I!b!bq9Rr_n_O/?D*:HA#mnZl8Mpq8EJ9,F%TK2@@\%6pdO7P@UpbYa-o9i):LsNqu/6BYXd^Ib#d/&[G3qL8/P816jN.4E=N&lP9;brCgfT^GAjd(bla*5,+>\6OHB;s28sc1a_B&o#Pa5%mLbOmQt1B>"<R6*1A\]2&pR^W2))23/J+L#3,L_#g]TopAa0n]L'S[",/>#A%orU3+cHi^J%Le0FpF&l$`>5r(CoIN2Qo1R!J'nU%.'%P82^%-+a*"iKT`\I9rYr:H?jMjOP"XCYdQ9!GMiNA?Lm7/IH"ae/.fY-://RJsBL(N!fu;;CJMJAl$n;AF23sg0U+-94:/Frq%Z;d'D,AJ!/QCh?)j+><,WJ!Ob&Pp9uW]H29GLjo>/]E"#-"G:=HH'aK'5Ic.$[,,B8,9lE8p5T7WGhmC!Ec5qL-$/^;WXM,XYC8`%Opj4^*<KeK$/'o'q)A\]J44NYA&V;7bFaJ)K(Yjf(f__g'P#!3#8V%DF#-h!.$>fEI9`Hfgl0W.$l;5pMkD%,_:91<h]TIH.j76Q%5;q($Y+9q]NAO+`Gj-EVSK:\Z?ALFtY(tNi4f8nfWaLot=IkHf?^HRX`2kj4"pVC.WS92\O)Pbej3#*uem?p[M@S$_@pmVq&X`cQ%8k&6S)bXmjTrC;un=(%,LWfs"$b1JU8u@Qu'P%X&*'mj?i-F:\4:[N7Qd6:H$*U@2bqLUTUS1\9ek5\KA#3?FA<!XIR;e+(<;=hk%6:S:?"f@uL32s,GRT3@"#-9'P74HXP=],]?'r"AA4YQ3YF#OID>(C.jlXho@[Ni7%iHN3/VdPC?(-(Hi.uud=#?bhn+bkdG=su\&%NgiGYA2m37V_-3k4;E@>A.@XF3D8:n<p?KPf(<)HPl[8KceN'K6:*?8_gc0R&?f#T)?P.T1;Z35!GmB6$)`NRF)/Xnjgoi.5"H0&%/R=3JZ^k;I0>0_NL<lV86OeWi:7*Po>C`cVWpa&WrC%D.Tcec6Ue-1ok-',j)!QVeMnpa-"d86:fFb@@?GW4\?:"7u)\Ia\0ON:2%3ZG@cF;2,#-/I%BAh7SENUP-*&sJqWj#*.0@lU_<r(Z8qI+=?"7oiF$>Ssg&bWg''E6gM!GJD0,]Q!HB<!JI(8rK.\3tus/)Q\5m%)-n?PaAOW/D?dM!g_D:H'#nnFe14CZL@RSc9X*lgBi>2]PY>FUcsoU9huJGeJr$`G3QgL=&c2un2-j7B"4$3b++W=^$/RiRDL0p!%U-4\"GA6Xd=p,:Z_l@k5puP_(3<N=Mau[eeaZ_a`r_<R0aqZqD-Li]TEh\)mn4HR&JZX@@TU_)-Q&5PGJi25-JgjSg4Q/!Qq;Kb=%&[V0JEFQr>PagT6<MmFCM7!Z<bq=!Hq?`I1p8A^37d:2@fJ-"R5&7&]Yc,K0hg$l(A80<FQ61+$\tbD2(TUO<Zl(E/Ld'QV-pt&B%/Ob4)DWWkZP-%>#W'2P0&+)h+!9_pTj_Sh+JN7I&RI%aP@LauZWBhUX9p^ou^#=?BL<(K7FK6Q6l0%1uX%=McK1RhSa%'liBdV5-%^j0B5^ciplF[S<6]/EVKR"//Z-&PYVD56Br)*Z`BERBlqfP8t#D_-H%Q*2Qk".rd?kZ/CYcn^1;K#I=`._9BF)]ph4nSZkocb(8N%BJ:4"2Af,WQDM(9ehO'X!R3D#Pur.%.,]=9.d;JZZTdAW+[\.*G(@b6Fe6@_%12#oLuh)DYcUI9\sbmtMH_4L/'N.B&q<M3##48`%f'S\hdKMGP]DFpIEJrGhP]8pMUX2BM[_X*VF+F]CH+gbcR#fq3L:?uH<nQ,ZZs]8u24tt,B!Iikj*/<J!j)O]ZA<H$!hrg?@+%__%p<(;qAFsAnGjf(_V^>!p9Rrq<fVC:'(tLjiU`qq^gW<a"#aF"1jZeu@P3.?F$RNm,'D%sN5HA3uKMo^n'i+0f[([ZW?D,4`nM6oU%DCb'^c"566,k"+#DnG9NBSO@E!"m)R^83Wco?P)0g.?b(.N")DXSpX)HmpC=1aZ?+ZL-R'7UUGBmo4m[A?$8ucqt;[U"Xe6Brt$.%XjHgm,F#M#.BX#K`'>E'0">r2i%2(mhu!hB)+dt03FjbDeQH=%2OWV;9]mOe/2`<JnoTee$RC7)JTa?@'hbAn\Hs7PZd)c:]=33S%`W42<o;U$YR_0\]H>:>s`/+"(>)b5r7uEjP-SF.)XEG6G_8Kk>S<(\`l\[.g:l%)"iJP=rjBs9K^pp^<Z#[%O864HS.92s_mBMch%l=ad%_lZSB9@@X+mF:-seqST$.UP`PU*r%ebEtY,>bu.MX4U[&m2h#/G't),5Ht!OgfD5s%<1E?=,@7r3G-`?O,+kirW%REf9Kdb%ZEnETc,(^(7HG_W0jI>J/eZG6AAb<&mX:>@mpgI"pLZ^$8G%SZTK`sm*pD<X+=Yk8RQcLoF$4U'&SIj%$,-@5]=_c-cBS,;@&YEd%3Ti@QBA*)DN,'i(WHVa'nLm40G<F2+Ap']Q:q)&dA"%NsV$D!o%/d)k'e#9._W>tV.dlYh/2AbNVQ\:/<JJ"fF0JIa%8I/cO(K;B%bZT3^(u`cG[@o0.PLTii0r`gd):tl_hc2eTNY?0VGK>[JoSY7W&!Y5V&-s/6EKUAQ.g@*!CS`t<f94"lM-V>tjehH<.g1]FSSJO2%4iY0\i81Lp;UJL<p)G9AX'Eq5#-sB$V1bVq0mhr(ZZm[,g37N2$%s_(^YiKs45o5F$am'&>f^SY6c'aF8=1^@"4R#0;'1IXlb9Yh%N6S1()3!B=Q!Ggp-f)q,Hs73^e#]Nc.r9H("MO01SIH6g!AVY$$AAtmc%9K)9_3sohp?)Uk$9ap8UEER]UK"oB-,*=Jo74k+[f:X%/.RTk0%<O6bqNbAK;Uuf3*r\J-5/l!(Q.,!1KA`),1[`C!q=Y_?Z\`6a[QrsFN1Y&\^$BZdMUV5F?%"K4?7p]MW=+"H:/LK68hOT%iBU2;5GkZZb&5h@S\MU"I/%!K'%Ri^7q)7s8F'VImeT8C6s]NFQ.k\+d>V<&c,*;o;PjYTnF']uYt.._T_)*@%4'2K6cVrtQnM(5%'R"7hjR7+s?7&[Gcd-(nTLlD^BZk^.'0G.Tf2sf2l^E-"VtO7U`Ic2E!>rV#f617-Z,>sB1mJ%G#j#$bldHZ/o+A(hr=nRAn+c>D%g@@L4'_^^!J3P>ML9TBgC/.>3'WlP,5Whj8-9s1)<,XerRQXrmRF[liC0j6.nZ(#GH'.Qj`,:g@93B$<V>K9,(N!p/b74),`;s)O%&1GRS@M(N:+$>>C/o'dJ%pretKdp?E+K&1K\)86X,N5o*q5`95QnV-^"1qf-b_E+kkh5i5<Uu2.@mkT?)_ns-@oIs+a1QL/NuKBL%X#O*F=*Qr5pS]C8c\-.T=@1IO0AJ_#Q&.4*$5<6JN[Ff^FY)X<!<F6#).ik_.1hE;c)s?P_@,hGol:+G(->B>\P&gJ:.SuE-5YMn%Ml7K]ooP&!^mX+Fn0ZC!-DMW,lod0+@O+MQWU4XCYd@L5&$Y`Ze%cM"CV.#/VYCU-BM9^]l$%'Y9^\nPdRb#UlW>MPDTYLJ/?8>r%"4tM':q+d)6Lh_09R).;CNK!F4jR:i+/'/-Rc+S%eubACZ^K561g'"$+H:$od6p'Jcm7q'O[RGeYnq9:#HF3NTZi5F0Y(^+CtMZn%?K"(=lA3QsH\@5HBRnVl*.K1B!%-QEFGY)BT#3]HBoGtu?+7%PE*KF/86XOb2bQh!@I;MOV8h^WYfbN(V*A">>F/Nm@2X2(YDVJ:%A>cG*EnN)mFaWC'gfN\r6:3pmgJG13Zm-6XH^f8R\4Zc,,$U;9)6h7,ng0PCCbJ"+R%DSKhCB"/>2OZiE`+d)1Y/pYeHP2!pX8pn%;RYa/!LYd;8AJZ#X$OpI?m>B0A%[R)5FL3fb(hAL(.Jja/'sQ7\Cc@iJm`Wp6DX?Ob/HZn;@'R'l<_+5Zg88,77fQf+H"Vh,L>4!%I\TdP=j)il,M!iXVEJ53Pl[2:i!MGg?eSEn^5+0=/VC<.oGFF*BCbD30+9VmnWUsQ<TU"gh8qI;9fD9#%ttKNjVWn`QA6>K9L@j^%JM*6R28-4do8M-t?]+=nrRYSY"iGP+W$.9^E4blnNYi*=Ct<Ji?pf&HDd6G($4R[Mf60fQ#UI`QMG2!l3@QDZUbuX"QrjCjk?q/c%E_h2LKaC;R!Gt/p,0T*`9ih=`O;XIk0I84>,&&>_k#gC1@rlR"^AkJONe+/[[2.=^<*%.-9!R\IZ>ZL+&JcNYP,FY:J?u#e,]X1=%"1q8<OLt!<=Q$c,f6"n3VbNLJm-CHfR[stX$X,M89I_/^^jWPZBimNaFB,&QC;YRp)!#b^2QhVV/9uESM'pD+@iQRj<C=R<bW:B1%hl/X#*aCiQ=>uD##Bu6M7oIJ<!h[Ak[#qe3hBYrF+!_r2I/lM%p7=i3iiaH"/1u5[(qM6=I^%3+V(H:'r"al)Us1i1i4LF.UP"5\%COQ^9QaD&nBIMD(_S]0R?im4*60rX#=4f>'#@7"88/Re$onoCu%)(s!_.BA$!:>&;YqfQM5L4V9bJapZh)V?M(Q#f3;j3#IiqFEe%qL_?j^5.aWPbXcm7*4EWPX308`CIecB)irREUK6Z<3+26ai9p6.,1Ae-kj2YCVZ*!0Uol80L#Qo!]5-^;j?@6/pfREBULK2GrepL%YDAIje=l77d;karDimTD5%h*?FX[Ft05*f4d?`69N)S\6G+45f`kfQ1;h-b8)Vj'5D'N+'iZNTrrqm;R=WOumOi@MK+-PUd:5/u^%o^)qJ!?qi'j!G-h[qN'XX!24X/--U%#5AaZ]WqP?GlD-KLs;Rs5mElr'#m-f"hIMul"M:+jp5RpfD*H'#ZJ%,&p>0#1c_&r-r1/V%,C_3\9m5A.G1'lP-5Z>Ca;DQ+FHjo';L+E73"'t/AlK;Q7i0JTPGG92&sZSqQ;`B+>I9YC"Ol=NlDqHqTM&,!80.oQos,IEju,[>%l4d"A>RmG]Gg1;qT4J;)O#dXa-6d=<YAFb>B'tGDhK-5f$RlJi2!$L5[mc]oo`7Vo_ef'j8SYjDD`^j&^j;`2,_G`[)!@\-`cmX$%"TdF$DRsE8U`1:XQ$ZJq<+Ubf_!TP/=\t27K5U/J67oXkY+.[(7$r(LGlcA%7@r$P\6Y*E</;;7\%?B_4Og;T/Wj;1HlS`N1`CLU%@Ss'j<J\'!.)`>a(V)Fb4rAZ/r^_1XDAGK<o*q97:r)H9cR\SAOHc:s`h=rL^"gB7k<O5d)5>)RS.sA;elAljj]7%tkAt4P0Gone%n)9)pWqT9t6M67iKO-TdPA?"]Dc[ZLEDA70?\UM[ip,&SNP?VH/lNnX;.H!3_[uoY,g,8*#ecufW'hP)_+GH;b]\8!eUY&0dn<Ho%;nt(?B2#f#fO49rDB)t(qK>sS,e[]JN(S:`!#7#mqTB;B/]j*+8u-?tP%+cBTd58H$A$`HebQ-p&ee.3@3-mO0i<XAHmZ`@F.$fY%BMX0t?s\WH9^OnPgb\\J3&fYZ!0S3@LImq!d3Q[!@6Z3Y(g72R4697O(^/f$0l$CemNT5=G`&%3>L9$rQ!e>LVYqn!g&"I,U\B[8%?en#AUY_oK^1'js,Q1QAfHEjeS!AfF%AqcS-`"EJ#h+VS7E`gDUu)M/dN,,+U8KiA+V@>E)\.n=jtmM20d32];S#^6'76:6Aorqa%$;*_AYu)-4meE4.Do@)T_DF\j1`RrtGf#M"I)Uri.>T*t)Bb=H*%'#QfI:Eq9eCPDin"uE&0!-\&3>`[B>*$%T'*FS"5=Q-]r!sp%"5Zt4Zos!Yb\2>sK@E=5"mlS6"g8lgK=_rf`(6ike-*AoHq)`*2&Wg!eV$2l^0?^IB8_UriDj##cWpc+$VVJp=^XZsAs0i'*&VQF%R2h3@+,/G*RD[K29S9o=221UpFXP*#R8m$>$aBal_`p`.$;jsJ4%ph#SX0GL'XgKujANpfBa((a[t3f9g5`u4T557JN/iH3`CX8`%cERRMQRYb:ALUAq5cJcmlX1rP.hTUX1]/e#\J=K4jt$U`CrF'(,["*\9Q%*rL0,J?g?QkEmTVOY`&HUg\E&NdilS$jfkk5\98Ubh%h:dD$r0cqYK4GNo-X!jG"FYGH3!U\.WbCq]):Sm2^?IEm*75s@O/`J"F]?-d'n['uLZu-FBe0tU4lmdn2hok(&2YcY=GSd,6d8Dn%?^ScMBRYtY!#:jETYMo5'Rl+^'Fl+5SRIYRGa6)>@3L^KbZM\TN861$!G4N!b^_,n>S8g4%R`+.EI-0#N3h.;+l%KfK>ZVf!.POE%YjK#k6'XE5j:@HKPt,eE)u,b>WNZ4uXKneO2F0Lr3iK^7bNTBE>E<Q1^WCLMN+(<m'O*mH)nQPo9<-G_L5(_6,@OaA6Q087&BP-o%>*DKS#ePtOPiW$#Sa+U@X8op_#b75lQpp0Pk8]=c`2GGBd%hj?VSa@Ao6VHF(U<18=ffI,X`4=MB6"p_%hPgJ'b/5ErM$+3aQSdQ%VV%c?rrbVGSs6'dA8-+]:K@f0Joj:Y0h$t>1'+<68OaF?@>dAu?D=qYYs+WD?k?*JA;NeZqC[]^-Jb1&,P"n=T!@?;?Wh[V<)A:q%oQ_Bt(+LB6?S5&-c6[K@KRZ$\,hfS^bK%$2AsJ&LJWf/X4l*ZbrJ<SZ-F4](il&>n,V=q9VO;Z#n4]GCVo($+Wp3_p=h\2I4&is=%0%L^NWO*tEI(rKlS9bVl8DJ%8"'Bi`nCpNn-NB.7gePpl;Xo>dW%^;ii#jEuHE\`J/6&-+&2gWU,*4;>A^!unKG5o$\i-0Ln!Hn6%FiH/Zjqh_W*0V)ogQWAegc[S!]HK3:m]O(C2%#=39#-XS8ch@V;A<>2-19IJK7uE^RgKi(Y9fp6[Bhsg,(o!u$dL_G&/8UFLorh!%J[GO.U59R'BB2l7Esb\9b%[fcZDs/bFk%:/`!9p!9m*OGi[WASDMmdaqTZhHE;9NX:dI@?J@=,T`#h5AEC#e7;)t)0bZ'TEfH+rl%a?%%A)'`;Mp<"mg&^2EkUu*8_s#W+"-hb[q3T;JGNEPZm-(>*A\if=+.u.-I:S&bR'3lh/J6gs![Br52[mo#nr"PeV;ba-D)U@bq%:q*_'5oZgsBqaH^e`g9NO?^20H#bE:Do'SNi>@_'0#b*;a:'o]=;M47r@/MK(,PX2FC@&+q/2VF)AhBg8WWI4A_>YpDDZMR5YFj7%m"=Tt^[6(#![(s+BbJEKR?[skVqg[&QkqU)`?a4/abq<98MTm@9W<X\9&VLl?#qKE%HC-GmH>(C:C^=&hR'2<ofT0M^N6<%B32cC%*J6q:)51XV3hIE7%eqs$KgR.L<WQ03VtZrB=>DbPqW^]Xlg#KGlk3I=`?"hN08i(?c#dKW60>P[Od*t=TQQ7@&D7r=\saGRg`UX;%?jW"3W3/SmG8cLi&nu%kE;#KOBdJWO8M#<s%.nlj:'PHimLOU]l>niY:*]q33bEm]FXJ&N+TJY"KV+,Lj$q\#cpodLa0R<aHL\l#%V7cJaLdQG.K$`4tr-")X#jRZ&"pZA+@E)]p0d':YIT9?u3=6R\.o(hrP0(2L;?GB@1B,3Lkpu>-WEj@(=<u,B_oW=8lMsftn`-"L%(mVD/.O&/?+)XZn\Mg0c3'S#?k[m(,LHHE8"^l;bq_O`3GJ`B!7V!6<^9As!0e7b6?N.adbdbhbi;=^B#(m(>T_nS3E'T$l2a@Cs%*phk\F$0D]iZL>gg!"V`Y63cXc5Pae;o;)VFuLR-q3r@4],G2g&X&m#G]P76i=+>`Y*'70_Ds'W>RmA742s;&YTG9ZK&?-Pn6>,#%>uXr4#u@P#qnXWa7KO+K]`JZ,gl3-1dXVJ8S!d.%d;YaTm%0jQ?9#JS4RY#lG3%ei0X0:dj6c_#=fobjDkU$!(qmDFA6%"C"0_G\%q=ch"n>998@hFd2Nd*Z5Ygb4`>:,i?<>En$3iN6L"(=FYTq0^TibsXu<O-VnTtaO'%mSAS[d5Z2Y6TGO6h`ppIces@GuRS:-]+D4%RiV>OoWK2m"S-d,D6^(pNpV/VERd8Zes&-KHL*HbDL'[)_?E5XTW$,\S#c#nYE[hLJ=EUt:$uGWj6D3mB=C)i^KTES\,PBRIB_JX%p%:q-cTM.9Eq-99VuW4@+t>hVUT-mo$_F5Ybj3$0dBDf4nXSG-s2r`%O$7#>h>c-I%^C51hGn032@B[r"T5J4)[V&<M5;0%$jo2e%dc79=/MfLp7W"&C#UOuu&:+;)aF7iVe.9rd:*?L\WMu\\9ep$1:(F@R.C1mK;\(gY*5TZ>DAcJ!Y8C>`^gIsILU4@nR"K7E/U,&%%mK&-W:gZU.d%G/h=f>d97/"S!0Eel730B#SOe1sd2k32KZCbZRjX#MS_)+hSFg$Z7HJj[KCn*S)cgSWm4ZM8a6RFt/a_Ac0C<"-I%G"dG>gnWAh7)bW*+P1X1MmL5D1$"5M;'O4q7Z9%`D?nQT-%t\q^<+"9eFQ"i_[-Rt]GXXR$U;#*W%kss5:o3aG;c;/=2_FrL@eN\%r:"7<Bo[3Ide4*G8KR7[o[t9+4`Z&^6@tTc5MR6sZ73jFA*-eC2BI5!l[2=GO\&$9&pIPtnj*DIT#`;DOVPD`G"h?Nc'B@hj*VKF%U'b,?0R3r$W!dXQbK33399n[8IHnUVM=;:Q=8Pq1^bRnMqpRR3*&@dq$\*-t!E:bGEZiTKjNaS'EG$%.%S%(o-<LmJ/j`1L&'u>u%kpuV,egN!VW0)6*egi_9hd$G[L.Da&3ojB.lS8PTE>a6?W'Puo,,/.J,6532L7\&[`hug<VQ,dcZ.nP)e.BPB6]anWP[Riki1KT,%1OAdJ6X9c)cdG5qf&r^qBuS&'/m`6(3BQ+@[4!HO<X?>Oa1&u^N'trj0pDLTR!ck1=b90qD8[_mp9r6?Z<SBZ"iF2[eMcG0XT]cP%%1[QHc8'5G,^I@C`dTN.T"'.Ah1t"31UQ?)DQ#K%:'ffgR@uMqOPc(ko\o:d\]Sqr7,Xn)+Am<]?dN[l$,+Ong:dnpNMr[n`Cb@S%B=/e4JeDW"'A-NI9Vi@QP:bX$]324qG?qr4-Rkp3A<9@RU'[RM44]:h:Ru"l_gRJAkgH:k7P?od(thcC6ui-CR;_?CKaHF1Q*GHP%-&Np<V"RG,9"VTdBJ!ngA$RPc=PS:aJT*8+ok-XXF).#;<AU4s@?:lWLiu\6UI6r\CO[dmdRt+No(Ck8C:_A*)d29@F"J&_JHA9j%l!TJ&S#u$J&%R;N06Z)*lH%6P>.&#3PU`E2=3g#,+IZgGZTaTg[D3/&9j7+N5nZR0L5(6eo>5d2qRG\?o!_g/TX.`UXuL3pW[1Qu%aimp'9$J1YJ\k9W)3&T6MUS#./C&6f2fgD_nq^5R?\Wi=0n)E1d4FDIK4ab%'iSWP>!4Eh^#M6Hra\B,0LepF^X@q#FCWk_SkiqT%$=E3+'iJ)\S(3]Rb+*(ba[Y8f\+qG('/48U.(P.D0XjZYKJ^.q*:?A>]#6.bA?P9n,)JgX[r\-?J5NTs],Rl2K8bYd;KdD&:-6#_%34V$hADG#%adB85_ZXXBbX:Q/,ZfktE\89SM.&^bm67opT9%5oqaeDn):d)E1i.!B]i\_n6FS!IVTO%Q=lHZM?tbX)br3J@$R@@<%FZI9Fm"o?T7!9G^NH1:L'&U/kG9(l^,73Q-oZT/p;4i/*Ppg,i=Y3r4TRSTScAin+iVadL?!akEPi_/+bD)',3p-Z*-R?.N8QMUm%Lr!J!A)X=$O+2<n2*ZQ:Ydnk]lmUO8U"d&V9!b-1NW"SN/$E_q]el:$P09@*@JR\3qX`:Q>bTE&JCM7o\m9/krVQ#q(-D`93<\N0%!J3tN7BV6*ja=hl]^0IESra-$:ao<>P;NCM,d5ZJ7dem=-WMq-8Z[1u7?:>NfHU-cJu\lkbi14:HDC^Q>S'Z[.(j--VY!/s?Aqre%nU8*S1tB@j<-7qF!O&Y?b6BJ:3_[/7A?!'AamF!Fq!jFtAV5JPeV[r_!rUK9?]*A]/Tp5WelAU7erRps&r)GbO#"KEPjGXd^,;L`%OaW)CPb/jrG5HcJKjfRaG+^q$4P;umR[mGYQR+U>*23p^B-g5J&Li`PNB0g&FN29oi)^faR9-X4H\,jQco'rMD7Kt&kcF%&?0'dj%OW6Z*))@@;0_S)t`25$u6RX$43&#(YgCmalG>o9DaKZqG1DJL+r?A*M)&Zp@7;("S6^U5&hpNb//S9pIK)8[!$bRKo3fZ'C:l7GB%^cPF_.&&Ug7`L"UpR?o,/s,a7.TY[G)$f40gi:'el3ncmqlA'4<224g_6uBri2GcLm*YO<3b`Mqan0O2+sIV=F_@p>>Xls4IC*<d%NiZl:;#6YnXP[3i^:/5rmoQD29kr9Fn/"AWdP9[QlC_PIg2G_W6<JR]`Cpm*>7-4;@k'g.>6L"q,bY[R.K6Ug3'O0Pk&M.I#o,gY%'NPk(MU!-j:9^+YH8]VT<gc<[pIV6MKAd-P)kWqja!)@`V3UNcL@iMnUouP#b0YP(77M$8=(hm+83cNC9ZMf?'&?&sAYfYWdH^.3%;o0;/7PLk,9$L>W6*UWbc5\:$euMb$/IXifqeKa&k](1N,d7sLn\&Sg$6HiMA$bb!Cjed*;@Or;96sR..(4_OPL]"b;TO5D]T-h^%ZF>BC9mScnigLlUlHVCf5B(Cb,D1tN1]Sq\k6m-kZX/):j$3KB0UM:@45NQur)4/O1%osW-oW4\"A_C8,9P8V1;Ne>H/`d1OR.W4%HU5<kf'A7*H8I_T8Ml]`AUpHS%m%:*j0t]$j%>SRZ1V^_I0e>4(I8onks?S)02dJ'&EFe8GESuA0FYu/km8<9ZhCM_LMUORq\jpO%T]i+f)_&qAZ;=%NUI<0A=R0rA@FR!@_*+gC].3G9;Uh/GAN9R@\*')$6*5btGZ0^:VEd]dc*AG$T+hFa/hMs=f']IHK4$Y]QmRY9%=$JRGDXJ.TKQKMW"Bt3P0I2e:*9`jiA@0<0Y(;:<^G0,eVH8(;ZkRbU`X:K5A>"TDEn&=d=2Nf7VM<1FSNsL@:h3AR#BknK$U;U5%@gb,Oh-cJ*B7aon#%(7<QGHGS#<j*,LJDX6?9Co6d@<27`(CF`@tN$o"n5TD+&kL,"\)QdG"_sgoRT>n:8n(spmjPQh!D3<f*X?>%-&8&qru(6O607Vb_")W'G253Kn331g=/9a7r"7N3B`0mG!MtC\Z_K,!JA37@auYpQ@DQi'n2qYTmpT[]JD"@>Y`cMBQb]tEd'NMr%WO3b:`t27/:kVoWc=m!Zm]Y926VfX$-]>X'dd4&!>o1)<XM]7!P'8>i8gRuE>8bYG?Tq=^9Z+KD80,GK`gDbhT3[@6E?:!tmCM6A%<Hb!<U'`DUYLdukgbn+B-kS-`MTb*Nj>JJsMCV:rZAFJ?7;s"fWrHZVhl:)M-ormhH*Ll>N+pbE]!lC3*I/Do0(_3YVZ,_oJ5ITh%7@`+!<[>`H8?]7LJM`k]%X3e,U6D)qmbE6lHJ?5,'F,b[O&lmfi+pj/dS'n`?'#Se_&eZ8q)1Aj@s>NRDf`/U"WgbbYslEVn<)J>%7B8olB1'jCCn#NY$<@8U0%IZNlN)I.QaO\fR(GWLZDD/VV@SOrE0hRLL,A#;6p<gGfh/0j4,]_K*C.Q%TlUWFmi9&uTDeX+EtkX4%=>3W,`d^A:('-j[ZOQPY5=#M5GLoA6(R%#N+<\p4_u!T*E4-k<$:gYUqff41-.+U8.p,@d!8fpB4Z]'H+`=Y6n4p6F,'*OS.l2`B%>jXrdmVBl1$N09*Yh>nV9Fu$,4dpS?Rgjq0&&dnMPh0n*?s2p<ia`.J?(t8uQt82N<gFQ]j<0mL\q]oF&$+YX`:V)fO^YB/?>mW`%Aup606+f0-Tg-/WC_0Cb0/M4\NCJSXZOCL<RZFX2\JT8lZD&g5XIE<:9ESL&&H9d0"9`;=fA!Zgb%ldh/Jq+9aoS.SX2s6Y&W?gX%:Y-InK?inar\c\i@0m\%OZ:^H-!Wj7e4HdjJ5`IODPA%C;*L9=7CeZ=#CP37bgF%I)@2PqIP6</P,D[m5n)5[.<6J_S2@Q;D#8m.%S#IO0j>qE,_c&>6/at`"HieoU"2Z5hBu$HtOYgnA7rFLLb:GCB,a6<GWsXg[cYcIkCDYpo6F(XQGbl!<S%3sZ-3VZWm]r1=9Qk_t%A1K@V</uaT7*$br9li4cH?Sue_IO3'OmY3GNO]dS?8DOt6NVNF?k.Ap?pK6SP([o`EKJt_CqHs5E%?jV0Ol&gCSA0C#pFi*]Xqr/%?jhKT'!SSo"QXU`PYo:t?G)7IoaH5a&Bk`BQlQ#Kfa(\h7nK?'Xm-cY"&6aVXHTGb,-]1lCLSoe@'sj96b\AGSG9+*#2tc0i,2j$%fN!dJ)<)Ei_Ei"g@pHgCl/$okjhS9XpW2KlHWsKRCR>Gp'3>C)g'Y!_auU5sY<-qtX$jW$aT<4"5g3o2bU.,1c(G-IGqK60E^-V3%!%sQ%>`W>hKS?<pRHQ[=g`Z&_`C\/gU1nh>njRLe"hMNX9E_HmiG4O19lko=(l\u+\2^eb"'-Yi8@)3toG:h9[2LpLr_(6*+Q63c%UD92nW\f9%it>eC;+,*]3uJ0Oam(CeYVNk?g(Z$W&Z9'kY52t?nD6>I^LRgcJn]f'i:daj)R_O]@8V*Q#J$Nhb7;l$i=j^0j;Nht%!J^NNr"VflkpeFZN=]M2Kk"paQ_Te+fg`jZSB,mK8-f^5:<V$:!ia6^N4mCNnGF=leQ5QJM;_+]SDUU9/c"T\\@Q@9),HQ'a^[t$%<b!k17N$#T/c#0&O31NaUZbGke.u\g.r$3.'["S,!.@stC$QWr9O-o*`Ac8I2(#[B$aB+g_MaV=I0oLbq.sN"a$.1B#fP/(+_\%)%jmk]Wglek[aeG?#8Oi+a>Y!!U.7sWG/I*/:YYrWAif[BERWd#cT")G!i1(3<<]:>!TKf6lHr_tEVO'k3f1(cK>H%Y9+]h#BE,>^J%Y0?#:c=<'QQUi,/s5jHcLs7P+O>op6-fm\%,"`)7AHL5XKq]B>m+l\bN[sDfP-$2XWe/mIfm/g$'ho\2rVG>*aSageo"!F=MdT.-%k$H/T$?jtTF4d!oN6u=H#Rub^P.\:qI)cr8\fn"VMVbE]ZYi;_jW.d6@G\%5_:J8Kh0(?gYY6a)_F,)VeeZ$s;j6Pr<sBmDe(p&+%U>;k'F,?f'_NC"HPV;9E@0qfVXe%PZb=/-%U@+r_>B/ac]@8G))h^mW&A,q-Q[Udq2Ym=,3S_GXCa<<R%>pR0flt`[n`#]VPpiM'%MrJ_Y@d:s*1Abfb7b3'1QU`J$an?(hqZ3">Ct3.bKij/Pr+di`bU%*'BSt0=ZWu>4mKPh.kN;IVQhRSu(%fqq?B;@fU#SVM_4Yt'%G?^*m(d2&H$jYOn$M2cIiJJ:V@^d+I-^nft>.Y)A/iJ3TmihnUTR:O0oQD%$UZ"P$Q4RHhf?9U\DE?2f]+Q/sc2Ds`*f5TJH7ecY%;!t$g*>K'@.#"Fd]QlCdRJ81P%@D1\L#@EL>+0DmYk&P+AiG]4boJ$@ZaSr$OT3oQ?HejF9_-,n,a"jp;3(&_X$qu;XTdK)Qp-T.%4[BicCdtKK@)(23boLE7f\FJT3nhWI_q&siWSck6Dh2+b4*W^;g;?K/>(t3Qk9:$q5rV3bju-dCHC:d/&r5kNfcUT7F"@OIC,2a>%I9$i)M3\Dm%\5:/VmE0iL^L)lZoIY#TsKc6,g1=O5m%"L\H<ArQ:+$.np/-RO]h2qh.N6/?>_^?UKg1.i#iOBC4)>JrQ/5_,p+n5%;B"<9BEm=i&kSYU.Ps)*U86"(7B&S6;O8of#u_U!#r-=,0gmX$r'c\Uh`p745Z:c7d!:S;.:F7WfipiY<V!)0Xu\j7L726k+lL"`%5g"+]1?c)qeL*4!)NhO:2GbR=XruQDT<&tD7PDZ-L1\VL1>.*lP2VSUC[=oon'nI1Z!50*ULu%K=n8D1<msEL_I/hhC95jY<5`K7%53C5/Rjm4=6'`eE(G>85,,W;\@JpTsoVKC4Zfe,<=2LAJq6]rSOulPS6]4L52:IHhnI@i?2jRIr2eD[9/bnN(gO?uBh1/XKD@@gJ%>?)&>5p2K'.+m,;K(RJ]krmZn/CJ[,n[[GM+fNepN(r\(FVW2LgbXSE$;Q9#*,"V&r:g6h0E:(IrQB]hW^&*5nK7:frq1cnI]kYO%7&`qYrFXA/)76f`OU<"VDo-?.!UK"j<Ifb%gjPXcM.9[i67aIGPRS^Ylb&87n:WjL+MrDL"B\AtEtqGsEW_.b6jF&jP/nA;?<mjh%%<JXGG;X+,GGkM)DTkS_6q.^s=mNDWkW!=:1@?3^%qCC`g'*-U:[HO.=/Jd$@;I6@-#.9*o!5u.\;89-ruTi9%(UeEr&+cA+I0VG%mF<pb&Ydp^1u67n`#s?)9:ob?7]nEk^M9$:3f?VW";@N#I'F4`kD*4D<(4,OM(a<A&0(/V0?7YoF]9'I%3(uEb2W<$;*I0ks'fcn%XiKIlA%1d#\U^N/-M:'_8s#/?-Scn3:8=#d"JXa_RN8dF!NR7I+PRNnl'"MQgPa6Q!5i#Rcg(i:F`D1NbK(FFgN*O["G.E`;V0#T%726CdG!m)87O[f)83)!=PidqmT0M224+8o6^PY+Rb[q3I*qUQ;[*K.($]W=Y_LOm:n2UW=Ja/i-,A(Q;Nu`E.BL[d5FZ18l=N51+%bON-soM-/72iEu*q<CCe6-[kKjQ,%b@r/]^aZ<e"oNT&;=N<\S<V=!n<Zu1igrkn.)QCI+G(in&rt$?@iNo>[pf"P.DV^`^)>`q0%ai-piF.B?bd=\ZD;?V5g(QA^,>e`[TR2f2AqL<(s4<sLE+(WaR3\;1*cU*j]*1Nb_<;XnhQ12]S.FjI.&V4D6]*0'*9X`PR^Rf8F%08-Q``N2XrInMB]74G9!Z-0RJ<Eg9if<Jp+.t"D.^Gar*Pgn68MitZReAL*[?f,P!S!^C7:qID;;_5I6b&#6EqJ:R"<S!=BgWd"'%Phm$fb`RVQ[Cu5qBtE2h]Reo)c*<=(JoIhip09TW?sA@h%=OgL/aZ4"#5*0gMX?fU!"(H[-,u@=giQFR?&0+k[AN.+b$Hrk4??f-%Lp$G.eH>$8jugu\m%'8%qqPSS3O2T;G$>GG;\>g7)&TNj>bbB[3V1b_QnP%3!4[d=oj^g6bu7"0o1/f,R>'I$WZsc7M#FGb#dBO!%5mdmA:O34(JpBIkhFZV8c72E5UeoO.m2e(2FN1Q_Xu5P=27iLVI>rEo]7WtcNCe9SR]JB5O,;.P22DC'e*r@c(.oQq\14=Z6^;?2%<*"n=93Xmm?GtDo,FVUIX#el[!cW)M]Vg_02)`.J]!4164C7]`'!8FsAm8c;<TsClqePHdJ<=\C?Y9$?,AHgO?-fC.F0UB:FHZLK%<CP9;^3%!_,Ir"=45AAiQO\4D/.F7\n/f:60^A#'\*MYPURq>M=VcG[hL"jN.I"6mhsn!p?7JNDSuZLl>62$-eCAY`290K1X&;co%;*]Z)RS?mi+4qX?ka9cQ1_]]>XD>A'jEmXnnt\24h"g6()2)FuTPn8:P56[$^Zii9g:((BU-'IhG-,W^lhg@;UUb#9UU*I[fMRq\%bcA&.Cm/BTL#kP+V1!&`lZbt'*eUN0m<6Or&oDRkj6ViqNc)F3n*HsQ[]EOfa.qhcUG":4!42F-Q#k'p5e66XR9d'2#g-:mFnYnX%2I+c`=SEc5.+,FL@oHcpW_3s.$eUj$&acVR2lX*)/a7e(%DHV"!OjEfD89#RiB?5"n&DfsRJS`YhdN=2Q##e6PPlNAF0?b('_&VK%hD\a]P1luPP-O)C\GQBmL]u*iaDk82W,<@fe$aO#HX+XZ_PRaEm9m6D8$UQa<3Jhb'`/(WO)kgi4=;,BNYnGCS?.!Whun)>s"f&R%D7h#'4'3E9.B3^ZS39S;a#907Uac15e&<IT)DY4;^c57HY&*leQ:t%_l'1JU#9qbB&0)-Fq=Ba*T'cQ=rsIpH=>2NCZ=eL_QAhCl%H,HK\A\t$\f$m_j4Vh[Q'TRel8DWF%]>uI#gp<q,EII:eR^!D8.DpIeO9!%L3R\utO5H<OC5ii=cp@c,O"1cj"3,#a/)VRZc7K/k%I#Ah$AB`seZnh`FN/A=b7l-O6Al=8=W^:@hN7HnL:3<+J(uo6c]U5GrN@&g.(k$3;*!2g6LnqbF;6(L<\ZYMu%:3&.#qWp(4W8s/%(l$mWChQGLqmWdK8n<X7M0T-ILO,5I#DF%t^86AZ:_T(:9E)RL0e\!(Qn*[cpj\P3DI,d@UAn9^%]V-LJ)6pI<)*8Qj33V`qJ\=K%UF`TFWe!pdc6_dMPtop1+q4c_njs&P/TN78)47Jf*gFY:6MB`_IIT.SB-#5>C,"#7;n$i8%'doL-5i8a^h&T19fH6H,.dtbCiL[H%rWZr#MGcbr<>>sV%aL\IGdn".:C(KgB4*smA#9O<E/i]_4?sep4Q<Bl+q3rh'/8fSpFTT#N<T?aREp!*/^?&ab.70k:aCj*bkmd%%VK^M>>dn)hI4OfE6qmY%E[%3C%=Dl<[sLqdY_E`2"`,,[fpJX'U'0lh\G9$P$AsF]L1F*`$Y##JW59SXN@p4Y`1YL0cmp9rFWU['%4Rj!"*i2R"pco(V5Q'K[EMA^^o<**feZEFO*g8=b@oe0sO6j%qheDs##^LH,mIE5kTMUgHEMmeYT-Ss+E/lPO^_pi&,2)Ii%"V]9%nhUQ26IMU6Bo,3=`,^U\4Qj*P+BcZ,'-P'3e7WCR;)6qqjD5,<q98p,hnG6@9o3(NnIk'-"q!SVQDm(0(^T_aE[X8.JCdVF+-j(#%CQMYng0Y&IOmAP[`sbBk5VCj(HG,DRASd(/rqIYaOD%H>YRI4f&(5Qu](42J-Y"N#W/W6,*<#$*ddOssP^FQM'JRQDTriMF>2[qK%;%Gd$AIhNE2)>A/l5qrD"Np=3.#e%jU$<DB+5V:!hul1=+Adu?Sm8Ff`2kU)cjf92#qVP"jD\XDRJU=`K]Ue`e-t$5aF-`j\d*W[%eb,dm1Q$/2X[pTRGOjXE'm?iV[qpXM'dIN`/,mAu$=5je(90t*,i3I<2+m"tgf55l=k11U:Ne$o5D+jY,bB[hWM[Z;GX-.uKT/^R%Z2MebK=A]m)ehs^'Lc]/?eFUEQ"7\5!:_"#9CTLT=cra\K2cf<BM"fAnV]Y'&p%.I%g6tfT'%Xk!rORbS?O*.glQFMon0>f7;Y<:%$5n!u0TKe7Yq5dE[&o3F_UUF/nJ`$kJ&=,j0G3h#7$2(&_)re-bFnkl8MT+iE*H/*ie-abWQ5VS?+LP4mpO2V(;Mk0dg?Xd/Bk)!%e1(_:`,^#u%Zo3?c)8@FMOEr]H0eon5:#%o2!fSe@f*4+6"l[`i3&eWAS'LYh^4`W$WJ:?LVRe1[#n]>CddH;rqmq[Xd>(mDb>LC%:Ac6?P1,7$'k\UVHnlX8BF@$#-P9taPj#^0#E`BWfD@Wn9UVLl`XK0+CGfbd-X?boB$i6J0V#H,\N:8h"M4`>9X+81mhJN+)VukB%L5)8!O"3(pWEkqfqgKfYiDZ-I0!E[;hOd_;M$KoN+bukk0?#]3F$S/`=(HG4,dC@#qqVg<pOh<ToQiS^`%\G`V"&q--6bW!l+8,i%;^bhY<2!h*U[@U`NaUFBC<iP!^!#^hF+V'5Xh.`=8Bru?0&tMDBSXMcK%J%jFa2eap:nB*m$i(iXa\IHRtS7U)="\@hQHEiVeZub%J3qGnrr\pECVBc_aHT&JJu`Hc#2rF,46lc:YP3sQ-onbe'/VqmZ*"1)d#.>r7PRiJ),Dpf:XC;sp3+sG8u$dIh_1S\#q1Y.p]N!b%D>g3R8uTgupEqj1V&Rg2+8()ZQht'HMhsT,BRUmfdk22k0f2VF4>AZVj9F"Z39oltc^Vle"O%.6S_r=T7XFe.&"q;Yeb"=?#KY?R%DYN]m<g5NUWMLTPEP[nGh4$]XquAS$HI]?,TI6@"QoM8h-]o2&DpV/0gSA&?%sl$a^>>LO>#uMDkVtPn9(.S1$Zn5k)`0"j3+d#5%Y-9(nkYc-j_kQ^92\p+Pl!7sK_hDEgOUmK3p!W1HTLe*%ANb8Z=ng;+c(2m!G'"+ZXotO1pk*4]Ye_dc7G5mC_eE"u]/E.=m0W4D%9!4hZ;H/n2E+ES[qBl#[0u\'Bh*T,G#`A.r;sCNb8NNR/VXG@Bs'Cbd3_J&aCegh9V^*nXJ,e>P==_ljI#m59_>BFEr35eIfAA4C%\0f9q+l1W2IBrf'_Caofh^uXQ2=S=R5-1UT"o#GP5HNVK[JdQ1h\P."qO^"/lJ@!ipeVm,IIpAuQT)I9Y4B0(&E6]?pRsqBWj'"V%lX&lSJ?1/NXh"p;iIY^9i3ulV+?4b)WXV0n,eb$GQK[5kU..P(F8`\N*j^+Nn%-TLb/knfl<.EgT`Xhf7e:sIk?G(OVde#^EmYV=%I'8E*(UHNOl1_4-mtIf\Krrt9]1QEp<6(#:G1`acIB@#?fD/J5pn8UHS*'1>Q[C<^r*FC=3]U3W"_5]CXP"WU>UIfsJWfE0P+D'a%?"V<UdRdtW@]N@d<om8]R0m?>1)Dm[l;_!;,51c4^X?!)F!='@Lo8=k<QJ/\rY$<KWkCgI?)ht'l09Q=4GF1,Fe3AEK"^_Z!Lb8k%4%meSV>"bN.LUGaFq@q@Rk=AgqT81]MM%k^@9_8ig%HT%<+T5kQs(*qJ8/?`'5aZT^?X>EU9ORgrr('LnA>)&qo=&!J=#C![=7Bo%nCE3LX\$?a7L&=p%UOK*Ht\l9Tr#X#SdU&"Q/V/cn2H=IT"Q4PgI&V3OF[%NlS7q\L>omD`Q)R+O+nHD'Ep-10g7G=G\aDNXmsDd%ef8Vq45Lm'4F;TPpAha-/hfA<%_h4!?p4+lqnolQ&T9fX^.gO]5qkQ?'n6faoin/e!3a*eZ5B\&BMpLee.Tra0uObpp5)7:Lm!q(%P(8oGKuI!kZK1*e,3_?eF&BZc&Ri%b>T)AB-_>](ClgF7oUQO/pr:J(4?*J4MRe@lXrt?D4o0BnO04[YnIp*\R(Y82bT`>bF"C:?%DqD[[LEuE,C]Gl\'(e77W`1gE8^fb,oR+K"d]0QW6pm%n-,<eXG6/P"7p]:6QFb7WhMf!(KCdp[/D8F+#CVL;G96r@V7HJ':FZ-g%m/E@thj?I)fK;j_hJ+e=OMMJaIOKuarO&V;`>bOUF*EpRHK>oF#5X.(Ujg!O=N7DV\&%k<j1SI4>;M6L%6)#qjS7T<j$R%3n!u\W%G6TKc^V;T9H0m9E-B`QTOq18ZMHY5]ND-?uQf"o?)H-n+L/Ma6]JWCYfM][V$gtS]g^<"Tbjs>rj[4B]Bb"Vq*V$cB;tf2+UIWdq%k+nQ:NpOhr>`D>-\4"6-c6_A_W[o;<GH]0ah`k()ccX))I_IiM`=i&!XXE8sB-D^Y"T0n(0?.5P(&]]\2_1<=rlGUW)DZ=8&74X(%idbl<L&kAE#K+>2)M'.:Qmng[:]scT"^SpF="8i%*<Z\W"-Z"R+2Uj%98j2+=Bpj*`MrpUD+VOb88\WU9abhCm$,at8+S[h@Nq7K%GUU\A2E)#^2kgSUZu.?"KU:MY`G?2<EoBrf)9#]dg.IcKaW-L'XbFkMr&A_<8WY)(M8o`?8J<bm7ACIAm3(.+*s[SNHlS8QH#Rr>%'75Q3@u5n)g`K[uP8AZZUh?-6G-Qk%hWr9?U=A?V+%[.3_Xp#\<YIt0N?BCS4oAnrXMoPOP9<<IEDi_Dn+J[d`/Ga"[CFbEM'F5/%bZ`fY^Y[S1<o7lH0G&+U(koCpXYUB`Uu<C^pbn8Y%TuB">pQh]87o>>l0@VD]X'jA-G/]n`i$'bKlGL&E!!u<&CkQ=6'`8eL4'rJ%[3,kU"d=gmo%"Z6dG+6U%JT_%)M-mgiok)%r?GG/h>*uVSFb/JM+NEQr^jI0<MI.5nIU)ng"Ka+;[=Fop-PcfhHh4dWg;D7X4$a_%eAEZSeDNU.f_d=!Rq@\%a5jT&]<?W2S(%OfGqGnpa9hq1(P9ZngFQO$R05K=FsDRlK.s,jnU0nkc]M2h19*?.e-[,U#&Y$+pBtkb%+`":k]#49BZ!jX1aHSWVdhE+@CjV.K*"/j^i(/dR@Rf;ha#\P6bi#h@"FBM+dnRp65FJk0MubpY(rn4)O5Q=/Q-GED[FLJmNKQ1[%*:>&[iPeU7Fugpl2ei>+]%d/p$2%>CK=bJ*$9`d?!TR@[*mC]YPnlUC0UeoM*IB`e14*lLL?-Q0h2S3hpk7+d]UEs1]k\)+gu_`C%U/dj4QE/B.a!Y,pBJDu/G"Jo;$r<Q)2f2T]LP5'^FPbE\/pV2TVA/SF^u+k;`HXb/JEOu"!md;D<BZlaogiMp\2adK)`fE(#)f_/%YT;o7d$+jGU[@W-^#N_FVRMM!Z,@;5dCRc%at>iW0p6JlL1:PLgL^Zk(GWm\-0ls*CB_<8DC"%1/C6#+4M53Vn`#iJJm'L^!9T7Q%<%:B<i2Z(cQ0OF[oNS]27FZFj]:15pojX-%0_RT/O^*',+nSJ$i9$ujb0bbs#pqs^Il?Un$W<)SrW4MdO,!,:\,oPBK,'*_[hk,3%7qB-t\9:m%G?\FY^o-U="[5+=[Al?bnW8ZI-lZLiW$LBC^bMU/lEO9^@+6Sg!m(HD/b,oam^?8'9*mJ@U2Zn^9_bd5km1RSP0bA\%9fYQ.d'A?)L-RIbep2.6NKW<I3fDBV1F)]0_88)R3]fcI6=Wo8MXjHs4*mE=Q#LZ)fCCkg#Vk%nj'FmuP"GdU6e%Ge[n;_:$htp7%XjBdnY;MkGFUoZul.\YYND"g>gb+M^ji]h<e>e<X1`MQYX19?UPG!e7<+h'K&b1OBI8Efu6&fA.Q)appA?usedGb,&.#CdDV)_5D%`a2a_MN]kU`k[3?FFd8Gqh_+ZQs0sY2+_j4p<MM#fYpMUNjqT'#G'$q9Sla[pa2^KcgK%Ceo'pjdG07W6T.Hj^L0#8J1FX/Qs,&j%755;46;s:qb^cAsFX3N/Mc\]9CS^'[joi_(,8X$^B2o5%hOqE$-Rl7mIF2_qE+2<B7dPq9ldJQJYhN-C0Orfm&Qq6ZJ<rklL:6"]%IVmXilKO&d-g?-A%_I]."C!7m<L3In!RjN$.?a]VPs0r%KW'o'+a'Ql'J^K*cmY5SXi81#-.>EnqC&o@*eiT;,)gIlh<2;G$@+Js%b:_jfa^nQ]E8C4EUE]Q&+;"1B6Hlb#*Q'/"^ONmnT>$MaIO@tjj2W+`lE;;*@]e\VVIH+9k[.l&9AT4]N2P`%Sc'?&qE^]PF3+S]%l=LY-`M@ed?Fa*hS<[olfi;oCKW`W[a)I!i\R8#agb^4__4oTi`p$gNK'\)PEV,+3e#fc&UoAN#U<KK3U4P'*DE<[5ZRYV\o6>8+%&?E>7dP4U2L!0o.Xq,$s':kq07qR^9^R#Qu.,o\-(e8N<Q`BV:"?fA:MXR;imUShmW#=5Y@Idq47EOBQo!tPI,0@Ka7YRB4hZo;f%C"P+.29JTqrJ%6]1IR@i'3PlY34G(GLt+#n\Zaq3^UUXQh7*mkLS$<I>HdIParHWo.p?.fFb*hb%6`5P@9j>[VCH/&Qd#"r2J?X_%G+E5L:\_H#7L)A"q.)KDmg#qKKuPgl?'55.<>4,@X1G>-aCc1Sh\Y>mY:s`6G<cd]BqlsY'ij-_?u*P'&VsH`GQ(Q_d5?NfI;(/R%HG?pOK;/km]t[a%V6%=.OA.unI*%<uZP*/=V<.'Uo<%rgla8p)A_4/9\V*+]J;YA,&cU+XN61d\7p4YjL@e8toKjH^I>YhH<VR/j%R#<Ed2TN>-LO)-=k2+le+UE%sbCVRER;1s\D;[X?hGUq#oOoR+[JGqLTKrjf-:[LF9N;Q%`LBnPm*03lJj]5;0Fjbbh]@]:RM=7`%jq`L*h`jRAE$QYh7h4a:i?VNAJotPGAn6C%V`:'c4`^^!s2i<#T,GT`6R%eO[)okR07uCF.->nJDFBCDS`tADULu\\KI3e4K5SkY%L1mg.._"R8?DHIJ&eEUc'pJcmBQ/=!?uL'#q!$(JJR;Uk33p:P8soI8;DT*SRE]fO^lIT^qF$mMO-2bd"@f,;0^*AdnIbVVHqVq)%rV_AQ*s4PRp-)N13pOp)I!n&9BZ/E24&D;^X@t:U0?;Jm1[$B8#YMJ#S\=;6k=+TWn/*VElrI&57eiY`c26+RX#r8OcOr:'oIF^$%/07cg&bhMa3VNbL7oi7T<\T#TR\Y/JCreh7;.FQqbr!E9UV^?W3mKGoF;"ZtV>ZD3,`D8ilkVE+Xlqh:kD6G.I)Mgke52IF&*F_t%baH3=rQL7b(9]TqW!^VQoChFYW1"t'2_9dP)*C13Sma^_i:[W>T6ohlTJ_3XJIju`UJ$7iAR@Ji*9U'B;J\6gKA&,m;+0$K8&kt'%iEo;29!GHfdu/TpQ:>AC*'J$)jr''@?gT_6lh;JA37t#oaV?c!E"A,4M2)oa?i#0:TTW;.OK;^]h(9l[f_X<!jB0P&lg?e8XLn^1%S[3B/;+Za-rE-7m-+^[W<6r2?Ir`lZk`GAd7&;Oqb]K2:`?Oi=2cA3NHF9]@Maf#(\You49?3C.XtVa(:!kmhNAY'hbG_Z<DEkIZ%l8H6&m+e/=EX*NscJ2-35.&-<Zd_XK*-qpm.%P1;ifKp^mF5>n76@(ZF"TNI[&E#BQ9NRTnTWHSY5J=U(T<*"qWJopFna<i-q&7a%,-T7l7F<#,TBIH03ZUp.jLQ(hktp1*K]gu0^Up5M"8L\2ATi9#O5;A&fmNI"q9Yhs<Kf\]bS!d"Yd;c\4efsM@020cBU#7_$0bAb%Qr7_8ISGd.UIG:+A(4jmXf,WkNc!nnOk)heO+#LNO_"WH@1r56:)+K,&J.^!6K:Y\kc<e&'FLs68=dtQ3C**mp%1_jNb'[W\6(Et%^tppW6mKg>MJ2q1Xm,)%L66:hW;A+!C@S/P"5MVW=#ED`SHsB_,S=!3&f->7)1Dj_C=2C<!<QjkG-_N3e`J=f\E<Pte!6LTdkKhF%Eg;-0`B+BAE^;=d;&#M%TbIkH2s6uOOsA[ZW'@Ad?)IESZ>.R!CJ:tilD/+%#NcoZ81@h<3L/%,c5]TWp#lIQRY86,INDMtVUO$!%UTWoMKumE>2LVjpM6H;'2c_4O?%d,TXe7*SFDCM7HZ\dR5epVZ<Z8"S]/FHhEj@dQmU-0hmPo'^Zg:G\1_<g[pJ`C^D]81B&Jb9J%"I*\Llf4_\FiY.?5*^M%j>1<0-`\k#TFEYhGnf&*R%?&<6'#5D-\M9^k`JVI$7oWPj2`S#ZnuEgQ^ERG<Me5X/?8$t2m!U]16bKU%q&4\u!>UI)RAquSaM-+gLErVh7!t\9SK,gh40C>G_'U:$B>g^(VT+RTQcL=pfJGCKB^eOBk)(!4i*NqdE9="+XtjMs4hi('cVd^Z%d#H7!:,0!$ZV6h1&`'LUUbf=]IlSY<NQZ!0$V9#,Rqua6Y@?$CU))/$A,)PH/Sb]VVZsVBq`Lk5W]Q2P4E@H[O&r*E3eg_:<Dc`(%IH7D0mtbcc&F2B82Lb5bi;(p(i>g7PL72?VRF)k,FpE/hK4d"hbtLQQ4`D&IlZqSHC4DV_(h.*QNZYHXB\f&\a/Qd;C#P38@n$b:%4+.cUK6#r;B#KWjc0/`/9kHDp_4TL2'0Z#hIhjf378UJTO2A/*.I?Qil$uu319)3qiU7ZE]6OuWnmG3#E3q7(aWc9%MBa)If^'Q"%pUnn-1oDCiTP?.um!fVS?/d,j'lE0F<US%L%e]2&qDd6!`(LjN6OV$@JK%Pna";,dE_SU&aU!Qo...]@C'*NTa,F/9:81#J/._Yh%i&6J1R*-KI9U@V&!kH<'.`">C32i$Ss8A[j\?1$BE?DE3_hot^gk.l,1.cnEpWJSnO_9DUg.>[=UYg55#>=LW+s;6I+d-nG9\2*F%Z,Eg*"2BP%OqQRXIrpkkZI/Lcp4O:4QJj3_-?</&KHm*GSfc#rQsNL>;UMh"1c#S+YhaEL(J&:31SQT5ir0A/oQre>e[M6!`2F?b%1W's]$rip<Ae6h-J^,.l<GZZYi`2KL=/:"-J2I5Sd%Bi)X)!I-@+n+rA6pJ>L\[`72MJZ:\R[bW+YHP-8Cb72p(Mr[G\tb0-]B'?%+1fN4#/@R?L'VJOpJ0=L[\:eo.<QKM%![p%9[spWL%r6#MhESU,)k.@870RK%a-E/.a=`..rhgNc]efI0h/%j>OB\>=3/U'dLC+a%pJF`&lujFHjNHq2$'L_$A^P58m#q<E:!c[qK+1VL#Lc)cX.G>/M-9[U1Dh=/=]+"gh4CGepba)Fj.1kRSC%opW-Z8<0`:ibM[)Of%Msr99%&3/BU[7b;*B0YlWQc=J=`Q>bS6,.&^!GjKG:&/3'G_h-k%oRkPSRt!QCs'TGb%us-;bb4k.#(:TNjZN2jV(MTEmY-gB_T+%IIgT['/RHmcqT?Pn?l#FOYZFo4Q'9+ER**cVMX=j@c'$$Ao]tpX>h]m%_EftldFQ#NY/nZAnf#K2fQ=kdBY211I6m\7mJesU:dZ`%9lTsGmBTHl"J2#^(>Kcaca/o!C,p/F=\@\p-F5:/r^^5<,!A4lf2tX#0C;3V9@?KN=s3Y]&`j,$`nES=,obLVe/q.V=>!NWijmTN%V7U"?,fQ-3;ER92X:'hL&OIYIXq'B9coKd@3gNrH+RVh'\)_"UEZm)-fZRn`WUFrb`q).$MGZ(e*&b(;X\nIDPKc3PD"k/P^E=b>%4=QJj*<u#+LT,Eu"uZ1^G2jc+1sZ`1)0U7k;KDK]79LmmYm&BsY>e7Q2T3NXWaH<m`iQ>>7VY]ZXRtT9o%kUK%!;q$/8A,1F4NNA%G>hFDSMdkP5N?aqM:ghj>rsmTf#`c/:/=iCE8T>R*o7V)hA+jkQS:(7f#MgJL(3B4bcFi/8Kk/[aC@4:/X4;3/.ZcXaQ\a7$^A$$%Mqai=9E5f=@V3-L=,RV9KqK8;MVT=&NY294Li[*F_M:Do@!JB3VCb82e%3V"eK<JC%5d19Ofs)qR*j_=pYrPD1Wq0=iVO$jG:`V`%,0&KR:F%8@la*:Z7F<La/HV(-Af]9/muGgBGPM/s"g:lGnd::c:o_`-8>4J4@D*3)`g2%U/$";NF>iZg&b-*%%Sg0s-!4ZrF&WBr%WusegHPH2bYm\6.)UY9%a`#D`\:WqRAAZ;1bR"Zh%cbH/3ejU7$,(Grl/\"j94##U9g3G`Aal!nn1Ji5Zq:>%8_A"3*.l7H>66VJ%"c-a;$uX+C'b#X#1Eg7R*+,+*h&8;('V(N"2Q8R_N8Q3s;]thrb/Cl#BU0N5lZ,Cce]A5cJ\P7](pF`k4A9$u?O,&2*25E2%.ff&%?!2eX3[Y/G/,M7nGaJ0ZV@I0$85+nc.b:/PU'cZc>aF]!3%;uFYKVVFJ+1**N#3q%cS%K":$to(Xl-(q2!gNam1e#EfhRQI1;m;k%W6Sf'#_0=PAlBQ5'&U^r(n6q!^e*=M^:^sJC(k0?Wq2D96B;>><M;5A)X*>4^OYPtf";X;+NfQboKrDh:$d@@62S,L*NEcPhTOrm%hoC(>OS?I4n%D.RFWbtu;tAegjC?(@`WBJXU6sqK\jcG8r[OPOYhY4A8Ab;8RnM-`_XY>sKit9+H#F\oem%:=qojg*2=GBuhHSf`%C5DJpC!M'0SPRLS*o%XnlPmN,%m$'Or]j\QR*RBOs"9k#*qI![dAP8Z+5.fbk`PMg7d8eV=>8(m9s@IfGES9%f>#AREj<=!c+4fh%]lg2ump5U[_:<lOXDaZ85'59McuJAu;m(&`E;o_(\RWoh;k8u?GM`2fHu%^49n.ti,i:8lCtEUJSBVl4[HF10c)akqMN4@)iarVU%J7>;[0h$SL@DZ?FRp#JbkU";OmajTW2)ZeqF6L7u$,EN],^I!$i(B^u4O9g\U1iPSfaYpF%2G>sA.jC**F,RYKh6G=S/+-J]mZ?n%D`FS-`U/USh'U@'MdKBuUU5q\Z2(hlgFP[l0fIG<5n#?G\OjHA@:!'bCpSHT].DjgIlh(2b1<C\+Pa=)._;2:bFiOTT#n*hQd&N,%PrC)SK(^&=DE&c3*\4ol/#D;:3,eCV*%NVP>perI^T$YEE$/J,>dVRfXs.Q^q]U-Lk2qcNMn#g[6GmW0Taedh8;0$;,<@ef')Y:?%:mUP=6suKCX]Eu!68GVKQ3'5QDQnIV1S@;[:PY6K%aV#2)W+L[63:'0>HOX:]T)4D=hVQ&6:D(q`in$ahXp5_OUKB0BMTOh;5KMY%5c2:jnFAC"euS<5OnKpJ4PP"Bm!cuXoF:!fmAu.g\U&ipoG%$qidUUEKtA]T2\]OTpg-'gkXa6_]aqo*Rk"F`Ln?8kY^n95LJf/V%\CLiH-`0TT&Xip*ECRI,1U]`o07/-<8uSS-O3k.*cdf]]EYK:tkk@_Ho@=R7DSS^Ee[qMIK-&hU;KZ5Kopb?k76UJg7#Na(S/)BV%67,31M>_a-$<eS*2(;=r%:@DC-M?*9G"Ha?%rOt&iqVi[MbHE$ZiXeR5!rcFf3)(@bA_(b7#t(S3SI@i!:@(5)VP@9<7!ifU+COR%A$E6F4fo<m<I<(d:atF3DHMLVPpEo\ZGK\Q$D"YA&R'>2#Vko;"qf]gMD6@j'Gp_)J"M-?N$DA[+*q3,V^\cT(J5J#r@kP#>1GK?%a!52o*6-N,[<l*PmV2lbkF)/2NS6Kp)62bj<EBRX(tdHD*H(/mbG0UC5]3U^?HEit?AE9rP.Ps+6:-k[5_3/Ddm2"^U=\T=GBtVr%NA[B7g$MIFQk\!b0O3:E=3R==SZ:juI/i5a&^dUH(E[<.n"#rscW->:)Doq"bYmYa<@("m-4uNM$treo'd.%'"&c0^C7;9(`bFl%%/P[cf9)\aNXFDIqYqOq(6ef?,eOI':!kG$FIL/!iI'67h75j$2g:^2=r4"c1'5lQ)NO"N/"\O?fL6-O`O#k=(Hc"/DN>m(i'T?]g%eetpVdLs#ffNdd*)%Wo?o5GU"]C9Pu9;83tj%-uTeWl^-f3nt$UeWo_>euKih/oe(d?W+UJ,>qZ4:^hWkU\\5<Q]LK5;i4U0jJc.%Z]aE97u7<]&m)WkL=Bqub@V$E4%j,nb>eP]ELiG--&(*uqta:%R(u:5H8k5.Wa^8GoPNm4or[b&SSfd&[0JU,hP5_mPpV"Q)?/KP%pq:/lfmC)$*ds"W(4:3gmaY!E=,1=?'OLYbPC)QAD40-JY_@(HCk37HoPLc!XE\r50']Z/i)Q_#[GZ=PM'aC>rOuqk?)n"V=1@EC%T$isse-'AG3`j(?\,OkZqbsD/6Co7S[+Q;LYj1388D,]=FL=o!DrPGr)D$(k%siD-AufNFcX"5Q^U8.^50N"[ofJd>@$GtbWhD7[%A/##/R&"P[OL>$X`#2M?+T8.nTK-_-e"Z-TSIO<S+0`eK,5auo%($`62.UYaHW-5nb)H=GDh3@@_8W-L7+2Gfp?^bgPEK&M>4uPZ%+*NVe'"$KsE'T--fi(9q#qRgIMXCAr>dbRa?s"UGX?r^uTWh"MA?d)DX1Al8;1gF39W#/:$jL#8K$,]]]c$B+k<b_jHN0B8$,jPA%BXepL4+R[!#gNsqAb9ZC'UU)R%"SH4^Fj?R;a>@ZSYXb>$"S(k&e)i6UMbc%%P+l$I/kZj"sB-n<DSQgZ8sj_lO8leG'B32N@ZQ\%pmo.o,1@db7Et#_C+;EqbNlfX%BmcN"P6F@<d%OnF&(5CpR7YMXK;XkA2btc['":G_mhER00a%=Bi7@TW+ffRVk1LVXB2FQO3Y(u%;I^a>^dfM%m.p=cm^*m`.r%[i:=[NQQ5P]5_6;CU4.r9b=Y;a_4a6+"\L=%Yh'Ha2^oB\#K\Ccb2k,J2\,sp3Buici-5'k1VCsm*%AXOp8,@LY>k"/TqhY-<]AEk*pC:Zr.7'3ssTYe>3PE^o;BXlR"0=TD/a$W"8-b/dd(0U(>L\s+J0A(-pJ!K-;fIHc?7oj"Fde-TL%(cP0_(2-MbZ*j%_W,Ef%[:)95)mR"<YkF2\&raJZJKFP9b/dZ'Jc6jUX]k`KeY"T)ij(@bC\^DS\OI.3CV=*@fN@\0D$Yn@XFQZk%geWb%HkG7d34DA:_Ff,(?R`%=qAXLYK!gsRCfeW#k'8T?E`n44qn-^sCA2r($=`*(]mEkEAfL9Mm&4Q!;5C$P8BKt`fgi$!UEgBM%gNp@J[OBb\eOB6,&&!e*g?+^D+G+_kPHfub$lJ'PEU1jhp*amN/fPqkO>N73`B^_nRNuO3:/aus1bU0--mZlMT!RL]F4)u/&4u\P%A>FUd"0IZ`&>M;)%>c$sU**o)Ja-DOGFm8\7Bh7:d38=DNCCBR:m?*a0t/b4E-</mL!$/4Befl:qN7'\giL]SrD7.UUlXHZVWF^Y%4Pfn!TXq=n#-$8V/E.dWBbMl%T_O]t,Q2*\FpU]oqoWH=3LBgSZ[SM[S1/u)Cea.S6j1c!ZV,-rnQI&%=sh<0SY_M*0nLUImk8"h%1l<TDkl5Mc8p2c-Xm6e9J*9T/dR$9>MBJ7+=p>B\,V::o4/7pU[gg!5N0ZU)^#KNfA.GZ_G:FF3a#flN*PBL?Skms>2=54O#:i$q%WCu6nb9r]A&t"7Be+%./1&GX:r?;&8/s>KFfqR3/T0=f^UrL6ra?!YB4]I;QoM)??-b,Thd!"4\lqG^PHP?(tYW!dS;q-bB^Qh2c%QCK^ap2R&/-%)-&q1Kuk`+0<c*e5-!m*!"O"Aq64S"MI1'9>K.oUM%jc$>l!L(RON7I`(+Wl/K.)1LJ)U]5bWBGVPlUhiY))N,tF%#LH;k+AX1"js';NP+l*0+H?oOqid4p!\&D+.#/j%133/R`3VDR*Z@Q0cH(HZ3hQ7(W?;TL::Q<s3?XG%^a[^)PAR$MT\G@n&_]"G%'sni*o@Ccf*NW*_Krj+TQQS>,)+'lGn$)4tD%\=8aKWsCcZ1JK4d=dIa(6&C75@[H''!E@LlIHUXCHMF@%k,AlY3NuV]sSJgW0^*%b*hVPdF>tNECo.@e4"R[mAc2a0upcW.DoFg:"l.D'%Jo4XS`r5+a_j6(`lTAiFJuF)+DJsb,^@:Q!+U*1V;a-A7AdS[3.fTQ%Im.%5HHK*jBCUpO@dqC#3H86.rNpt@K7aM/)7.FJW.K,hW1fsIT*P)BqldgN;2P/RYd%55#Xp?C`>uU3#%RUG2dhlNZR<<\a!U(]'P+7%$3`ATKjJhF1<p=,a;!t6V[_4b`u7g+<p3^=XCGG(Q^4As<Zc5JV+"1Lg*q]>p;;^PZF*GNG`9RP`8htC'cL!$C/Z1U2i0PF$t@nC%;fX3eIoIBfAcb&W#HhPR]rP5>goF_i,r.!(MU?a9b$5?]/oB%maNTYuo?sH$2bGkl7A?U<C/;d^h1[,N)D+]9PTZ6&#Qc+=WIme,%<=$o!SkSD_aD%YHVZntsnCY%cK$dKOGGuYT%W29-S(uJai%VR/3Z4?XLSnC[-4t5F.@HtLRD=TEB[jQU@^!CpAnr&q^$BD,U5R5n%BCmtCI-.*cYu2rQS^Ub1+>BOG+lS7P+%2Nrhhj5,BdeFW-rAP0`++;,@Q<L/'<-MHr*H'_LJ(KXeiVj4Ug4'Ye>1!9@2RWH\nXs4%Q^pf!WZ%De6*/\-a^Rr*haO+37V6ha#Jb0<fS22OhbMB`n?"HNMC&TB)>2)J"rE!l[-cXj3dQ>&rpJM@'cS<aPX+:HZ0!8r`aoPg%a?M>*aVmhm`1H8N.r>,8-L]n=,ZZ<m:q1`JbM@hlCdZ\#5!93WP4G.8h."*d,S;sbO_A&XE!gDP@C)C1oT63OD:X="`N5fLpiub\%@!*cG3YN3l->M&)pfDMr]F'ja'"9<MjPHJM%H@m[r2a%^HQU5_;4MmrBSm>D>dEn-+tdRD;<_665RU8A_j'gG5Y1U1D8LNr]99(F%5'3&(%@AZP!1">@0)YLA=.i`[*U]&P^#=k`c(?X:'P1M2e>s-tNb:K8$=uU>Or5$8l4p43W2l0di&n]L=/7]3bMnjGFFMq$T+sJd%jB9;<dAjJJk[RDgIu!sqS3,)L^CbP0GW(7r*mSn!fd>J_jp^]Y]]P4@7^Epf'[2?;2=H3WOTg,Ek(_&H3]8YrG%)mi/TM$N;/E=O%QdbT%.eGJ"2o99iG)7$tZ7eO^NEjLP;q')GgSD\G$@7`<^#cI^dahU-%GK=rRBT0Ib)R%kJ!OP5pDg(rJ]Y#c'Kg3t/?%"EAbT)J%]n4f%1)TSqXQO.@Qg/jt6>6h:hGZ/2R2PX3a7MuhR@iA\OSC*5J3/'LMLd/fKf&U_&M,(E:gq>;VY=V8(A)p^%8T9!,tJ@k=j$r,%\Nmb<D0T4,88\q\Zq4_8%JR]pA#EtAe8&HET*;CYUgB/9"^5M]^G&bUR]!RWCkHn#@W1gAM'WN<&'&6LhhQ7#bua0,EgWd[%bWX=%H'WPfchU^uWOGh;Td3hXJR%Wh)E@f\d!8r\M!a:%Fur-#_*_!E*[@HM9Cg'#h4/+=O"cL6D#kn(RL*VeCWmNLX1IoU7'0\!6WKh&%>t+,p]$$Lj`jiM:ghMsLPVCoJnXsXPl#!/Pk]/E^;,N\8#b2:h.7ObFH6(D*bAgnE:AiosX?tQ";X>'sZ8*VPN!uQ%oBbZNCK?ZN%7T;]Z;G&[`?1SsI)pG.IB9'GT4W]_D'SSt;%/7qUZ?O:m`-f[DPFllV(^qf4S2_Vb:B`)@+:.0T=o>/MOJA+B9cA?n+q&PuY.)UA%MO8BA$qY"[-9<m(Cl-'0Wh,%RU"UrM$T^5oG$uI*_%al2_9M7]2R#6`JU&0B96NnOV1olD]Y!YMPDi4ulBg3R7o^a(EP&Qe?<ZfB%0(.T_4?[uHQ4i0WFm5:l;Ksb_PXG?a8p6+]g0G@:C78q4'aN,EFllQGZ-c_&$e+H_?uL;_EC-)/ruNRGdnrO7n^R.J?Q`iU4KX\6%b>O;<!Z<%c.\<9pJBloD\7>MX+$Mf*_$j2Ra.9X`0^4Z\8+I/3@l#3(Ipugprp/ObZ.XgL@Lc.W")iJd`Y@JY*`d["0S$=I2Cmf%%*e0&[QY'fI3'D)Fbjj%lI1"Zo+<j0AkWs58-#Q].a7N[eS=urA1njFV)CP$GQa:UDSC+t7]S6]eF14-!&p@\qlbcdo>'IW<bM'6)%Q3B2:Bn;Zq"=@-:c`S`aUe>IA\Q`pRQcY2PU/BgW'?tMBhPo>Q?(0d*oKS,i?fqf52+d0`Q0LO"P,gM+n,4Fteu&hMBpBm(2p'D9%m@dJ!F]c#3/aEZJW#b3&`2Q_sQ."En9SU"4mWXqeV1qAnBA2(j0o_AQn&5`(q'3$\IVArf_CUhqigJ?.Bcp.ch1D;:0s2<7k=&FI%*jo]14u?IqPs2#(^t+S4dY?$A3Jr<cLDXE>PTKE:J"/RT/0fA*2%ufpS]?;lArkuX+u&p!5/f1?KUD0rM(@ut6t\B*T?PkK9FjSY%:n?bc+"_)Wq%,.l=j_/6b46hC6W.Zg"Y1Q)[&6qF_UidAgnc'S`7L-@R6f7dW`2&4m&k\<g;&0uJ:gb*&0%TEXX)6d0\Rqp"ZFs"%JFSi[:Y\Md]$6Q]S7L0$V3H^uAtG`nkj`d\,mu<g4ltO4Ppaa1k&\VD7'H7]A;<X?H:$@eA/5m"e10,b-VG"\as<KN^*&W018j?^%Bb>oAg0Rou33LNOR#$B,>]5r\Pj]_Q*h2qOOAmXl*S4P/fU)!QA*#o?4GPG4V!`&I;l1R-Qa5lLZj0I>*uUNLijT]qbLJ^]OoGJ%%qdkL940H/oc?EfV:s@^@H&0teH0OCdG^Acm]6/`Op8Eamc`6$G]kR`d\1GZ`_'5a!Rp9=u??F_EIoJ/:(.JP/5<2u^c)gTO\s[V(%M])@Vl4uee>nkj;NIKShF[hJ\cC;Nl8^AX@7^MI$BK$CF;/Za$\(Sg,$H7ND04O?q;]n)gG25ng`KOkMr8R>fP0D/U[*8->`Oj=q%,+Y'b'Hqp1HpF\pb&k@tR;/rqn)Ej_E$E0*&SusI<=33Y"8eq-+4V6mAB]-WBj)S`Nha_%p@hZ4p@t;Om_8<0J,%:WrqQBJrV!i)%J`,XVpI5,Za<3j)cO!T?iQf">*X0h#G8S]m#+]4VGhj8VH@ET[lf6kDs0\1o#=Io2Ag6oWbF@(ra-$,Y(/jZR('*ajTIN1U%\466%6)cahEqFQHB,8qP$7>5sFpKBqUSOEB@ZjmGW\eh_BbRKRF4_G##^hC[jiHkOCKa1\q"@--GS<^?Qu<OB4t135a(.HeH`/IGIW'H\%m384dViebcTd]Kqi[4a_&N#tqNsppEOirDa2oqHDldjG0oCKZb%"_b1+=rn3#95Kj"LLDO1UQ#+%:Q`uHd0%W^@^G!q5JkT>Jk,V%8O8-iZ>U[[(mb.8!oN9s<0Y"a!RRHgGp`X.82O.?JNVkMN@H,EPuHObNJKtBAshgu:1F?=FK59$IZ52^.NKOt-&7?p<g<"Z.)D^=%B-X3-ZSi<G%_Q<=^jVY02[YAoMS'=-lAH:b*_]<c(GAgY<ks3HjWDaCoMqAcq0%c>,*=&YYk\P?UEj=,*;/AYnc913!+Qd5@Y,%I%P?9/qf)d9jr"akZ&0L6?\dh'7&TlDTSn[OTa9=h(>s*n>IkV%kVHtsGG*!U"D-;9(bgF(]MOUFKTM^p+@U8"JJ(t3&^9!cYHr/74%9J]ERUAK08:uFf*SZ&amK\-fgq!CmJkeuck%C$JWnnhL,i@DtYT7To!na*:P7fZR>E$1F?i<KbEGq&Jc_jqCOG$_KMEVptAS2Pf%%F*LagRe7P!NHG]Q6"N69mO0\7W.q3A]%)Tm!(3*AQ3u[1c5oo1!DN/_UOXsV.X2cZ!=!8eQ+T_q3%p]J+,_n\[jX<>3/Y;.V3LLE%bk_C_8"t\OIDs?@R%VM/_t],@chq3SU^EROOomT&jM0s+=n/!X#8Ria?i_g\l6\iBL*p<EHjeA%n0nNQ)R)Z#e5ZNH?cK6L\@S,n%jZ!RV7`RN=CIKGSAmNe1mpAdO3*6n@1D/AOo&=+,4P26id,A5_p["n@#T$=u;13`V&GFN'%FJMZr3Z?1;pJ2Y;<[nAPO$t`TM9J#%pZXNSbjnnhdu\\*)>XGG*jD+SHN-Xg'MjHch89ZglFb8C`:S&VYqP`K<D%(5KC`6d$E:cq_s0N]O/O&`Mh%2i!+$Eh?('(SKj,;X%"tj<)Q@l=qKT.hY)ZqK<VD`@NK)saIo?lLH&foMM4]"g<'Up0uLH7V>Rgi1W+n)RLY!q^ak=oR&lB0%hEiN"2*aTSU3Cda(3>2D]%HIdIGcoh[j-cCVb(kPLci4k$!n0nXs0'3pk!<OsRTu4BM,aW/[)_(>'1Vp`fN'9,[U8*EV2-"c0MQI,V2P^I^f3$nIb_Ls%e),YI%09?>OBEj8QTm.HnL]O/E!3632d/pW?SM-$1O\`,VOIhP03Sp,bE0lEB%nD-Xeq+6>nHE%sjc['?8I(*EI+"JI#5"%bXRFb_ONui,%'Ka`(/f\6%*^BI@eG86o@#lo[!fu(rpjM`MQhBt!6FZHPR4m@\>ZCG%J4p'96jXIOR3`@/[\bB*UAiVpk*h`(X=<%L/ua*b[\RSr%3OU5&@q8g@Br9&MIS%p:$&Nk4F"38[h;skgB7CO%['o@=llB64)ZW+djY;>]kiW/pNq$sffD3hKQ5-S^\$c!]\adX/DOY-X`4Ero%[I3To*2Shtr?GtHel#Bre1P-X4dloZ>>HG.ElcO&V"K)UFRo!id,eBHk6BlZ_J5o5\rh:S:ZS;0:BXtja](Afk9]ODk.h(,]uVXT%cQQV83odp.G"GO\h7<pZ(Fd+G&.$G(Z/-cWGC@/@!</XXa+WHYT,SJ-;cH(lFe*:k7/,uo"a$01Mtcf@F\%Y[Fq(YVoh._ob^L"s%TQQ;+_hdir26)9r$tls2P!d!:-cT&=Fh*[#=8We4)&;`g&ffM^I*?PrJTZ+<XqGinCBYpBEn"rkJh)[>ZBIBO0WX0$AU?0MS-B]d%g62OkD3fPK^$.,A.!PFI0qh;`/PUWB4&eZ(p]X(>3fWJ1OlH`Jfr8qF+UTsQFdIj8Q8M@4MPbSi@\nlpmW+.G!&W^?J4;tL7-bb%%()?);Ps9!!]h6XQE+CS@9Ttt_!,E9S%Z=G!B.A_(24XPfgFfs$0j0gNrb;@.0P"dDc't^sOf>>_\TUud1;S-4eZ2tLS#Tf"Q\i.M%W]CbHo<*i"/A'uO"d#9_gEi4"HBkJ/PD.r.VI#ZhPF&.AWe<R%fX([QWGdkTFkh\fQSio)!1`L8Fejb`];CV_5L`/k3^+EbfVYVm%>o%28eC9UZb68KH3iGhF"2?[8n6mJB4>_3Al;G2!9mm(9;kK./F^tMG3L6CGR=UNF73/AMF][(.;**GoIdi'SHUYUh(0]iXa0^[p%;(k;4"A;[+WdN)b;[6geOQ7W\I0*&?hk8?G-a_Co)T>"VJ<m&BW:dGQFc:g5!(Tbs-MaW"9qB3;I4S)U;M1k_No&`#Q_n(FX-2k:%d-3;#FfZR%LMVio/XcZ<;$R*a_,SoC+;FJXP+mtiB9p[J76T))2as9111*[OY>14KML)\*CfAh6Jih0(e&r:GgXO\<mWZ@rdt8TJ%.dFuHSPrCX^f8f2&rM!4JQ_='KbAddp%3RO3A^@#RRHX/:T2F[bI!mNR,bD6X_TEXAZ)8_HuEm392WIU&p#rt;6N^AaRaYD^f&Z@%aGTg^VP=&umgWF5?4&pR%)q/\6/_HK.%\dB'X*8?;#KQag@Hsd2f4-LGeT8E\VUde!M?(QS3]LV9%tNHIQMj>4u!Jbc,HBc2eb]"%g&BVN(X6%.P\HRQ7]/f+:'H['JSsNkWr$<lg+HFR]#J<nVF\T-8GNEUUg[g\af,neQs@0n2">o!1e+o;C.KaFq&O";W@so=T%P7.%1J"dI4[8!FVI]F:QY0D^XDAQ9=js?'=To,9#\VuS)'mh3\m<bF"0so8ReRg[EJ=ek1*B,X5oT4]"K+48LM_l(!UZLb6q"dWSg`?`%qD`[Y[BFBS]1]5RgRqL(P#"BBjF3L('EF]LQh+5X*,r;l%'le]!h3=+d5e_Nn[ftr$KWbAkVJ:lo:,g7TFsY=In`7\8_aG[atnk@%]DOgN1qaibr1;4]5=O_FT*R-^Dukp4-uK_1b&R#":$ViX2u#O@2MFRWoQ&Ut)?[YQ>jMWYr2BV5cC#]:+7.<E(;EPjPVL@eFu?R;%B@aP+oO#*89;Y1]'B7Tnm]".1.uD;?#H>`Hn<U(]\=g"W#2\Ig)9j"Y/A7-S`F[4*,ucW7,@EM&\2cKVKk0MEmK*i'Rcf:naeG'K%g_#d<nN\?cS7!b,E!o5Aa_s0&>=G;c<NdNR+Llk$&A"8h]gE36HX.2;![aRA^5o/WB.+Z^"X0rZEXr3f!RrTW.*IbR?oU1s=sa$X%3<q1M28^Unq<Li!.ijm%e3DOd2!o(D$cppRE.qa3keGKdFHrEZ5gV&j!$9.?Q:+mo-$^K#=R.nYRbA=Id&Yoa5m0gd\`d:]8_ib4%9Z?J?W!ALAA#Slej[<m?&)[]$3k$(#6&6l@Ajf0ma!fq2a8UqSDCU?/q,,$m%Va;N$NRt'Yn.P@50Vo^39J^[&A=H`pH?/*0^fm0%1o)9u&\T3K$uoO)_j\bpaG!B',`=@k:-^s4$J9Jq&\SM=!b5KLbTM"e?`QL&&8&O]@0OW::j9Hto"d*+^6KQ8o%4OlUot`umIp@$%#7d`14"DZ/)0TWA9p;L1bHm*qR:PBK"C5>`R(KM"DgmO)rDKm7r$Fi5H/76KHcXG-nsE6%@F#B4iW.PHj[a!S$pM6neKei0*o0i/%&YDOp&QOTE.t:XWmNu=`.o>OEL>\l\3rgn&0b4l_kADWJbCqtX0Z]hsVP"]#!+A@&"Ae4m-cR[KQPDm&L0/ck\KEG^KTcK<m4)E#%l1cg_&MMO(]Q#W.q4#B@/8/$Cb0.$N^=[7/4^"2CQR%i$KlY*fW[DB7SFePI%J'b-q&oGD^sF\=AUm"/%LJJF>nErN1OU:k2d\jg%p`q*sK3<Pd^!&g;/Fe?AJND@C#O4:Sa&i/7.2M]#<lL"HrGgOeK.YtZrltud]5JXqN3<mEWZT8&.B3hHg'@]&!lI;dQtj[%7<nSr%U4+uJ1^pugbg^3L_#W';hd)CAUC]@MU*cdhCp-DPO,8J)Tgtu+jrCNRLub'H3"At+?B@DKq7.lS*73h.TGjd0LAdDG6/.O"fgC53%@4U+)>E1P"&,'4fj:[g<[iE]k=bDGY'kcCBK\f_(HX1]L@UPYeq^D\lErtu4'%Z\ZU-SUP8euFn9ORZJ".DE>$&$bODEHYmn`\6j%&[+.L,OkeM/+Q2JgD)cD?V<gs=#Hu0nlq,*>.i*u3?0A0rK]0)df;=XjgX$<n69d,3%;m&/SncZiO8rC!4qF(*3<tigm6tsU?^mL%lpGORoNO*)9,/H.PO)$Zh#*J/Q)ch#B(&>sT74u?'h,k4/ULQ\s7BOhrbK9-gm7JWGqG"l:<Po^[-hOST0>n13(pUdT-[erX$W5%%QCX9+Rn%KooB!AJ2]NG1k;?cNRpJa0-:mM_YGM,C3\=i,VUI:)9h3b1'i)p_X.5X6!2J8Eng7%j"X9k'q:tC0V])LT9o_jt&_jl;%QFbX)#l[H%H7$9Uf5KWNIRn5n9p+JC=&rU*;"B\Qe%,GF@W$F99IS-3R&WTSs'J(8Otdo)!F;_KoZGLA;VtW-HUkMfm]s$hm2_q[%BB\]>5C^D"=F>]#:WuH8HdMZNVaRF2N=A^9)[V]3Kl&e9egEQn5V3aDgnFZK3l,A5PC&7&S7VMK2&.`E=+0s&3@n[+,M<&O/S>7G%5$^V&C]I\d[%+7QdrP0H??cZ?Q:7A<WcGVnmcsH;JBuRtBs;#q(RR7%^T8EIT'4(S?[F9JBDM0#0tf"udfoA2Q\-6;GJJ=c:FH^C%"o,m$[uCK&5'e5/"[Ql5MW01c==BrI_k\:4]`[eB`-D:+d9i&NRHIjRG+@32&t,dn=`4B`R4M:$hKK%pl;(f5obS<*'=XN\(QVl-%qL#t9o]HItp+ejQD*bKQehulqH'aR:)+#Nb?]$$:m*u?Zq%g,I!0VTf]3`7M=+<P0Y[!81jh1%2N<g#-55I6_B6tfN`ARVaKgDTL%:76*]n<>F(0hZ[q!u#IngKjXg@/V3%>*Kb1JD]qC`QM"aHM&Ym]_W"Vceu77$)XjeSBA4OqLpdBjQ3(*^6#R"/f^lCCP8U#;[t2N%c>+7EHhDNJNrurgoa<e9O0NUQ9`';U=C"Ii,P1RU.#d'fH!#5rcjF*@jE4eP_HjriPK#6J!@";[\gCR^V'Q++,?hlp^ln*]$6+45%'4uo>h>aa1Ba(-U[c(fNCGl:u4QTl,q1P%KI"uA=0BD\de!a<V!)-?s<cC=SL3d%>!CY^%:#+sHOcO)FIUeEo!d_U.+amI)n3UHd%UMOO]$qmdUBEmWZ+\O3,i+q8J)14dJGG!G`2onp/4!6`4*i/o`ja")kN(AX]W2UR>Jbf@H((R-0%oCm8!Y1aMA?$]+apurO3qp)g%+<$nfETU<j$3q3sICT@tciU]rFVdt`f2OuGW&>Rp&f4LpmCY/VV4b8<XfaD0Mm#-@#C6CkOs-$0")?a/-qoqo:c4eNg__XgVMrL3%iA4A/hYDcJG,G'Ac2BRc1OqFHLG62X>lutE5#]61H6D/Skr\CT[<'oc5`uPWme!tn)?mF'\#=UCi4d<]]\sOUc^a6'S4H\8V(u$f%0Coq>G#(EVH<\c_"JES>e#F:']:#5EU/upj$0%[+gF)h`+5KV.3]k?s)ma)=?<l*D_O:.+nh=$H,U_M1LJim(WUr4[)bU/r%u0Vg%7B*X#AF3>LNsX>h-F2e=q-<*B&O"Ga?f39H_qR<kLnTp\RqY%[MQP1g`,E5$8E((*TfL6LXQ=UmbTL3CFB+YnL^+UQ3fD`n!9Xom%2+OKY:6Tf)RN/8J:uR<]TE%4Y*Xh`(YsZ?sn8ZE_)^pS0"T^4'Uq\WOMRaN(.CG&qKWh&M,hsaj&m8[50b8M6,+-/n_E8[+AZPbC%'72-YDdG-Y=hfHm;?i>Dmf%td:])h1c<^dmIWQPZ09+shMXM)6TNCI@0bM>g[&tZ.'-Zg@(PCrg:db0Y&a;siOViiRW&*l)+/K8d%q--LU+:ri2'#7[+XYKYU)_t`g"?>F>#[.4HlqA2e=kB/^52:j62WL$hLDi;;]Z$O/ASmR1#lk!<FdNshL97b%,<7Y/[!d379B$G,%U'1,d4EnZ&J"Z/crTUSPIq-=udn'X.NWlP*\/hmGR:Ckd"I392>`b#J<0I[D$%/sIQM6MaSsV8F!6@D]>n@ZY=>Z3^!jSne7ie6J%WoCNrc3U4H<*$'F:oZ"TMc*9R=5];1r>*qg+K?hulokUTG[X>Nphg.YSHoHF8)Ar^;3US&Qlj`"K;rIi4Q^a7A"07L;[o#.O:][d%''q`?AmOL#1#sp:2^K'$r=TBR]Ihe@1-&tNOBUSeq,Nl94?<M)e>8QjNE=m[dgd+-G^4*2.<(M$7:XKl&DLniQkbG'U`&rHL*q-X%"DMk)J0=tE^K1pPXYSNJPRZ90oAn/Kh#MVj\\0CuYceGG9%%d)a\94<Mk\ILAjB&\Cg$EsR"9<lm4'`)!f,'tQcFd1C14sm"Ndhj%HEK@r&<TkK')eF5jn;umQYbrBj7h0Jq67H-]-&HY,uX\[SiZUN$qU,r3Wk0l+d)5R/ZBIt1>V,>]d+V4AhZsaa!3ah?mCEWK`alp%FofYFjUb7P6hL0a@O2-5)#Rp#4NtMojqH?jpS0/RUE7Rs<(CRh<7WX%i`KMO2>'7RZX:La3E4G$Z\kSL:L7I-1j0n6?Z;CM'0c<!%M%=n25#k#8m8IpVUC3V*?s\A0MQ$f,_`+G!O[^Of=6>Gq5Og6PbF;uIEI4YN#2dpoR3ThZgRp&$M'?>+MQ%(`f'W2N;mA0cisPB"%2q(@[jNpJS`T!B5i;,^s&?<sjO.TYhP?S0kS.dk]ebJ5\+d=AYo\?)d'';koOaA$6?la(Aat:4OK3D5;pl/E+/BiWuOLYuW-.pFq%!.kH9oMd$%5_FKfL3j4I"g\p2_U,4E?P]V\Js7Dm,t=]MX2YM/eK+4:#5%gUa:tR4q@5rlP&ti,ri)ElJ,g9U,umBLR1Y23k@t(H%2`<]?0OYEaXrIGm`5(=9rdb5X@YK2T/-t,"1HB<1&GE3S.70iV@?!R+H&rjWOu+\G`5;s"8Xi7PnXCNUfX!5akU)#4`G]mKnYn8s%@Ji?$QD11RIS7dF!Lm>V8=[g8@nn?8`=bE:_)#q<2H6,Z)mcJ1X/mn0\#7A8lGfBcVtj4*C!3Npg+-'$4;RT[`'ArYjP;54(s.!D%(-#ecKqngY,*Yk*F(!7Q$R-$Y+)B.G])rXRgRK#1dl+Ct=]-XSOcBjL-fjEDB[j"5AT;7#;q%%+<kh7Wo6LFs290#E'5:$1c)VJi%o%Ca1et+];IK<GJ-0=s"g@?UkAiKj9BPZg,q[2%`+rYob=HuKkf`k<0;,0u_ntZ7ojN_G6(M>pqB>T&4E+YmuJJjo1WA"7RnG;tT%S&Q0)0M[2!1bE;@!FRbIS-X96]0=N"&</uHf!YnTNB%g!-!]Kf<P3u/^u0,8HU(2:MM)1B*s0<!a>IV4TgBpc3i@pd,7&.Vc<;I@%<E8ZOO`m\u\8F>e)=HV6oO&UI=>C$j2C0OX*]X1]0iF?5a#k#7iEQTuM&EKCKcr)RLORE-</U8h:gDL103.[M>>e^MQ/`Jr"GPM/%.dX<qhjMif\=6QC2,d&\L(G<pg^r4u#Z*=!\L@MZlCE5%RR]caZSEo7G/Wo;)<G9(]DE_$2l>K:'D?34T3kn$$NRSP0&RAQ5BJ5N%?Kt-!9(4I5d^kTm=?m.8$IfT4H0e?pnGV\(3F>*hW&,pBRc.s,/*i&Qg^J\QHpEQ&@R@(ToA5k^P^JunJLRIHR^;hMN1]+pI*j+C%WGh5J>"YCp_CT8k)EL;ZM'>jFDfER'X14ZnP#Mc#',cRnH@IILC!G)&0jtcYl+O5[<&+Gt!J(tu6ETEMOOT(kOAM(,!>=uQ$8Sdk%"rYLmCCB-W5<nn]*oDQqSc*d\8f!ZUGe](j'gg'i-g9uY-C6<!9/`?oP)fqP$b;j3L6nkXZp\F;n%Z+:bC77,")9-ZH[qs''kLK%%"cEbqaKkj:=:ip+'MjM&XJY$5Q<7bO?m,Q$ILI@UcKrAl(;k1qinO*/Um)qG-,Kir/NYs%&b3H?8h)F85N.SF&fo7o8MU:9#g.C;%9P!C'jn`XKRR=>r+J2+.,PS+Vq!Js5r9g3WC&@5hmiLBdjr`?mr:\J:qYJ,0rV5ufIeEL8q`k#JduT"Vq1nuprqQ*FVn`6#h`lSa%_k6u,QbWLg[ibYArh&Y.qYA1Hrp;@'s7kDWs8=VN"6=>4Q[f&6Dh%ctO8fI2&D?1~>%AI9_PrivateDataEnd