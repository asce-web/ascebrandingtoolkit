%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: GEO_chapter_vertical.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Katie Linnell
%%CreationDate: 1/10/12
%%BoundingBox: 0 0 135 290
%%HiResBoundingBox: 0 0 134.0479 289.8062
%%CropBox: 0 0 134.0479 289.8062
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 60 128 8%%BeginData: 9096 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD07FFA8A8FD047DFD045227272027272720272727202727272027%272720272727202727FD0452FD047DA8A8FD0AFF7D522727F827F827F827%F827F827F827F827F852525227525252275252522752525227522727F827%F827F827F827F827F827F827275252FD04FFA8272727F85252FD047DA8A8%A8FD1DFFA8A8A8FD047D5252F82727277DFFFFFF7DF877A8FD32FF7DF852%FFFFFF52277DFD34FF2727FFFFFF27F8FD35FF2727A8FFA82752FD15FFAF%84FD1EFF7D27A8FF7D2752FD13FF2E0C050C050C59FD07FF840C0C35FD10%FF7D2752FF7D277DFD11FFAF0C0C060C060C060C59FD06FFA8060C0CFD10%FFA82752FF522784FD11FF0C0C050C0C35060C050CA8FD05FF7D0C050CFD%10FFA82727FF52F8A8FD10FF840C050C59FFFFA90C0C2EFD06FF84050C0C%FD11FFF827FF2727FD11FF59050C06FD04FF84A8FD07FF7D0C050CFD11FF%52F8FF2720FD11FF590C0659FFFF0C130C0D0C13FF0D0C135984060C0CFD%11FF5227A8F827FD11FF59050C2EFFFF0C050C050C0CFF050C05597E0C05%0DFD11FF52F8A82752FD11FF350C060CFFFF0C0D060C060DFF0D0C0D5984%060C0CFD11FF5227A8F852FD11FF84050C0559FFFFA80C050C59FD05FF7D%0C050CFD11FF7DF8A82752FD12FF13060C0613350C060C0CFD06FFA8060C%0CFD11FF7D27A8F852FD12FFA80C050C050C050C0584FD06FF7D0C050CFD%11FF7DF8A82752FD13FFA8590C0C050C0CA8FD07FFA80C0D35FD11FF7D27%A8F852FD37FF7DF8A82727FD37FF5227A8F827FD37FF52F8A82727FD37FF%5227A82727A8FD36FF27F8FF5227A8FD1EFFAFFD17FF2727FF52277DFFFF%FFA8AFA8FD09FFA8AFA8AFA8FD06FFAF7D7E598459847DAFFD06FFA8A87E%8484FD07FFA82752FF7DF87D8484598459847DAFFD04FF84845984598459%84598484A9A8A8598459845984598459FD0484A88484598459847D845984%84A9AFA8F87DFF7D27537E597E597E597E597E5984597E597E597E597E59%7E597E597E597E597E597E597E597E597E597E597E597E597E597E597E59%7E597E592752FFFF207D7D8459847D8459847D8459847D8459847D845984%7D8459847D8459847D8459847D8459847D8459847D8459847D8459847D84%59847D7D20A8FFFF272784597E5984597E5984597E5984597E5984597E59%84597E5984597E5984597E5984597E5984597E5984597E5984597E598459%7E59845227A8FFFF52275984598459845984598459845984598459845984%59845984598459847D845984598459847D84598459845984598459845984%5984595227FFFFFF7DF87D597E597E59842EA827597D7E597E597E597E59%7E597E59A87D5259A87D7E597E597D277D27525984597E597E597E597E59%845984F852FFFFFFA82752847D847E527D527DA8277D52847D8459847D84%59847D7DA827A85220FFA87D2027A9527D52A852FFA87D8459847D84597D%7D5252277DFD04FF2752598459FF52A97D277D52A82727847D7E59845984%7D2752A82752F85227FF7D2752FFF82727A927A87D27A87D522752FD047D%27F8FD05FF7D277D2752522727FFA8527D27277DF87DFF7D5259277D2727%A8A8527D4C7DA8522727277D7752A82752FF52A852A87D7D27A8277D2752%FD05FF7D277D277D52275227FF52FF527D27277D52F827275227A8525227%27FF27F8777D527DFF52275277F827A827522727522777A852522752FD06%FF275252A8277D20277D527D522752275252527D527D2727A8522727A87D%2720277D7D275227A82027277D207D52277D52A852527E27A8FD06FF52F8%7D7D527D27F87D5227F827A8A8527D27277D52F827277D2752F8A8F8A852%7D7D2E597752527D527D27277D527D27A8F8A8274CFD07FF7D2727527DA8%275227A87D527D775227F8FD0627A852A8A87DA852597D2F0C060C525252%2727FF27A852A84C527D27522752FD08FF20272727217D527D7D272727F8%2727A8FF7DF852A8FFA82727A8050C050C050C050C050C5227F8277D27A8%527D27A8A82727F8A8FD08FF7D277D590C060C052F7D272027A852202727%27525227A87D2E060C060C060C060C060C060C27277D2727A8282E060C06%2E2752FD09FFA827270C050C050C050C05277DFFA87D5252527D7DA82E0C%050C050C050C050C050C050C050C05A8272E050C050C050C27277DFD0AFF%5227270C050C060C050C0659FD0427F827527D0C0C060C050C060C050C06%0C050C060C050C0C0C050C060C050C052727FD0BFFA8F827050C050C050C%050C050C050C0506050C050C050C050C050C050C050C050C050C050C050C%050C050C050C0528F87DFD0CFF52272E060C060C060C060C060C060C060C%060C060C060C060C060C060C060C060C060C060C060C060C060C060C2727%FD0DFF7D27270C050C050C050C050C050C050C050C050C050C050C050C05%0C050C050C050C050C050C050C050C050C27277DFD0EFF5227270C050C06%0C050C060C050C060C050C060C050C060C050C060C050C060C050C060C05%0C060C050C052727FD0FFFA8F827050C050C050C050C050C050C050C050C%050C050C050C050C050C050C050C050C050C050C050C0527F87DFD10FF7D%272E060C060C060C060C060C060C060C060C060C060C060C060C060C060C%060C060C060C060C062E2752FD11FFA827F806050C050C050C050C050C05%0C050C050C050C050C050C050C050C050C050C050C050C050C202784FD12%FF7D27270C050C060C050C060C050C060C050C060C050C060C050C060C05%0C060C050C060C050C272752FD14FF2727270C050C050C050C050C050C05%0C050C050C050C050C050C050C050C050C050C050C052727A8FD15FF2727%050C060C060C060C060C060C060C060C060C060C060C060C060C060C060C%060C0527277DFD16FF7DF827050C050C050C050C050C350C050C0C35060C%0C592E59350C050C050C050C0527F852FD18FF52272E050C060C050C060C%7DFF7E0C2EFFA83584FFFF84FF842F0C050C060C052E2727A8FD18FFA827%F827050C050C050C06FFFFFF0659FF590CFF840C2FFF2F0C050C050C0506%F8277DFD1AFF7D27200C060C060C0C84FFA8FF590684FF84FF840659FFA8%2F0C060C060C27277DFD1CFF7D27200C050C050CA8FF7DFFA8A884FF59A8%FFAF59FF7D35050C050C272752FD1EFF5227270C060C0C590C0C0C592F84%2F0C0C357D5959590C0C060C272727FD20FF2727270C050C050C050C050C%050C050C050C050C050C050C272720FD22FF2727270C060C060C060C060C%060C060C060C060C060C272727FD23FFA82727270C050C050C050C050C05%0C050C050C050C272727A8FD24FFA82727270C050C060C050C060C050C06%0C050C2727F8A8FD26FFA82027270C050C050C050C050C050C050C2727F8%7DFD29FF2727270C060C060C060C060C060C272727A8FD2BFF2727212E05%0C050C050C052E272727A8FD2DFF5227F852050C050C052EF82752FD30FF%7D27F827F827F827F8277DFD33FF7D4C272027527DFDFCFFFD9FFF7DA8A8%FFA8A87DA8FFFF7DA8A8FD2EFF27272027FF52202727FFFD0427A8FD2CFF%7D277D52F8A85252FFFF842752A8F87DFD2CFF7DF8A8FFFFFF52277D7DA8%27A8A8277DFD2CFF52277D27F8A8272727527D277DA8F87D527DA8FD29FF%7D20A87D27A85252FFFFA827A8A8277D5252FD2AFF8427277DF8A8274C7D%7D7D272752F87DFD2DFF7D525252A87D525252A87D52527DFDE0FFA8FD30%FF7D275252F87DFF27527DF827F87DF827F82752275227F827F852F87DFF%272727F827F852F827F852FD14FFA8207D522727FF277D52277D2752A84C%27A8A8277DA85227A87D277DFF2052A87D20A8A82752A8A8FD14FF842752%52F8277D277D52F87D7DA8FF52F8FF7D277DFF2727FFA8F87DFF2727FF7D%27FFFFF8527DA8FD14FFA8277D52522752F87DA852F827A8FF5227FFA8F8%7DFF52F8FFA8277DFF2752FF7D27FFFF27272752FD14FF7D275252277DF8%27527D7D7DF852FF52F8FF7D2752FF2727FFA8F87DA82727FF5227FFFFF8%7DFD16FFA8277D5252A827207D2727522752FF5227FFA8207DFF5220FFA8%272752277DFF7D27FFFF2752A8A8FD14FF7D277D5227FF2727527DF82727%A8FF52F8FF842752FF5227FFFF5227F84CA8FF5227FFFFF827F827FDFCFF%FD44FF7D0C050C050C050C050C050C050C050C050C050C050C050C050C05%0C050C050C050C050C050C050CFD14FFA8060C060C060C060C060C060C06%0C060C060C060C060C060C060C060C060C060C060C060C060C06FD14FF7D%0C050C050C050C050C050C050C050C050C050C050C050C050C050C050C05%0C050C050C050C050CFDFCFFFD3CFF5227FD11FFA85227FD0CFFF827A87D%F8FD15FF7D27FD10FF5252FFA8FD0CFF27207D5227FD15FF5227FFFFA852%F852A87D27277DA827277D7DF8274C27FF7D27527D77F82752FFFFFFF827%277DF8FF7D2727A85227275227277D7E27527DFD05FF7DF8FFFF7DF8FF27%7D277D52277D525227FF27527DF8FF2752522752275227FFFFFF27522727%27FF525227527DF87D27FFF87D27525252FD05FF5227FFFF5227FF275227%52FFFFA82727F8FFF87D5227FF275253F87DF853F8FFFFFFF87D2727F8FF%7D27F87D52275227FF275227F827F8FD05FF7D20A87D7D20FF277D277D52%2752275227FF27527D20FF277D525252275227FFFFFF27527D2027FF2752%27527D207D27FF207D277D7D7DFD05FF5227F827A852F852A87E27277DA8%2752F8FF52275227FFA827277D7DF877F8FFFFFFF87DA827F8FF5227277D%52275227FF27527D27277DFDFCFFFD43FF5227277D5227FD0DFFA8FD27FF%7D277D52277D27FD0CFF5252FD27FF77F8FFA87E522727277D7DF8277D7D%2727277DF827A8522752A8272752FD1FFF5227FFFFFF7DF8FF277D277D52%275227FF275227527DF8FF277DF852A8FD1FFF7DF8FF7D7D5227FF27527D%2727F853F8FFF853F87D5227F827522752FD20FF7D277D52277D20FF277D%277D52275227A8277D27527D20FF527E207DFD21FF522727A85227FF2752%7D2752F877F85227A85227A852F852A82752FD2EFF5227FD3AFF7D27FD1C%FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 3165 C)
%%CMYKCustomColor: 1 0 0.2800 0.6500 (PANTONE 3165 C)
%%RGBCustomColor: 
%%DocumentFontSpecs: <FONTSPEC CHECKSUM="3783189155" NAME="UniversLTStd-BoldCn" FOUNDRY="Adobe Systems" VERSION="1.029" KIND="OpenType - PS" FAMILY="Univers LT Std" KERNINGCHECKSUM="0" OUTLINEFILESIZE="0"/>%%EndComments
                                                                                                                                                                                                
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2012-01-10T15:58:31-05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-01-10T15:58:31-05:00</xmp:ModifyDate>
         <xmp:CreateDate>2012-01-10T15:58:31-05:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>120</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAB4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6X+d35seafKus6F5b8pW&#xA;sF3res1JSZGkYBnEUKxqHRau/KpbbbFIDGfqf/OXeqD47q00lH6pWxFN/wCZFuHHTscV2bH5S/8A&#xA;OR16tb/z8ttzpyW3uroEDqf7uKEVHsfpxWw1/wBC4fmPdn/cl+Yt03M1kNbqf5H450qcVtev/OKd&#xA;7IS1355vJ5ezi3ZdvD4rh/14rbQ/5w/0Fvim8yXkkrEl39GMVJNa7sx/HFbb/wChPfLf/Uw3n/Iq&#xA;L+uK27/oT3y3/wBTDef8iov64rbv+hPfLf8A1MN5/wAiov64rbX/AEKHpMTB7PzPeQSdC/ooTQ9v&#xA;hdMVts/84q6pE3+hefLy3Vh8Y+rOSSPdblMVtYP+cevzXtKfo/8AMe7Q04mkt5D8I6D4JmxW22/L&#xA;L/nJqxIay87wXQH7MtxMzVOx2mgdafTiuylcX3/OW2hW0lzcJa6tbW6GSVqWTEIoBPwxmCRth2BO&#xA;K7PSPyS/Mi68++Tf0nfpDFqlrcSWt7HAGWOqgOjKrM5HJHFd+tflipecWqjzP/zllO7L6lt5ctiV&#xA;U7isMISvtxuLmoxXo+h8UOxV2KuxVJvMvnLyv5Yt1uNe1KGwR6+mrkmR6deESBpHpXfiuSjAy5NW&#xA;XPDH9Rpiln+f/wCVV1dG3GsGE8uKSzQTxxtvSvIpRR/r0yw4JNA1+Inm9At7m3ubeO4tpUnt5lDw&#xA;zRsHR0YVVlZaggjoRlJFOWCCLHJUxSxfUPzQ8g6dq0mkXuswwalE6xSWzB+QdqUXZSO475YMUiLp&#xA;x5arHE0TuyjK3IdirsVcQGBBFQdiD0IxV88/845h/L/5j+e/Jh2iglaa3SvRLadogw/1kmT8MUld&#xA;/wA47E6r+Z/5ia+27G4KA+C3N1NIANztSAYqX0Jih2KuxVC6rqNvpml3mpXNfq9jBJczU68IkLtT&#xA;6FwgWaYzkIxJPR8Z2cPmb81fzDWOacfXdSkZmkapitreMFiFX+WNRRR3PeprmwNQi84OLPk8y9I8&#xA;6/8AOMX6O8vte+W7641HUrdQZrKVErMK7+jwpxIG/E1r45TDUWd3MzdncMbibLO/yF8neffK2jXV&#xA;n5jaKPT5mEtjYep6k0Dn+8qVqgV9jxDHfwqa155xlycrQ4ckARLk9Tyhz3xv+aP/AJOrU/8AtoQf&#xA;qjzYY/oDzmq/vj732RmvejdirsVdir57sFGk/wDOXV3Enwx6xasQKda2Syt/w9uTinou/wCcQ6y6&#xA;R5nu3P72e8h5gdKhHbb6XxUvoLFDsVdiqSeeLO4vfJXmCztkMlxc6beQwxjcs8kDqoHzJyUPqDVn&#xA;BMJAdxfLv/OO3mHTtG/MeEXzrFHqVtLYxzOQFSV2SRNz05GLgPnmbnjcXR6DII5N+uzL/wA+PIvn&#xA;Rdd1jzfFfx22gKkHBTcvG9ViSIqsYFOTODQV3yGGYoDq363BPilO/T+wJB/zjidX1H8yIpJLiaa3&#xA;sbWeeYPI5UclEK7E0O8nT6e2Sz7RauzwTlHkm/lf8mvzcsfOGk6jetWwtdQt7i6P1wP+5jnV3+Hl&#xA;v8IO2CeaBBpnh0eaMok9COrDfzR/8nVqf/bQg/VHk8f0Bo1X98fe+yM170bsVdirsVfPfnxTZ/8A&#xA;OVXlKcAVubSE/Dsfj+swfFt/k/dinov/AOcPf+Ub8w/8xkX/ACaOKl9A4odirsVdir58/ND/AJxw&#xA;v7vVLjWfJ7RFbp2ln0mVhFxkY1YwOfg4sf2WpTsabDLx5xyLqNT2ebMofJh7fkr+eer/AFax1SOX&#xA;6nCQsJvdQimghHSqosszACv7K5PxoBx/yeeVAjb3ve/yp/K/T/IWjSQLKLvVb0q+oXtOIJUfDHGO&#xA;yJU9dyST4AY2XJxF2ul0wxR7yWcZU5T5587fkZ541n8yL3zBZ/VP0fPdxToXmKvwQJWq8Tv8JzLh&#xA;miI06fPoskshkKq30NmI7h2KuxV2Kvn78zf/AFqDyP8A8wdt/wBRF3ino1/zicVtpfOmkjb6ndwE&#xA;JWooTNHsep/ut8VL6CxQ7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+evMa/X/8AnLbQoFAP1S1UuaVA&#xA;4Ws8+/h9oUxT0QH5b6xB5P8Azt/MCyuEdobiSaaKJKVobn1I/tN0CT9clGNsMuQRFl6pN+ap5fud&#xA;O+HxeXc/QFyzwnFOr8kw0r8y9IuTwv42sn7NvKh+lRyH3YDiPRnDUxPPZHXvn7y1bR8kuDcv2jhU&#xA;kn6W4r+ORGMspaiAY7P+alyX/wBHsEVP+LHLE/cFywYmk6s9Atj/ADUvQ372wjZfBXZT95DY+EFG&#xA;rPcmtl+Z2jS0F1BNbMepAEiD6RRv+FyJxFsjqo9Ul1v8ydSluGTSuNvbKaJKyhpG96NVQPamSjiH&#xA;VqnqTeyVxefPNUZr9d5itSrRxkf8RrkvDDWNRPvTqw/NK7QBb+zSX/iyFih/4FuQP3jInF3NsdUe&#xA;oTNvzR0UR1W1uTJTZSIwtf8AW5n9WR8Is/zUe5Ir38zdallraRRW0Q6KR6jH5saD7hkxiDVLVSPJ&#xA;MIfzUpCgn0/nNT94yScVJ9gVY/jkfCZjV+SYWf5m6JKQtxDNbE9WoHUfSp5f8LgOIsxqo9Xk/kSV&#xA;fMP/ADlH5j1eNg9tYWjmF96UWOC1WgI/aDE/flZFOSDYtLfzRtTon/OQcN3xCW/mKxTm56F1QxUH&#xA;vytk+/JYzu1Z43Ap1mS6xCzapYQ39rp7yj6/etwtLRAzyyH/ACUQM2RMgGyOKUuQWabrOl6msjWN&#xA;yk5iPGaMVEkbVIpIjUdD8J2YYRIFE8co8wjcLB2KtgEmgFTQnbwAqfwwWkAnkgBrmjnUY9P+tx+v&#xA;KYRHJWsB+sxtLD/pA/c0dI2IPOm2R4w2/l59yJhu7K4DNa3UF1Gh4tLbSxzx1HX44mdT9+SBBa5Q&#xA;INEJfeeafLtnNBFc6hDG1yjyQNUsjLFzD0dQUqGjZaV+1t1wGYZjBM9F2keZdB1ig029iuHYEiIH&#xA;jJRRVj6bUfYddsRIFEsUo8wmeSa3YquSOR68FLUBY0BNAOp2xUBZ/wA4sWf16784+aiDwvrxbe3Y&#xA;9gpeZ139pY8xCbdwBQARP/OVejyx6T5e83WqBrjRL4RyH/IlpIhb2EkIH+yxBWr2YM35gXyajqEl&#xA;toUup6JpUfLUGgZvXMF1bu8F3GVV1iiWivzcHYioGWSydzjY9KBz3SnyZZWPmdNP8s27yeW/O5eP&#xA;VbPXHu5ZzOskTfWKLUNBNLbhJQOVH49UBAytyuSCvNC1/wDw4NYtbGUvr1zFJp+sQ3kfp2EelK1q&#xA;Te3Cgp6k6ysX5MgqARUkqFTRTbyd+Ylq19e2XmGeaPTtNtn56sbceo1xGTtLHyj4CQj040Clq05d&#xA;6WDIXHnpYnlsqwfmpZ6jb3raNplzcz2Ns95OkxhhRYYiA7lg7k05DYCuSOUNI0hvcqC6hM3mHTPN&#xA;F9dXH/KvtTmMFnqRmhebS7ue1KzIAqHg8RDfCY6SKA3xNQ5STbmRgIigxt9KOo6BeLbahJf+R/KV&#xA;xHLdyxqyy/7kJlgHoF1j9XhxMieoiU5MO9SGad+eNe1HXPINtS20LzHfsZDqWv6fbP8ApWCC39N4&#xA;Zbj4YXi5rzRyyFCB1rvioQfme21qw8leU11G1sdA0qxhlazike31K41Gadg090sAR1H2VWkrALSn&#xA;LoMVXS+bbjyvB+Xkzx2ialZu+tXTW9vHEy2t5IFjik9ELX1II2cig+FlxWk/1PzLN5W13XbDWtdT&#xA;Wo4JtPSS8toVX0Lm5nE15HEB9tUt0mUVNAeI2O2TEy0nBA9En13zlfxfpAWepJrhujM2l2+mpNFB&#xA;BaoGlaaeXjFcCSOFKiMOOO7OdqMmZWOCA6Ifzy6WdzLaW9xMJdF8u2Rhv2mJmmmvZFNz8Ss+0q6j&#xA;LySvRfbItoD6Q/IHy2dB/KvRopF43N+jahcVFCTcnnHt7RcBgUsi/MLyunmnyVrGgkAyXtsy25al&#xA;BOnxwsa+EiqcUPizR/MNo8E+j+YRPZ2kth+h7vULeMTToYryO7t3mhdo+fpGH0qcw3DYfZpiyRq2&#xA;OrT+cLXVtDjWW1tbC2lsZL8paLfWthEmnylVken74wSfByrxr4Yqs826bZrI+mReZbiDRtPSSa08&#xA;v6otwt1bFgZVhWJQ1q7Sc/hkSSjA8jTFUVpWs6NL5j0r/D/lga3cuLW+aGSe7a6N9DvN9YrI1tID&#xA;KrNX0QPTbehriqpdy+bPLM48oavoNhb6pqiyx6TcPLzks7bVOdvJGJLWVg8XxtxSXlwb4qVxVV03&#xA;yV5z8taB5iPmA2lno1gIZ7/Sbl7a6nlueRW09OAGR4jIxKmX4T6fPiTiqYaPY+WvKeqaDL+nZbny&#xA;trOhi81qzoZ4p7ycS27QPaoUWkTMGHPdeBoeXHJxxmXJozamGP6juxnyyPI9lplvLfyatb6/FPKZ&#xA;5rAw+hLaSR8DB+8YMpbfk3EjiSCpy0aeTiHtTH0BQ99f6Vq+rtPqsEyafziS1hgk5Pa2UBolrDz2&#xA;KCI8anfl8ZqahpHTbbc2qHanq3FRVPM1x5Wk1CM3tje3Oq3skFzP9VuokggtXA9Gytl9GfmY7con&#xA;Mt8LDjxNN8YinbRkCLHJNrzQLeLX9c1DSL+5fQtFvtLkK3Lq+qzXssb+jBGYkMXqrKJVbstP2iKE&#xA;JTr9BX8Oty6N5dnjs7Xy/pN2mp6rHIgtV1S+geaaETseHxcUtBvWiV6jCATyYymIiyaY35XgHmyT&#xA;y15FtNPitbi9vVl1a7hj4PLDAhVGYh5CWji9Zm2UVI22LMkVzTGQIsGw+44YYoYkhiUJFGoSNBsA&#xA;qigA+QwIXYq+QPz00LU/JP5m3N9pdxPZad5lU3kbwSPGPWJpOh4FakSNy9g+TxkCW7TqYGWMiPN5&#xA;oSSancnrmxeYX3txc3ttBbXU8k0FtX6tG7swj5BQ3AGoWoRfuyueKMnLwa3JjPOx3Mq1TzN5EbRd&#xA;E0i18oLcW+lF2uLyS7eG6unlUeqZDEgABcAr8TcQKCgrmKcEnbQ7QxEbmmO6e3luTXJJ7vT7vT9P&#xA;aUeiNOugkkMJejUE6XLSv6ZNP3iAnuMRgl3Mj2hiHX7CnGraz5fsnltfJ8d9Dp80sFzczapJFNcT&#xA;TW6yqpdY1EYQi4bkh5cu+22XQ0/e4ObtMnaApjmZAFOrMiTZdhQ7FUdoN5Y6frlnqV5atdpZv6qw&#xA;JJ6JZ1BKAvxf4Q9CwpuNtuuVZMQl73L02rli849yFt55baG6t7djFbXjK08AJKExtyj+E13jJPFu&#xA;oqd98jHBEebZl7RyS5ekKZIAqTQKOvgBlpqIcQCWSQHMl7t/zid5Nea61Tztdx0UVsNN5DuaNM4O&#xA;3QBUrT+bNbKVm3p4QEIiI6PpTAydirzv89/y+PnPyHcwWsXqaxppN5plPtM6D44h/wAZEqAP5uPh&#xA;ikPjO2m9WIE/3i7OO9R3+nM/DPiHuef1+Dw52OUlbLnBdirsVdirsVdirsVdirsVX2el3+tarZaH&#xA;psZlv9RmSGFKH9o0qTTYDqT2AOYuon0dv2Zg55D8H3h5Q8s2Hljy1p2g2I/0ewhWINShd+skh93c&#xA;lj88xHbJvirsVdir5A/5yH/LpvKPm/8AT1hFx0DXpGdlXZIbo/FIlANg321/2QHTJ458Jtp1GEZY&#xA;GPXo8zBBFQajsRuM2INvMyiQaLeFDsVdirsVdirsVdiq2R1jRnb7KipyE5cItuwYTkkIh9Cf84t/&#xA;lvJHFN591WKk90Gg0aNgQVi+zLMAf5qcFPhXxzXE2bemjERAiOQfRGBLsVdirsVSTzp5R0rzd5av&#xA;dA1Nf9Hu0osoALxSDdJUr+0jb/h0xV8N+YPL2reVfMN55c1leF3Zvxjeh4SRndJEJ6q67r93tmTg&#xA;yVsXWdo6Wx4kfihMzHSp15L8s3HmfzTpuhQEqb2YJJIoqUiHxSvQ/wAkak5GUqFtmLHxyEe9nnmv&#xA;8lLbTfPPl3Q9M1Mz6T5h+GLU5AjcZI3InUcCFYqvEjpUmmVxy3Ek9HJy6ThnGIO0uv3ph5g/IvSf&#xA;8X6b5Y0C41KO6uJH+uXOpW9LdYIYw8k8MqLGstS3FVHfZiOuCOX02WWTRjjEI3fn97tH/K78qNf8&#xA;1w+W9B17Ubu4jjne/ueEYiBgoP3RKLUMze/Tr0xOSQFkJhp8U5iMSS898+6DpOh61HZaYmpRxGBZ&#xA;JU1e3+q3AkZmG0ZA+DiFofGuWQJIcXNARNC/jsxvJNQFsq/Kn8ubv8wvNkdlxZNBsCJdWulJA4V2&#xA;jU9OclOK+1WzAy5OI+T0Wj03hR3+ovtu0tLaztYbS1iWG2t0WKCFBRURBxVVHgAMqcpVxV2KuxV2&#xA;KuxV5p+d/wCUkHnzQhPZBYfMmnKW0+4O3qL9o27t4Mfsn9lvmcUgvj4rdwXU1lfQtbX1qxjuIJFK&#xA;srKaMGU9CD1zNw5b2PN0Wu0nAeKP0n7Gafl95o8teXoNUutRt7qbWDGBozW4i9IScX5C4ZyHCE8P&#xA;sb0r3plswTVOLgnGNk3fRmH/ACt/yVrnljTdK806JLby6RfJc2ceiqsERhUUYF2lWRGYszNx6kDc&#xA;HcV+GQSQefe5A1MJQEZj6T/Dt+lN73/nI3T9Nj0Wz8vW1/qFnp87S3lxrMiG5miZXX0g6GT7Il2d&#xA;t/hFa71j4F3f2Mz2hQAiCa/nc0B5f/Mb8mfLfm2PzJomnaxbSSpOl5ZlLd4gJqEelWcEcWXp4H2w&#xA;yhMijTHFqMMJ8URIfL7N3nf5g63oes65HeaPd6tewfV0SWbXJI5br1Fd6hWjLD0wpWnvXLYg1vXw&#xA;cTKYk7GR/rc0l8v+XNZ816/beXdFjMt7dNSR/wBiKMbu8jdlUdfu6mmY2bLewdtoNHw+uXPo+2fy&#xA;98haN5H8tW+iaYvLj+8u7pgA887Ac5Gp8qKOwoMxnZMlxV2KuxV2KuxV2KuxV4t+fP5H/wCKYm8y&#xA;+W41i8y2y1uIFAUXqKNh4eqo2Un7Q+E9qIK7EUeT5aSRubwzRtDcwkpNA4KsrKaEEHcUPY9MzsWX&#xA;i2PN0Os0RxniH0/cqZe4DsVdiqppumavrmr2+h6JbvdandPwSNO3iSeihRuzHYDMXNm6B2+i0P8A&#xA;HP4B9k/lF+U+lfl/oQhQLca3dqrapf8AXkw39OOoFI0rt49T7YjtyWe4odirsVdirsVdirsVdirs&#xA;VeQfnN+QWnechJrWhlNP8zqCXb7MN3QbCWn2X7B/v9leexfLOs6brPl/U5dK8wWcmn6hB9qORdmH&#xA;8ykVDA9itQcyseo6SdVqOzb3x/JDtNAqczKlPZgT9wNcu8aPe4Q0Ga/p+5OfJvkrzZ531NdP8u2j&#xA;NGGpc6hJVYIR4u9NvYCrHsMx8mcnYcnZ6bQRx+qW8vsfXf5WflJ5f/L/AEow2lLvVrgD6/qjqA8h&#xA;H7CDfhGOy1+dcx3YEs5xQ7FXYq7FXYq7FXYq7FXYq7FXYqlev+V/LvmG0+qa5ptvqMA+ytxGrlT4&#xA;ox+JT7qcVYhD/wA4+/k9DcGdPLkRc70ee6dOtf7t5WT8MU2zrTdM03TLOOy061is7SIUjt4EWONR&#xA;02VQBihE4q7FXYq7FXYq7FXYq7FXYq7FXYq4kAVOwHU4qhrTU9NvWdbO7huWj/vBDIkhX58SaYq4&#xA;6ppgJBu4QRsQZE/rirrzU9NsuH1y7htvU+x60ix8qeHIiuKokEMAQag7gjoRirsVdirsVdirsVdi&#xA;rsVdirsVdiryX/nJ/VL6w/KudbSVovrt3BazspIJibk7LUdm9MA+2KQxPQPK35X+XPzQ8s2uh+Yn&#xA;0fzLZW8FvqWira3c4vpLiASkvcE+inqJICeq9OhGKvO/JS/lk+teYIvOHlfU9eupNUkW0uNPEvpx&#xA;IZGBWQx3Fv336HFLOU8raV57/Ob8wo/Myvew6TZtFpsZd1ENAqoycSKcKE06VJJGKGR/840ecbKL&#xA;8rhHrmpQWqWeoXFnZNdzpHWNY4puKeoV2Uznbtipe2qysoZSGVhVWG4IOKG8VdirsVdirsVdirsV&#xA;dirsVYT+cXkG588+R7nRLOZIL4Sx3Nm81RH6kRPwuVBIDKzCtMVDzrTPy4/NbUfP3lLXfMGn6ZaQ&#xA;+Xljiubi1mJkuFjUIHcUJZ6AYpUfKHk78+/JN3rY0DTdGuLXVr17steyuzirHjT05IqfCe+KphrH&#xA;5dfmro3nvXvMvlBdPu4vM1p6V5BdSMjQTMih2UbA8XUlNzsaEYqyH8t/yR0PRvItpofmqxs9YvUu&#xA;Jb2XnGJI45Z1RCqFwCfgiUFqYqS9PREjRUQBUQBVUdABsBihvFXYq7FXYq7FXYqlHmnzb5f8q6S2&#xA;ra9dfU9PV1iaf05JfjfZRxiV23+WKpNP+bn5eQa1p+iTauI9T1RLeSxgaC4AkW7AMB9T0/TXnyH2&#xA;mFO+K0mP+PPKX6c1XQ21FY9T0S3F3qsUiSIkEBRZPUaVlERHCRTsxxVING/Pb8rNY1f9FWOtq92x&#xA;IhDwzxpIQCSEd0VSdth3/ZrimkH/ANDHfkx/1MP/AE533/VDFaR0n56flXH6/PW6fVbaG9n/ANFv&#xA;PhgufS9J/wC535fWI9huK7jY4rShY/8AOQP5RX17b2Vrr3qXV1IkMEf1S9XlJIwVVq0IAqT3OK0n&#xA;Fv8Amp5CuPKNz5vh1Tl5ds5RDc33oXA4yF0QL6RjEp+KVRsvfFFJPef85A/lFZyrDc696cjRxTKv&#xA;1S9P7ueNZo2+GE/aR1P68U05/wDnIH8oksor1tepazySQxSfVL3eSFUaRaejXYTJ27/PFaZH5P8A&#xA;P3lLzlbXFz5bv/r8Fq4juH9KaHi7DkBSZIydvDFDIMVdirsVdiryP/nKT/yVE/8AzGW3/EjikPD/&#xA;AMwdCvdY82WgsGZb3T/KthqMATqTa2ySNSm9eAYinemKQyTydqVl+YXm/wA+Xd1ex6amteW7SO4v&#xA;ZWVIobkQ2kUnIkqOAnQj3GKFHycumaB5g8p+VfzA0KF4rS8MnlbzLpsv7iWWaeNg8jxEJcJ6qoOR&#xA;3QbMuKsq17SNKX/nKzy5ZLZQCzfTpGe2ESCIn6rdmpSnE7gdsV6L/I2n2Ev/ADk551s5baKS0XTO&#xA;K27IrRgI1jxAQjjtTbFeiE/IfTdOl8xfmm0trDI1reKbUtGpMREt7T06j4fsjp4YqWOeX/8A1kjz&#xA;L/20o/8AqLs8U9UV+bFhYp/zjj5IvEt4lvJZbBZLkIokZRYz7M9ORHwj7sVHNkf/ADkRYjT/ADd+&#xA;Wg0PTrdrs6lM9tZBUhimnE1l6aSEAABmopJ7YoD1zyHP5tm0+5bzNolpol2JaQwWUqyo8fEfGxUn&#xA;flUYoZNirsVdirsVYp+ZvkGHz15WfQJrxrBHmjmNwiCQ/uiTTiWXrXxxVJ9I/J+z0/zrZeZ21Frg&#xA;2mlRaQ1i8K8JEjhEPNm5H7QFeNMVSDyz/wA41+XtF/xDA2pzXWn69aPZG29NUaBGlWVGWTk/Joyg&#xA;pVcU2oeX/wDnG76nrGjXet+abrWtN8vuH0jTGhEKRcZDKqlvVlqOdK0UVpTp0VtmN/8Aldb3f5ra&#xA;d+YJ1B0m0+3a2XTxGCrhopYuRk5VH9/X7PbFDtC/K630n8ztZ89rqDyzaxbm2awMYVYwTCeQk5En&#xA;/ef+Xviq38vvystfJ2reZtQW/a/HmWdbiaCSIIsXF5n4D4m5g/WKb+GKsLm/5xoZba80Ww83Xtn5&#xA;Pv7gXVxoIgR6upBFJi46cV6p+yK1pim2YfmB+UOl+bPJOl+UYLx9LsNJlgktnSMTHhbwPAiEFk/Z&#xA;krX2xW3fmf8AlUfPF9oN9FrEuj3fl+WWe0mhiWVvUkaJlYcmShRoARitpv5I8reYNAiu01jzJc+Y&#xA;2uGQwvdRrGYQoPILxZq8qj7sUMnxV2KuxV2KpZ5k8zaJ5a0p9V1q5+qWEbKjzcJJKM5oo4xK7bn2&#xA;yUYkmgwyZIwFy5MQ/wChgPyj/wCr9/06Xv8A1RyfgT7nH/PYe/7C7/oYD8o/+r9/06Xv/VHHwJ9y&#xA;/nsPf9hd/wBDAflH/wBX7/p0vf8Aqjj4E+5fz2Hv+wu/6GA/KP8A6v3/AE6Xv/VHHwJ9y/nsPf8A&#xA;YXf9DAflH/1fv+nS9/6o4+BPuX89h7/sLv8AoYD8o/8Aq/f9Ol7/ANUcfAn3L+ew9/2F3/QwH5R/&#xA;9X7/AKdL3/qjj4E+5fz2Hv8AsLv+hgPyj/6v3/Tpe/8AVHHwJ9y/nsPf9hd/0MB+Uf8A1fv+nS9/&#xA;6o4+BPuX89h7/sLIvKXn7yl5uW6by9f/AF0WRQXJ9KaLj6vLh/fJHWvA9MjLGY823FqIZL4TdMgy&#xA;Dc7FXYq7FWMfmP5J/wAaeVptB+u/UPWkik+s+l61PSblThzj6/62Txz4TbRqMPiR4bp5D/0KV/39&#xA;X/Th/wBnOX/mfJwP5L/pfZ+13/QpX/f1f9OH/Zzj+Z8l/kv+l9n7Xf8AQpX/AH9X/Th/2c4/mfJf&#xA;5L/pfZ+13/QpX/f1f9OH/Zzj+Z8l/kv+l9n7Xf8AQpX/AH9X/Th/2c4/mfJf5L/pfZ+13/QpX/f1&#xA;f9OH/Zzj+Z8l/kv+l9n7Xf8AQpX/AH9X/Th/2c4/mfJf5L/pfZ+13/QpX/f1f9OH/Zzj+Z8l/kv+&#xA;l9n7Xf8AQpX/AH9X/Th/2c4/mfJf5L/pfZ+16J+Uv5T/APKvk1RP0r+k/wBJGA1+r/V+Hoep/wAW&#xA;S8uXqe2V5cvHWzlaXSeCSbu6+y/1vQcpcx2KoPVNa0bSIY59Vv7fT4JZBDFLdSpCjSsCVjVpCoLE&#xA;KSB12xVGYq7FXYq7FUHq2taNo9r9b1e/t9OtCwQXF3KkEfNqkLzkKrU06YqjMVdirsVSrTfNvlTV&#xA;IbmfTNasL6CyXneS21zDMkKUJ5SsjMEFFJq3hiqM03U9N1SyjvtMu4b6ym5eldW0iTRPxYq3F0LK&#xA;aMpBoeuKonFXYq7FXYq8b/5yk/5QvQP/AAILT/kxcYpDKvzR/MDUfKv6BsNJtYbnWPMV/Hp9l9aL&#xA;CCMuyqXk4UYgNIuwOKGGXn5/6tpHlvzW+q6bbSeYvLOoRabwtmkW1macyBJaPWRRSBzxr4dMU0zL&#xA;QvMv5lxX2tWPmLQYJjYWZu9Ov9NLx291KEDfVR67MQ9W48q02OKGG+Vfzm86al5usfK2oRaKupaz&#xA;Z3ctotnI8/1G7gWZo4b3hNIHqsIZghU74ppgGjeffM9r+R975h1uDTvM6z64kUEOtwSXpDmJjKz8&#xA;5AuwCCLiBx+LxFFPV6J5n/OrzZbal5wk0PTrCTR/JL20eoi7ab6xcNO5jPolCETiyt9oHp74opU8&#xA;z/nL5ni8y6Zp/l62sDY6p5ZPmKJ75JmkVvTnmCExSICvCEbca174rTPPyx84TecfI2l+ZJ7dbWa+&#xA;WX1YEJZVaGZ4TxJ3oTHXFBfKv5VXdx5asJdRlY/orzZYato8pNOKXVvAJYferFwo+ZxZF6n+Xvm3&#xA;zJ5e/JPyV+hoLFI724vIr/VtVlEVnZxC+l+OQepCzluRoFbscUFWl/5yD8yyfllZeZrSwsP0qdfX&#xA;QryNvVe1ceg03qw8XV1r8NKlu/XFab1H88PzCsrLzlMdP0l38lXtvBeuPrIE8V1cGCMRJy+Fl41Z&#xA;man+TitIjzL+f+qW+q3VnpSaTZDTtHg1e5GrTOr3Ek8CXAtLUI0fKXhKOPWp7YrT1TyP5oj80+Ut&#xA;L8wRxegNQgErQV5cHBKutdqgMp3xQxr87PIGved/LWn6dok1rBeWWpQ35a9aRIikUUqUrEkrV5Sj&#xA;t0rvikJFr/5f/mz5q/Rt/r91oFtrHl3ULfUdD+oLeGCQoxaZLkzVYAlIuJQfzV7YqgLz8gdW1fy1&#xA;5rj1XUbWPzD5m1CLUudsjtawtAXKRVekjCkzjlTFbZTpfkv8w7648w3PmnXokTV9PfTrPTdNaZrW&#xA;2aSMRtcr6vA+p8PLYdzvihifkT8jvNfl/wA2+UdXu59L+qeXYLy2uRaess0wnWcRynlGFdybgcqk&#xA;UA2LYptL5vyA87r+WV75GhvtMkjGqx6jp1473CM0fBkkWZRE/FvscePLvU9MVtOfM/5LebLnUvOC&#xA;aHqNhFo/nZ7aTUfray/WLdrdzIfREYKPyLN9ojritovWvya1mXzbpmoabc2o0nTPK8nl2NJmkWYy&#xA;+jcQxvxSN04fvlr8Veu2K2y78pvKOpeT/wAv9K8u6nLDNe2P1j1ZLZnaI+tcyTLxLrG32ZBWq9cV&#xA;LzOL/nHrzA/5OP5Purux/T8GpHUrC6R5jbryVY2VnMSyLVOXRDvT6FbRsP5HeZ4vJvkXTTd6fNqX&#xA;lK9uLq5tZjLJY3CXF0Zhv6Ycsi0pVOpO/fFbS4f84/8AnBfy+Hlpb3TjeL5n/Tol5zrCbUW3o8f7&#xA;pmEnLfjQrT9rFbTHV/yS813ll+ZkEV3YB/Od3ZXGllpJgI0tbtp3FxSI8SVag4ct8VtUu/yX83We&#xA;sPq+g3WlNeaho1rpV+NQjkkFvPbwRwfWbUhHDMFhHEOo98VeqeVdIutH8u2GmXd0L27togtxdLGs&#xA;KySElnYRoAqip2GKE1xV2KuxVpmVVLMQqqKsx2AA7nFXmUX/ADkP5Bkv4Ylh1EaXcXP1ODX2tCun&#xA;PPWnATFuVe/2Om+KaZT5X8/6N5j17zDoljDcR3flqeO3vnnVFjd5DIAYiruxH7k/aC9sUMlxV2Ko&#xA;PVta0jR7M3mq3kNjahggmndUUu32UWp3ZuwG5xVGYq7FXYq7FXYq7FXYq7FXYqlHnH1f8I656VfV&#xA;/R916fHry9FqU+nFXkP5Zyfl5H/zj55fPnUW50g3VwGE6u6m5N3cenyEYLcuHSvbFJ5sH1i41XT7&#xA;n85tc0rVLzTL7StU06SH6pL6SyGW8lhIloOTKFc0WtPGuKU/89ebdZnuvU/xDrMt9F5XTU49J0MG&#xA;2S2uPq6y/XL6YSRK8XIksgUmhH0qA3debvNmr2X5NmXWb22k16S7t9XltJmga4VJYIQZAlFZuJNC&#xA;RsSSN8VYh5k1nV/Mn5P6Vc6xqF1d3Wk+bn0mKaSZiZIXtzMHlpTnKn2Uc7qCadcUsg1jzF5/vfMP&#xA;nLTdGvNfmuPLL2lloRsp0NtGIy0byai0zq0zTLFUMQ1WrXtihPvMF7528w/mr5S0Aa9f+Xl1jyzB&#xA;darDZSkBZyZ5JeCA+msnJAnqAVA6Yq9+xQ7FXYq7FXYq7FXYq0yqylWAZWFGU7gg9jirzK3/AOce&#xA;PIUF/DMs2pNpltci9t9Be6Lack4NeYh48q9vt9NsU2jb78kvKl5b+bYJbu/Cec57e41QrJCDG9rM&#xA;Z0FvWI8QWah58tsVtvUPyS8pXt2t39Zv7aZtLXRLs286oLm0VFjCzDgamiLXjQGm4xRbC/PX5V3d&#xA;pqf5XaHoEeoT6PodzdLc6lEQZ7ZJZYHWV5Y0VVIIYqeNNsU2zST8jvJL+SIvJ9btbGG6/SCXiyj6&#xA;39boV9YyFChbixH2Ke2K2o6r+RXlLUri6nnvtUQ6lHBHrSRXKomoG2ACPdKI93JHJinHf54radj8&#xA;tPLqectK81wtPBeaNp40qys42T6qLdRIFqpQycgJSPt+GKGV4q7FXYq7FX//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:52A5BF580C206811A36D85DC8BC97055</stRef:instanceID>
            <stRef:documentID>xmp.did:52A5BF580C206811A36D85DC8BC97055</stRef:documentID>
            <stRef:originalDocumentID>uuid:CB2EBF8A5CDFDE119F56F7342924101D</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:InstanceID>xmp.iid:48AF66717F296811A36D85DC8BC97055</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:48AF66717F296811A36D85DC8BC97055</xmpMM:DocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4FA5BF580C206811A36D85DC8BC97055</stEvt:instanceID>
                  <stEvt:when>2012-01-10T15:34:01-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:50A5BF580C206811A36D85DC8BC97055</stEvt:instanceID>
                  <stEvt:when>2012-01-10T15:55:17-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:51A5BF580C206811A36D85DC8BC97055</stEvt:instanceID>
                  <stEvt:when>2012-01-10T15:56:22-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:52A5BF580C206811A36D85DC8BC97055</stEvt:instanceID>
                  <stEvt:when>2012-01-10T15:57:40-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:48AF66717F296811A36D85DC8BC97055</stEvt:instanceID>
                  <stEvt:when>2012-01-10T15:58:31-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:CB2EBF8A5CDFDE119F56F7342924101D</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3.000000</stDim:w>
            <stDim:h>5.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>UniversLTStd-BoldCn</stFnt:fontName>
                  <stFnt:fontFamily>Univers LT Std</stFnt:fontFamily>
                  <stFnt:fontFace>67 Bold Condensed</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>OTF 1.029;PS 001.002;Core 1.0.33;makeotf.lib1.4.1585</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>UniversLTStd-BoldCn.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 3165 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000000</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000004</xmpG:magenta>
                           <xmpG:yellow>85.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999998</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000000</xmpG:cyan>
                           <xmpG:magenta>30.000002</xmpG:magenta>
                           <xmpG:yellow>95.000000</xmpG:yellow>
                           <xmpG:black>30.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>45.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>70.000000</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>95.000000</xmpG:magenta>
                           <xmpG:yellow>19.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>45.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000004</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000000</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>39.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999996</xmpG:magenta>
                           <xmpG:yellow>65.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000004</xmpG:cyan>
                           <xmpG:magenta>60.000004</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>65.000000</xmpG:magenta>
                           <xmpG:yellow>90.000000</xmpG:yellow>
                           <xmpG:black>35.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999996</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>70.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>70.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 541 CV</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>51.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>30.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 2727 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>71.000000</xmpG:cyan>
                           <xmpG:magenta>42.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 286 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>66.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>2.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 582 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>13.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>45.999996</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 534 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>80.000000</xmpG:magenta>
                           <xmpG:yellow>30.000002</xmpG:yellow>
                           <xmpG:black>5.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 280 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>72.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>18.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 7406 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>18.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 362 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>70.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>9.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 292 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>48.999996</xmpG:cyan>
                           <xmpG:magenta>11.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 3165 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>28.000000</xmpG:yellow>
                           <xmpG:black>65.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grayscale</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=100</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>255</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=90</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>229</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=80</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>203</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=70</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>178</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=60</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>152</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=50</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>127</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=40</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>101</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=30</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>76</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=20</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>50</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=10</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>25</xmpG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>K=5</xmpG:swatchName>
                           <xmpG:mode>GRAY</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:gray>12</xmpG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -289.806 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 289.806 li
134.048 289.806 li
134.048 0 li
cp
clp
[1 0 0 1 0 0 ]ct
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%ADOBeginSubsetFont: UniversLTStd-BoldCn Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /UniversLTStd-BoldCn def/FontInfo 7 dict dup begin/Notice (Copyright 1987, 1991, 1998, 2002 Adobe Systems Incorporated. All Rights Reserved. Univers is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def/Weight (Bold) def/ItalicAngle 0 def/FSType 4 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 67 /C putdup 76 /L putdup 78 /N putdup 97 /a putdup 99 /c putdup 101 /e putdup 104 /h putdup 105 /i putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 116 /t putdef/FontBBox {-83 -250 1000 969} defendsystemdict begindup /Private15 dict dup begin/|- {def} def/| {put} def/BlueValues [-12 -0 722 734 505 515 698 707] def/OtherBlues [270 283 -191 -176] def/FamilyBlues [-19 -0 720 741 502 519 692 708] def/FamilyOtherBlues [274 283 420 421 -209 -190] def/StdHW [87] def/StdVW [141] def/StemSnapH [87 111] def/StemSnapV [141 151] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings16 dict dup begin/space <1C60D8A8C9B88C088B> |-/C <1C60D8A8C9B7EF32A32EDDCDC6157ADA1579197352A7F16B5A3AA6737B9E1C147C22E36418EDC81CFE81525DE295C48076B905B052FFE0EBC640AE1E0150579691880DD2D44EC676902C79DB1E661EAEF0C78952B0A82AD0D9A5E82478FB0A9D187CF69DFF5EB30CA834004CC1F06772292139AC42141B7C2841883807820A6CB713D8DA39F6> |-/L <1C60D8A8C9B77FE2B27DCEA8416948E50C3CD70D27FE7EE7526EFB5ED29B48F1CE61ACEE331018A3> |-/N <1C60D8A8C9B64EDFA3F30AEA593ED05E29AB6491847AE7510B76CA6237C3D224E162FB6949EC179455C75BBE1F4EE24834FCA200E553E5881F5559F293EB80C7> |-/a <1C60D8A8C9B7A73DC50B041E275B800E8D9883F53F439EF589B6233556D1A887BBF76F4AB5E5C4361E393E6E98DAF173F71122E24C904D2D45DC8D20E19C04921282223D79D0EECC2D6B1B57CD36007ABE4E687392D6788A9A12F79E56E1ADAB973799DA3EB79D9CDD72D2A20EAB412F0DFCAC75B3C908D3055EAB42074C9A9EBCAEFA56F895049286416A4FD11196BBECEB5EAF29BB4FC8A287B7DF575E9C25F5359A706D2BC51FE7FA40C49DC60906074CACEE4B7B502EE7B595B5AF1C7A886A9FDC83> |-/c <1C60D8A8C9B7A73DCF0604BCE358788B7232098CC0E7BC1896FF6FBF33A801CDB37213F7A66818FFEB507FD888568D0D33884249341F3B554D862D2BC4FC4A531249DE2D730079A9D2EA2CDE72C76FD76058500599> |-/e <1C60D8A8C9B7A73DCF0604B3E661669CB41DAB9B36859B17231B0535BB99A193AF22ACD3336817096F11D5EC7CE9EB8BB72B8993EBF66456270E19BE1E4A2498B1EDDDC58DD2BE26E57FF7EE4675EF7C52766C031DEA1BBA3DBBB36A107A38E38F725F2A5918F3E096CD3336A323B02343FC44AB0727B92FE43412E7FD> |-/h <1C60D8A8C9B7A73DEE9439F955B61CD1210ADF810927D230BAD7AD5502BB21FF20C743D9AA7D7F3F5CACFC3A0821F72F444D090F28D522D8574225DFF0C8768965E469CC0C3248917D11546A577CEA9D09625E402C724349A6DA4E05E97F0057CEAE836D4CED822BE69A943445D7E9F42E5946AE4F55C921BF07A0C297EED38FAA> |-/i <1C60D8A8C9B854D0A3953AFCEB56C89450932311A764DCA7205CD1173A9F80073E8BB041F0363E7D63F2DD25834A3A870BF92664D62AB9> |-/m <1C60D8A8C9B6079F2D198A742CDE940B28F65591DCE0C479E9E32F1700B4B79864228EE1BDFF83CDEF05D7E2D19D9A8B2D3E8C485AD8ECB9C1105D4EF6AAAB082D84A942A3411BDD63528E09FE5BB4D7FCBEF64A86C8AC16516F1B07619FAF909EDAFD8787CE59FC564725DBE89036C43C117056AD2D450EEB4FB8548584DB027A08BF1FA2B890> |-/n <1C60D8A8C9B7A73DEE9439F9558C3EFEEACC383109678299D9A6192AFBBA2386A58BE0C2608D53A29FED7AF69F068331ED4DCF9730F75DBF040BD70A57F415528C4F14E8B936DCD6900D46DA08DF3253A3210124D6DDD24742E45BB8EA3D4938EFC69E5B60854D7C5AFC602B58DF53C8F214243D7F3A3F> |-/o <1C60D8A8C9B7A73DCF0604BCE358788B7232098CC25A3EEC1813B65E1CD2FDAF98CA3469082EC52227DEA5FB6482EA646223D0DFB9FCBFCAA887EC6A1A8A421E88CDB062445FA0951FA6FE04CFE1C4CB69BB918F43E58D> |-/p <1C60D8A8C9B7A73DCF01FCC25BDE1BCD41B433E79C788FC2AA6E4FD7CDD2957C54A1303CA74934DDE8CA2DE7242E7606A342985DA3C0A621282E86F8A041377FC1FF5CB11BE5AE973CE9B244B59CAC043FAA94FE1972FC6516DF7F6922723D771C8B2CEDD9E05D32F980161C6FEBBDD49665008B8D32919D08CC2F0C044B7B316A31FF8931CF737369> |-/r <1C60D8A8C9B81F2C6DADD0304B3228C3638A0C54DC435D44D4AC4B81438E6AE2A3F88E8DE81D41C12C66F8F8455B8CB9DCE12CFCB44909159C559EBB288256AD2EBE53888BAB4003719742F3ECB39A98C42F44> |-/t <1C60D8A8C9B854D08557243C81871A3D679052F8C2A38BCD769E47340A8FA5DF67842CC885CDCED899F1BE73CB309475750C794409026E3F1E17CA5CB680BDE45336E4B2C6E54809F8E2A464D5> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/BWXZIB+UniversLTStd-BoldCn /UniversLTStd-BoldCn findfont ct_VMDictPut/BWXZIB+UniversLTStd-BoldCn*1 [32{/.notdef}rp /space 34{/.notdef}rp /C 8{/.notdef}rp /L /.notdef /N 18{/.notdef}rp /a /.notdef /c /.notdef /e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n /o /p /.notdef /r /.notdef /t 139{/.notdef}rp]BWXZIB+UniversLTStd-BoldCn nfBWXZIB+UniversLTStd-BoldCn*1 [21.1219 0 0 -21.1219 0 0 ]msf4.22559 259.179 mo(Location Name)[9.08203 10.2651 10.2656 10.2651 5.57617 5.57617 10.2651 10.2656 4.39258 13.792 10.2656 14.9541 0 ]xsh34.4297 284.525 mo(Chapter)[11.4482 10.2651 10.2656 10.2646 5.57617 10.2656 0 ]xsh112.715 230.78 mo
68.5273 230.78 li
24.7715 230.78 li
24.7715 224.153 li
68.832 224.153 li
112.715 224.153 li
112.715 230.78 li
cp
/0 
<<
/Name (PANTONE 3165 C)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 0 .28 .65 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
70.4336 3.7002 mo
68.3223 3.7002 67.1777 3.71484 67.1699 3.71484 cv
66.9785 3.71875 li
66.9258 3.71875 li
66.873 3.71875 65.7285 3.70508 63.6152 3.70508 cv
57.2031 3.70508 42.2734 3.8457 26.502 5.02344 cv
25.4199 5.10742 24.3301 5.19531 23.2051 5.29102 cv
21.9648 5.37402 20.7539 5.46582 19.5273 5.61914 cv
15.627 5.99023 11.7402 6.41992 7.99414 6.94238 cv
7.89648 7.24316 6.87305 10.3301 5.85352 15.6289 cv
4.77734 21.2119 3.70313 29.2314 3.70117 38.9756 cv
3.70117 39.0156 li
3.70117 45.498 4.1875 52.748 5.45898 60.5479 cv
5.47656 60.542 5.49023 60.5371 5.50781 60.5313 cv
7.17578 60.0205 10.1543 59.499 10.5215 59.4336 cv
15.0703 58.6104 18.8691 57.9941 23.1074 60.4365 cv
24.6602 61.3311 26.5332 61.7363 28.3066 61.8184 cv
31.8301 61.9824 34.1855 60.3936 37.3613 59.3555 cv
39.9102 58.5215 42.7773 58.3857 45.4316 58.3691 cv
48.6719 58.3486 51.9102 58.6768 55.0977 59.248 cv
56.0703 59.4229 63.6543 61.5957 63.8262 61.3252 cv
68.1504 54.5742 79 56.3896 85.1865 58.4512 cv
89.5049 59.8916 94.6533 60.8486 99.1143 59.5762 cv
102.915 58.4912 107.735 54.9355 110.966 59.5938 cv
115.224 58.8613 119.821 59.5098 123.962 60.541 cv
124.55 60.6865 127.261 61.2646 128.321 61.8398 cv
128.335 61.8467 128.343 61.8535 128.356 61.8604 cv
129.792 53.5615 130.343 45.8545 130.347 39.0098 cv
130.347 38.9922 li
130.347 38.9668 130.347 38.9336 130.349 38.8916 cv
130.335 20.0098 126.298 7.6582 126.058 6.94043 cv
104.813 3.98438 79.3584 3.70215 70.4336 3.7002 cv
cp
0 0 0 0 cmyk
f
117.368 89.4658 mo
115.847 89.7559 114.362 90.0898 112.938 90.4473 cv
105.036 92.4336 98.9854 95.1729 98.4463 95.4199 cv
98.4209 95.4316 98.4072 95.4395 98.4072 95.4395 cv
97.9697 95.0039 97.5381 94.5781 97.1104 94.1631 cv
95.5049 92.6035 93.9658 91.1855 92.5713 89.9453 cv
92.2568 89.666 91.9521 89.3994 91.6533 89.1387 cv
90.7373 88.3379 89.9033 87.6309 89.165 87.0176 cv
89.1064 86.9678 89.0439 86.915 88.9873 86.8672 cv
88.5791 86.5293 88.2119 86.2285 87.874 85.9551 cv
87.5342 85.6797 87.2236 85.4307 86.9658 85.2266 cv
86.6494 84.9775 86.4053 84.7871 86.2275 84.6504 cv
86.0264 84.4961 85.9131 84.4102 85.9131 84.4102 cv
85.3994 84.6504 li
82.1338 86.1777 li
81.4932 86.3203 li
79.1426 86.8496 li
76.9648 87.3398 li
76.9648 87.3398 76.5117 87.418 76.3477 87.4258 cv
76.1953 87.4336 75.7852 87.3818 75.6816 87.3623 cv
74.6621 87.1748 73.6074 87.2178 72.5801 87.3975 cv
72.2246 87.458 71.8809 87.5371 71.5371 87.627 cv
70.7871 87.8242 70.0703 88.0762 69.4063 88.3516 cv
69.3438 88.4141 69.2227 88.4668 69.2168 88.4277 cv
68.3984 88.7783 67.6777 89.1523 67.0996 89.4785 cv
66.5879 89.7676 66.1914 90.0195 65.9473 90.1787 cv
65.7676 90.2979 65.668 90.3691 65.668 90.3691 cv
64.8809 90.9922 64.0957 91.5566 63.3125 92.082 cv
63.1191 92.2109 62.9238 92.3398 62.7324 92.4639 cv
61.1875 93.4541 59.6602 94.2617 58.1641 94.916 cv
57.3105 95.29 56.4668 95.6152 55.6348 95.8945 cv
46.7031 98.8965 39.4238 96.7148 37.9375 96.2012 cv
37.7559 96.1387 37.5781 96.0322 37.5371 95.998 cv
37.4141 95.8975 37.291 95.8018 37.168 95.7012 cv
37.0039 95.5674 36.8398 95.4277 36.6758 95.3008 cv
34.7207 93.7705 32.8125 92.6553 30.9766 91.8594 cv
30.5977 91.6973 30.2266 91.5449 29.8535 91.4092 cv
29.7305 91.3633 29.6094 91.3223 29.4863 91.2793 cv
29.3457 91.2305 29.207 91.1836 29.0684 91.1387 cv
26.8164 90.4102 24.6914 90.1465 22.7422 90.1875 cv
22.7363 90.1875 22.7363 90.1875 22.7344 90.1875 cv
22.2578 90.1982 21.7949 90.2373 21.3379 90.2813 cv
20.9395 90.3203 20.5527 90.376 20.1719 90.4375 cv
19.5527 90.5352 18.9551 90.6582 18.3848 90.8047 cv
17.8867 90.9326 17.4082 91.0732 16.9492 91.2285 cv
16.0996 91.5156 15.3398 91.8369 14.6504 92.165 cv
18.959 102.31 24.8066 112.831 32.7129 123.428 cv
32.7715 123.499 32.7383 123.462 32.7949 123.534 cv
32.8359 123.59 32.9004 123.671 32.9785 123.776 cv
33.1406 123.985 33.3789 124.29 33.6836 124.679 cv
34.2969 125.458 35.1797 126.57 36.2773 127.905 cv
38.4746 130.573 41.5195 134.14 44.918 137.714 cv
48.3223 141.288 52.0762 144.879 55.6855 147.588 cv
59.3457 150.331 62.7422 152.157 65.6152 152.268 cv
66.75 152.315 li
66.9961 152.323 li
67.3066 152.315 li
68.4238 152.268 li
69.877 152.202 71.4473 151.727 73.1289 150.907 cv
74.791 150.094 76.5449 148.944 78.3535 147.598 cv
83.7256 143.551 89.4463 137.569 93.8076 132.583 cv
98.0459 127.739 100.972 123.901 101.313 123.461 cv
110.071 111.721 116.331 100.067 120.741 88.9248 cv
119.603 89.0811 118.472 89.2559 117.368 89.4658 cv
cp
1 /0 /CSD get_res sepcs
1 sep
f
14.6621 92.2236 mo
14.6621 92.2236 li
14.6563 92.209 14.6504 92.1953 14.6445 92.1807 cv
14.6504 92.1953 14.6563 92.209 14.6621 92.2236 cv
cp
0 0 0 .9 cmyk
f
130.347 38.9922 mo
130.347 39.0098 li
130.343 48.6211 129.292 59.9082 126.165 72.1914 cv
126.161 72.2051 126.157 72.2188 126.153 72.2324 cv
126.136 72.3076 126.116 72.3838 126.097 72.459 cv
126.093 72.4736 126.089 72.4893 126.085 72.5039 cv
126.071 72.5576 126.054 72.6123 126.04 72.666 cv
125.81 73.5586 125.567 74.4551 125.315 75.3574 cv
125.313 75.3643 125.312 75.3711 125.31 75.377 cv
125.044 76.3223 124.765 77.2734 124.476 78.2295 cv
124.472 78.2373 124.47 78.2441 124.468 78.252 cv
124.454 78.2959 li
124.101 79.4551 123.726 80.6221 123.335 81.7959 cv
123.272 81.9795 123.212 82.1631 123.151 82.3467 cv
122.892 83.1113 122.622 83.8799 122.347 84.6504 cv
122.183 85.1074 122.024 85.5625 121.854 86.0205 cv
121.853 86.0234 121.853 86.0254 121.851 86.0283 cv
121.837 86.0674 121.821 86.1074 121.806 86.1465 cv
121.466 87.0645 121.112 87.9854 120.747 88.9102 cv
120.741 88.9248 li
116.331 100.067 110.071 111.721 101.313 123.461 cv
100.972 123.901 98.0459 127.739 93.8076 132.583 cv
89.4463 137.569 83.7256 143.551 78.3535 147.598 cv
76.5449 148.944 74.791 150.094 73.1289 150.907 cv
71.4473 151.727 69.877 152.202 68.4238 152.268 cv
67.3066 152.315 li
66.9961 152.323 li
66.75 152.315 li
65.6152 152.268 li
62.7422 152.157 59.3457 150.331 55.6855 147.588 cv
52.0762 144.879 48.3223 141.288 44.918 137.714 cv
41.5195 134.14 38.4746 130.573 36.2773 127.905 cv
35.1797 126.57 34.2969 125.458 33.6836 124.679 cv
33.3789 124.29 33.1406 123.985 32.9785 123.776 cv
32.9004 123.671 32.8359 123.59 32.7949 123.534 cv
32.7383 123.462 32.7715 123.499 32.7129 123.428 cv
24.5156 112.439 18.5117 101.528 14.1621 91.0391 cv
14.1621 91.0371 14.1602 91.0342 14.1602 91.0322 cv
14.0938 90.875 14.0332 90.7178 13.9668 90.5596 cv
13.9629 90.5488 13.959 90.5391 13.9551 90.5283 cv
13.1445 88.5527 12.3945 86.5928 11.6973 84.6504 cv
10.8965 82.418 10.1641 80.207 9.50391 78.0244 cv
9.49219 77.9863 li
5.10547 63.458 3.70313 50.1182 3.70117 39.0156 cv
3.70117 38.9756 li
3.70313 29.2314 4.77734 21.2119 5.85352 15.6289 cv
6.87305 10.3301 7.89648 7.24316 7.99414 6.94238 cv
11.7402 6.41992 15.627 5.99023 19.5273 5.61914 cv
20.7539 5.46582 21.9648 5.37402 23.2051 5.29102 cv
24.3301 5.19531 25.4199 5.10742 26.502 5.02344 cv
42.2734 3.8457 57.2031 3.70508 63.6152 3.70508 cv
65.7285 3.70508 66.873 3.71875 66.9258 3.71875 cv
66.9785 3.71875 li
67.1699 3.71484 li
67.1777 3.71484 68.3223 3.7002 70.4336 3.7002 cv
79.3584 3.70215 104.813 3.98438 126.058 6.94043 cv
126.298 7.6582 130.335 20.0098 130.349 38.8916 cv
130.347 38.9336 130.347 38.9668 130.347 38.9922 cv
cp
129.544 5.70313 mo
128.815 3.58496 li
126.603 3.28125 li
105.007 .277344 79.4521 .00683594 70.4336 0 cv
68.3301 0 67.1309 .015625 67.127 .015625 cv
66.9355 .0195313 li
66.9258 .0195313 li
66.9219 .0195313 65.7207 .00390625 63.6152 .00390625 cv
57.1465 .00390625 42.1445 .147461 26.2246 1.33398 cv
25.125 1.41797 24.0215 1.50781 22.9258 1.60156 cv
21.6953 1.68457 20.4141 1.7793 19.123 1.94336 cv
15.2246 2.31055 11.2715 2.74805 7.44531 3.28125 cv
6.36133 3.43164 li
5.22656 3.58691 li
4.50586 5.70703 li
4.4082 5.99316 .015625 18.918 0 38.9414 cv
0 39.0156 li
-.00390625 51.833 1.82813 67.5693 7.77148 84.6504 cv
12.3359 97.7695 19.3242 111.683 29.7773 125.679 cv
29.8105 125.726 li
29.834 125.751 li
30.3359 126.408 35.5977 133.28 42.2383 140.265 cv
45.7305 143.924 49.5938 147.639 53.4688 150.553 cv
57.3457 153.418 61.2148 155.735 65.4531 155.965 cv
66.5996 156.01 li
66.9297 156.026 li
66.998 156.026 li
67.4473 156.012 li
68.584 155.965 li
70.7266 155.862 72.7715 155.196 74.752 154.231 cv
76.7246 153.264 78.6465 151.989 80.5713 150.559 cv
86.3643 146.186 92.2236 140.013 96.6963 134.901 cv
98.9287 132.345 100.81 130.058 102.136 128.402 cv
102.8 127.573 103.325 126.903 103.685 126.44 cv
103.866 126.208 104.005 126.026 104.103 125.902 cv
104.089 125.892 li
104.185 125.798 li
104.269 125.688 li
114.72 111.688 121.712 97.7715 126.276 84.6504 cv
132.171 67.7031 134.021 52.0811 134.046 39.3184 cv
134.046 39.3174 li
134.048 38.9756 li
134.044 18.9375 129.638 5.98047 129.544 5.70313 cv
cp
0 0 0 1 cmyk
f
9.49219 77.9863 mo
9.49609 77.999 9.5 78.0117 9.50391 78.0244 cv
9.5 78.0117 9.49609 77.999 9.49219 77.9863 cv
9.49219 77.9863 li
cp
0 0 0 0 cmyk
f
13.9668 90.5596 mo
14.0332 90.7178 14.0938 90.875 14.1602 91.0322 cv
14.1602 91.0342 14.1621 91.0371 14.1621 91.0391 cv
14.0918 90.8682 14.0254 90.6992 13.9551 90.5283 cv
13.959 90.5391 13.9629 90.5488 13.9668 90.5596 cv
cp
f
69.4063 88.3516 mo
70.0703 88.0762 70.7871 87.8242 71.5371 87.627 cv
71.293 87.3906 71.0664 87.1484 70.8633 86.8945 cv
70.377 87.3799 69.8926 87.8662 69.4063 88.3516 cv
cp
0 0 0 1 cmyk
f
16.3984 91.1582 mo
15.9258 91.0762 15.3555 90.8809 14.875 90.8965 cv
14.5918 90.9609 14.3613 90.9941 14.1602 91.0322 cv
14.3164 91.4111 14.4766 91.79 14.6387 92.1699 cv
15.332 91.8398 16.0957 91.5166 16.9492 91.2285 cv
16.7637 91.2051 16.5684 91.1865 16.3984 91.1582 cv
cp
f
21.6504 72.124 mo
22.4863 73.1953 23.0996 74.5107 23.6582 75.7461 cv
23.9707 76.4395 24.2227 77.1699 24.3223 77.9268 cv
24.418 78.6445 25.1523 78.5352 25.7695 78.252 cv
26.3906 77.9668 26.8594 77.3301 27.334 76.8574 cv
27.8379 76.3613 28.957 75.5615 29.0469 74.8906 cv
29.2051 73.7246 28.1426 72.9785 27.4609 72.1934 cv
26.9141 72.7412 26.3672 73.2891 25.8184 73.8359 cv
25.6328 72.8193 25.791 71.627 25.8828 70.4453 cv
25.8926 70.3096 25.9063 70.1748 25.9141 70.04 cv
23.9922 70.1387 22.3887 70.7734 21.1875 71.4629 cv
21.2754 71.5947 21.3672 71.7188 21.457 71.8467 cv
21.5215 71.9395 21.584 72.0371 21.6504 72.124 cv
cp
f
112.931 81.7959 mo
112.554 82.8682 112.177 83.9404 111.8 85.0127 cv
111.468 85.9551 111.138 86.8984 110.808 87.8418 cv
110.771 87.9502 110.729 88.0967 110.683 88.2451 cv
110.653 88.3428 110.62 88.4326 110.583 88.5215 cv
110.573 88.5449 110.567 88.5742 110.556 88.5967 cv
110.55 88.6113 110.542 88.6211 110.534 88.6338 cv
110.522 88.6563 110.511 88.6748 110.499 88.6943 cv
110.46 88.7578 110.419 88.8105 110.37 88.8359 cv
110.37 88.8926 110.333 88.96 110.282 89.0313 cv
110.274 89.04 110.278 89.0469 110.271 89.0566 cv
110.261 89.0693 110.241 89.085 110.229 89.0977 cv
110.163 89.1758 110.085 89.2568 109.987 89.3418 cv
109.96 89.3652 109.931 89.3887 109.901 89.4131 cv
109.817 89.4824 109.729 89.5518 109.64 89.6201 cv
109.599 89.6523 109.562 89.6816 109.519 89.7119 cv
109.444 89.7666 109.372 89.8193 109.304 89.8691 cv
109.144 89.9844 108.999 90.0889 108.917 90.1582 cv
108.813 90.2422 107.788 90.9629 107.856 90.8281 cv
108.354 89.876 108.856 88.9238 109.354 87.9707 cv
109.64 87.4238 111.45 83.5605 112.517 81.7959 cv
112.856 81.2334 113.122 80.8789 113.237 80.9199 cv
113.134 81.2119 113.032 81.5039 112.931 81.7959 cv
cp
105.372 90.875 mo
105.446 91.1973 106.138 92.3457 105.95 92.4844 cv
105.31 92.1641 104.821 91.6426 104.567 90.9746 cv
104.157 89.8857 104.313 88.667 104.315 87.5332 cv
105.937 88.0566 106.981 86.6455 107.915 85.5684 cv
108.13 85.3232 109.136 84.5713 108.972 84.2461 cv
108.771 83.8496 108.571 83.4512 108.372 83.0547 cv
108.292 82.8936 107.923 82.2559 107.724 81.7959 cv
107.534 81.3623 107.499 81.0869 108.005 81.5234 cv
108.091 81.5967 108.185 81.6895 108.282 81.7959 cv
108.979 82.5469 109.884 84.0156 109.036 84.6738 cv
107.981 86.7793 104.745 88.1055 105.372 90.875 cv
cp
80.4189 82.8545 mo
80.1416 82.4648 79.8154 82.1182 79.4639 81.7959 cv
79.3467 81.6885 79.2383 81.5723 79.1113 81.4727 cv
78.7559 81.1924 78.2578 80.7656 77.8027 80.6924 cv
77.4336 80.6328 77.5469 80.5127 77.3496 80.4297 cv
75.3398 79.5283 72.9316 79.3076 71.6621 77.3867 cv
71.3379 76.8965 71.1289 76.3398 71.0039 75.7695 cv
70.791 74.8008 71.248 75.6904 71.3633 75.9902 cv
71.7793 77.0713 72.209 78.0254 73.2617 78.6191 cv
73.8828 78.9707 76.0215 79.417 76.4941 78.6133 cv
76.7422 78.1963 76.3223 77.583 76.1777 77.1816 cv
75.6113 75.6084 73.7754 74.5488 72.5137 73.5381 cv
72.834 73.1787 73.1563 72.8203 73.4785 72.4609 cv
73.752 73.2139 73.707 73.2012 74.4629 73.3223 cv
75.3242 73.46 76.1836 73.5977 77.0449 73.7363 cv
77.3926 73.791 78.3301 73.7637 78.6113 73.9863 cv
78.9277 74.2373 79.0957 75.3135 79.2383 75.707 cv
78.416 75.6367 76.9551 75.1025 76.2168 75.6631 cv
75.5313 76.1846 76.748 77.6191 76.7617 78.3223 cv
77.0605 79.4561 77.2734 80.4414 78.498 80.6357 cv
78.8184 80.6865 79.9033 80.6699 80.0225 80.9971 cv
80.1182 81.2637 80.2158 81.5293 80.3115 81.7959 cv
80.46 82.1992 80.6084 82.6035 80.7549 83.0068 cv
80.9014 83.4092 80.4756 82.9355 80.4189 82.8545 cv
cp
68.7109 72.6602 mo
68.5508 73.1445 67.9375 73.209 67.8301 73.5352 cv
67.584 74.2715 67.3359 75.0068 67.0918 75.7422 cv
66.6367 75.541 67.125 74.332 66.5781 73.8633 cv
66.1387 73.4863 64.8398 72.4395 66.2305 72.9688 cv
66.4043 73.0352 67.666 73.4941 67.75 73.2441 cv
67.832 73.002 67.9121 72.7578 67.9922 72.5156 cv
68.2031 71.8848 68.416 71.2539 68.625 70.625 cv
68.7598 71.2754 68.9258 72.0088 68.7109 72.6602 cv
cp
62.0762 86.125 mo
61.7188 86.9609 61.3574 87.7969 61 88.6328 cv
60.7598 89.1855 60.2305 89.9648 60.168 90.5684 cv
60.543 91.3086 60.375 92.0791 59.8828 92.7207 cv
59.7324 92.9199 58.7539 94.1055 58.5957 94.0078 cv
58.4141 93.8965 59.2559 92.2666 59.3535 92.0391 cv
59.791 91.0215 60.2988 90.5244 59.2988 89.6523 cv
58.1152 88.6133 56.5352 90.0215 55.4492 90.541 cv
55.1152 90.7002 52.4043 91.3242 52.3047 90.8389 cv
52.4395 90.6104 52.9395 90.6904 53.1582 90.6494 cv
53.8457 90.5254 55.2891 90.2266 55.3574 89.3252 cv
54.2051 89.3574 53.2109 88.7334 53.7949 87.4951 cv
54.2363 87.9365 54.8867 88.9336 55.4609 89.1563 cv
57.043 89.0908 58.6406 88.4121 59.9648 87.584 cv
61.0605 86.8984 61.8633 86.1992 62.3652 85.0342 cv
62.6777 84.3047 62.9902 83.5762 63.3047 82.8457 cv
64.1484 83.4082 62.3379 85.5156 62.0762 86.125 cv
cp
51.7754 84.4746 mo
51.6953 84.8145 51.584 85.3184 51.1484 85.3594 cv
49.7969 85.3125 48.2891 82.793 47.6016 81.915 cv
47.5605 81.8623 47.5469 81.8379 47.5156 81.7959 cv
47.1367 81.2773 47.4863 81.4951 47.8789 81.7959 cv
48.1133 81.9756 48.3516 82.1758 48.4414 82.25 cv
49.0098 82.7148 49.5859 83.1748 50.2051 83.5684 cv
50.6035 83.8223 51.4805 84.4951 51.7383 84.0195 cv
52.0391 83.4648 52.584 83.9258 52.8887 84.2109 cv
52.75 83.6846 52.2188 82.7432 51.8418 81.7959 cv
51.3691 80.6016 51.1465 79.3975 52.291 79.0078 cv
52.4316 79.9375 52.5703 80.8662 52.7109 81.7959 cv
52.8594 82.7695 53.0078 83.7432 53.1543 84.7168 cv
52.9512 84.3994 52.1387 84.5674 51.7754 84.4746 cv
cp
48.1563 90.1104 mo
45.7598 90.1104 li
45.2266 90.1104 42.4219 90.4102 42.252 89.9473 cv
46.3945 88.5732 li
46.9531 88.3887 47.293 88.3535 47.8945 88.3535 cv
48.8906 88.3535 48.7324 88.3672 48.7324 89.3516 cv
48.7324 90.0947 48.8652 90.1104 48.1563 90.1104 cv
cp
38.0469 84.9004 mo
38.3164 85.6367 38.584 86.3711 38.8516 87.1055 cv
39.0117 87.5439 39.1719 87.9824 39.3301 88.4199 cv
39.3516 88.4766 39.3379 88.8027 39.2363 88.6543 cv
38.4082 87.4531 37.5801 86.2539 36.752 85.0527 cv
37.1152 84.9805 37.4727 84.8867 37.8281 84.7871 cv
37.7441 84.5547 37.6602 84.3232 37.5762 84.0898 cv
38.5176 84.2441 39.2051 84.3467 40.1426 84.2129 cv
41.793 83.9766 43.3848 84.498 44.8574 85.21 cv
44.5938 84.3457 43.6309 82.5186 45.0469 82.1309 cv
45.2617 82.8955 45.6914 83.6777 45.6934 84.4854 cv
45.7012 85.0313 45.2246 85.1777 45.1191 85.5293 cv
44.2539 85.1035 42.9668 85.127 42.0234 84.9736 cv
40.5059 84.7285 39.5293 84.4844 38.0469 84.9004 cv
cp
20.3379 80.4121 mo
20.25 80.8672 20.2363 81.332 20.2344 81.7959 cv
20.2344 81.9893 20.2305 82.1836 20.2324 82.376 cv
20.252 83.9023 20.1738 85.3867 19.9609 86.8945 cv
19.4629 86.7764 18.9551 87.5527 18.3359 87.6426 cv
17.6406 87.7422 16.5059 87.6729 16.2246 86.9824 cv
16.0742 86.6104 16.0918 86.2363 15.6758 86.1641 cv
15.6133 86.1543 15.2617 86.1387 15.2129 86.0859 cv
15.1055 85.9688 15.25 84.4141 15.2285 84.1406 cv
14.9746 83.3076 14.7285 82.5449 14.5313 81.7959 cv
14.2129 80.5938 14.0137 79.4277 14.0859 78.0703 cv
14.6016 78.1426 13.957 80.1689 14.5723 80.2734 cv
15.3086 80.4004 16.0449 80.5254 16.7832 80.6523 cv
16.1172 80.8701 15.7363 81.2881 15.5215 81.7959 cv
15.1113 82.7705 15.3633 84.0967 15.7031 85.123 cv
15.9961 86.0078 15.9141 86.0371 16.7266 86.1758 cv
17.291 86.2715 17.8535 86.3672 18.416 86.4629 cv
18.6211 86.498 19.3789 86.7588 19.5684 86.6592 cv
20.0371 85.8896 19.8359 84.9922 19.7715 84.1387 cv
19.7285 83.5703 19.6367 82.6758 19.6816 81.7959 cv
19.7422 80.6396 20.041 79.5078 21.002 79.168 cv
21.0137 79.5186 20.4395 79.9004 20.3379 80.4121 cv
cp
121.69 86.168 mo
121.569 86.2637 120.698 87.1953 120.536 86.9395 cv
120.911 86.0313 122.444 85.1953 121.649 84.0059 cv
120.681 84.8047 119.644 84.5928 119.216 83.3936 cv
119.97 83.5273 120.724 83.6611 121.478 83.7949 cv
122.028 83.8926 122.647 82.7783 123.075 81.7959 cv
123.319 81.2354 123.501 80.7178 123.571 80.4922 cv
123.886 79.4863 124.237 78.1221 123.843 77.0977 cv
123.524 76.2715 123.204 75.4473 122.886 74.623 cv
122.835 74.4922 122.636 74.1992 122.778 74.1162 cv
123.056 73.9531 123.739 75.5781 123.823 75.8291 cv
124.087 76.6191 124.138 77.4004 124.44 78.1797 cv
124.45 78.2041 124.458 78.2275 124.468 78.252 cv
125.058 76.3145 125.597 74.3965 126.085 72.5039 cv
125.804 72.4648 125.552 72.4189 125.493 72.4023 cv
125.819 73.2412 126.015 73.3018 125.319 73.8887 cv
125.132 73.4941 124.942 73.0996 124.757 72.7051 cv
124.433 72.5811 124.161 72.4141 123.923 72.2217 cv
123.896 72.2012 123.864 72.1836 123.839 72.1621 cv
123.005 72.2168 122.144 72.3184 121.333 72.4395 cv
121.329 72.4561 121.319 72.4746 121.313 72.4912 cv
121.231 72.7461 121.011 73.042 120.901 73.2578 cv
120.63 73.7803 120.854 74.4043 120.704 75.043 cv
120.599 75.4941 120.466 75.957 120.468 76.4238 cv
120.468 76.5215 120.7 77.0938 120.69 77.127 cv
120.575 77.4922 119.37 77.8857 119.021 78.0898 cv
119.948 78.3066 119.97 78.2002 120.048 79.123 cv
120.106 79.7988 120.161 80.4746 120.22 81.1494 cv
119.659 81.0195 119.099 80.8887 118.54 80.7578 cv
118.218 80.6826 118.415 78.4219 118.644 78.1738 cv
118.505 78.1787 118.366 78.0771 118.229 78.0762 cv
118.989 76.6016 119.749 75.127 120.507 73.6523 cv
120.351 73.5791 120.106 73.6055 119.946 73.6602 cv
120.271 73.2939 120.595 72.9258 120.919 72.5586 cv
120.937 72.5381 120.956 72.5176 120.974 72.4971 cv
119.597 72.7168 118.415 72.9766 117.86 73.1045 cv
117.644 73.1543 117.349 73.2588 117.261 73.2959 cv
115.292 74.1133 113.403 74.5898 111.63 74.8301 cv
111.499 74.8477 111.368 74.8652 111.237 74.8809 cv
111.077 74.8994 110.917 74.915 110.759 74.9307 cv
110.374 74.9668 109.993 74.9961 109.62 75.0117 cv
109.142 75.6592 108.374 76.7959 108.571 76.9922 cv
108.794 77.2148 109.019 77.4395 109.243 77.6621 cv
109.825 78.2422 110.403 78.8223 110.985 79.4004 cv
111.419 79.834 113.698 76.9102 113.993 76.6045 cv
114.772 75.7949 116.31 74.457 117.565 74.8555 cv
117.466 75.1582 116.966 75.0166 116.647 75.084 cv
116.194 75.2715 115.808 75.6016 115.452 75.9277 cv
114.524 76.7754 113.722 77.752 112.753 78.5586 cv
112.257 78.9746 111.731 79.373 111.218 79.7686 cv
111.13 79.793 110.569 79.6836 110.335 79.6855 cv
109.362 79.6855 108.294 78.9219 107.901 78.0811 cv
108.233 77.2383 108.479 77.1367 107.849 76.5107 cv
108.081 76.3555 108.61 75.752 109.175 75.0293 cv
107.974 75.0547 106.845 74.9775 105.8 74.8359 cv
105.899 74.9883 105.983 75.1514 106.04 75.3301 cv
106.687 77.3564 104.716 79.3555 104.472 81.292 cv
104.45 81.4551 104.446 81.626 104.44 81.7959 cv
104.413 82.5967 104.556 83.4395 105.038 84.082 cv
104.812 84.5244 104.165 82.4902 104.165 82.2041 cv
104.165 82.0684 104.173 81.9326 104.185 81.7959 cv
104.372 79.5898 105.927 77.3096 104.892 75.1387 cv
104.825 74.999 104.683 74.8164 104.524 74.625 cv
104.054 74.5322 103.61 74.4258 103.185 74.3135 cv
103.017 74.2695 102.854 74.2236 102.694 74.1768 cv
102.472 74.1133 102.257 74.0488 102.05 73.9824 cv
101.519 73.8115 101.026 73.6357 100.597 73.4629 cv
100.593 73.4746 100.587 73.4854 100.581 73.4971 cv
99.8252 75.2314 98.4463 76.5176 99.6982 78.4678 cv
100.228 77.9385 100.761 77.4092 101.29 76.8809 cv
101.71 77.2988 102.128 77.7168 102.546 78.1348 cv
101.556 78.5957 101.054 79.4678 100.927 80.5254 cv
100.876 80.9473 100.876 81.3721 100.882 81.7959 cv
100.886 82.0078 100.888 82.2197 100.894 82.4307 cv
100.89 82.2764 100.829 83.2305 100.714 82.832 cv
100.614 82.4863 100.517 82.1416 100.417 81.7959 cv
100.124 80.7725 99.8311 79.748 99.5361 78.7246 cv
99.3154 77.9502 98.7783 77.5215 98.915 76.5547 cv
98.8525 76.1328 98.6689 75.6963 98.5518 75.2881 cv
98.2705 74.3096 97.9893 73.3301 97.71 72.3525 cv
97.6748 72.2285 97.6396 72.1055 97.6045 71.9814 cv
94.6455 70.457 91.665 70.0039 89.1768 70.0156 cv
89.2939 70.1328 89.4072 70.2314 89.5029 70.2793 cv
89.5107 70.2988 89.5166 70.3389 89.5225 70.3877 cv
89.5537 70.6719 89.5498 71.3574 89.4502 71.3574 cv
89.2295 71.3574 88.9248 70.9307 88.6357 70.3926 cv
88.5732 70.2773 88.5088 70.1572 88.4502 70.0342 cv
86.4033 70.1172 84.751 70.4785 83.8467 70.7285 cv
83.9736 70.8066 84.0889 70.9004 84.2041 70.9932 cv
84.4072 71.1563 84.5947 71.3369 84.7236 71.5625 cv
84.835 71.7578 84.833 71.9785 84.9893 72.1357 cv
86.3252 73.4668 li
86.7529 73.8926 85.5576 74.6436 85.2529 75.0391 cv
84.8232 75.5996 84.6572 76.25 84.9229 76.9229 cv
84.4033 76.9229 83.1104 77.2314 83.1104 76.5869 cv
83.124 75.0918 84.4912 74.0488 84.7334 72.627 cv
84.835 72.0371 84.2881 71.541 83.7842 71.1123 cv
83.6748 71.0186 83.5635 70.9268 83.4639 70.8398 cv
83.3994 70.8594 83.3408 70.8779 83.292 70.8936 cv
83.1553 70.9385 82.9365 71.0586 82.8643 71.1025 cv
79.4521 73.1992 76.0938 71.8633 74.8672 71.2334 cv
74.6582 71.2197 74.4453 71.2227 74.2344 71.2217 cv
74.1348 71.2217 74.041 71.2119 73.9395 71.2168 cv
73.3867 71.2441 72.834 71.248 72.2813 71.291 cv
71.7422 71.334 71.5293 71.1934 71.5332 71.7627 cv
71.5059 72.6406 70.875 71.7471 70.7344 71.4414 cv
71.4531 71.4209 71.2988 70.959 71.1348 70.4658 cv
71.1113 70.4023 71.0898 70.3389 71.0703 70.2754 cv
71.0527 70.2188 71.0234 70.1641 71.0059 70.1084 cv
68.9922 69.8789 66.9375 70.0771 65.0195 70.4912 cv
65.6934 71.1631 li
65.9766 71.4453 65.7598 71.9824 65.7207 72.3555 cv
65.2227 71.916 64.7305 71.4736 64.2363 71.0313 cv
64.1328 70.9385 64.0293 70.8467 63.9258 70.7539 cv
61.6621 71.3457 59.6543 72.1836 58.2285 72.8652 cv
58.3535 73.0254 58.498 73.166 58.6348 73.3174 cv
58.8008 73.5029 58.9551 73.6982 59.1309 73.8721 cv
59.5977 74.2168 60.002 74.6348 60.3809 75.0723 cv
60.6172 75.3457 61.0039 76.0664 61.3379 76.168 cv
61.1289 75.5859 62.2207 72.9473 62.0488 72.8223 cv
61.7031 72.5742 61.3594 72.3262 61.0156 72.0781 cv
60.9492 72.0293 60.8809 71.9814 60.8125 71.9326 cv
61.0254 71.9199 61.2363 71.9082 61.4473 71.8955 cv
61.9512 71.8662 62.4551 71.8379 62.957 71.8086 cv
62.8184 71.9844 62.1914 72.7227 62.3691 72.8496 cv
62.5977 73.0127 62.8223 73.1768 63.0508 73.3398 cv
62.7051 73.748 61.8945 74.2939 61.7656 74.8076 cv
61.7656 75.2012 61.8359 75.5918 61.9648 75.9629 cv
62.1445 76.4814 62.3574 76.373 62.8555 76.4199 cv
64.3613 76.5625 66.1836 76.6816 66.9277 78.2402 cv
66.7988 78.3379 65.9961 77.373 65.6641 77.2207 cv
64.9844 76.9121 64.2246 76.8613 63.5059 76.6914 cv
63.5059 76.9766 63.3594 77.7061 63.5059 77.9795 cv
64.0527 78.3975 64.6602 78.7305 65.3008 78.9863 cv
65.2715 79.1719 65.2695 79.1475 65.084 79.1582 cv
63.918 79.2256 62.752 79.291 61.584 79.3594 cv
61.9258 79.0254 62.2656 78.6895 62.6074 78.3555 cv
62.8125 78.1533 61.3633 76.582 61.1133 76.2578 cv
60.9473 76.207 60.6172 75.624 60.4883 75.4658 cv
60.1191 75.0488 59.7129 74.6699 59.3145 74.2852 cv
58.9844 73.9688 58.6094 73.7256 58.2051 73.5527 cv
57.9316 73.4355 57.6445 73.3457 57.3418 73.3066 cv
57.1895 73.3848 57.0488 73.459 56.9199 73.5283 cv
56.3418 73.8379 55.5957 74.5234 55.3828 74.7441 cv
55.0957 75.041 54.8047 75.3125 54.5117 75.5625 cv
54.5508 75.6211 54.5879 75.668 54.6133 75.6885 cv
54.6309 75.7021 54.6504 75.7119 54.6699 75.7256 cv
55.1641 76.0957 55.7832 76.2734 56.3516 76.5 cv
57.1211 76.8047 56.459 77.6084 56.2207 78.2725 cv
55.9941 78.8984 56.9844 79.1348 57.3828 79.2783 cv
58.1953 79.5693 59.0078 79.8613 59.8184 80.1523 cv
60.4902 80.3936 60.1699 80.5908 59.9316 81.25 cv
59.8574 81.4561 59.7656 81.6348 59.6895 81.7959 cv
59.5234 82.1543 59.4551 82.4102 59.9512 82.5879 cv
60.5488 82.8018 61.1445 83.0156 61.7422 83.2285 cv
60.3711 83.873 li
60.4414 83.957 60.4961 84.0518 60.5332 84.1543 cv
60.5332 84.4199 60 83.9668 59.9277 83.8945 cv
59.9922 83.8633 60.0566 83.833 60.123 83.8018 cv
59.5957 83.127 59.0527 82.4629 58.5137 81.7959 cv
58.2188 81.4316 57.9219 81.0684 57.6348 80.6973 cv
57.209 80.1475 56.8008 79.2461 56.1367 79.0068 cv
55.8125 78.8906 55.7305 78.791 55.9766 78.4482 cv
55.498 77.7559 54.8066 76.8682 54.3262 75.9697 cv
54.2969 75.9141 54.2598 75.8584 54.2305 75.8027 cv
51.0664 78.3398 47.6445 78.2305 45.1367 77.5762 cv
45.1035 77.6318 45.0684 77.6826 45.0332 77.7363 cv
44.7031 78.248 44.3398 78.7002 44.1543 78.8945 cv
43.9395 79.1211 41.9512 81.1006 41.0469 81.7959 cv
40.8223 81.9707 40.6602 82.0674 40.6152 82.0322 cv
40.6797 81.9502 40.7539 81.875 40.8223 81.7959 cv
41.4824 81.0166 42.291 80.3594 43.0137 79.6387 cv
43.6582 78.9961 43.8984 79.0566 43.2559 78.4131 cv
42.9551 78.1113 42.6543 77.8096 42.3516 77.5078 cv
42.127 77.2813 41.6953 77.6406 41.3828 77.6445 cv
40.9668 77.6445 41.7734 77.0527 42.3164 76.6895 cv
42.3711 76.6523 42.4258 76.6162 42.4746 76.585 cv
42.1602 76.4307 41.9102 76.292 41.7344 76.1904 cv
41.5469 76.082 41.2461 75.9268 41.2461 75.9268 cv
39.8555 75.3203 li
39.7852 75.3906 39.7148 75.46 39.6445 75.5293 cv
39.332 75.8418 39.0215 76.1543 38.707 76.4668 cv
37.6836 77.4893 36.7012 78.6016 35.6191 79.5566 cv
36.3691 79.709 37.1035 80.9619 37.1074 81.6553 cv
37.1074 81.6963 37.1094 81.7441 37.1152 81.7959 cv
37.1426 82.1406 37.2324 82.6621 36.959 82.6621 cv
36.793 82.5234 36.7891 82.165 36.7793 81.7959 cv
36.7676 81.4316 36.752 81.0576 36.5645 80.8711 cv
36.1875 80.4951 35.8105 80.1191 35.4336 79.7441 cv
34.5898 80.71 33.5 81.332 32.3301 81.7959 cv
32.0703 81.8984 31.8105 82.0029 31.543 82.0908 cv
30.8438 82.3232 30.1328 82.5215 29.4355 82.7559 cv
28.9629 82.9141 28.9297 82.8066 29.2051 82.5313 cv
29.3125 82.4238 29.6855 82.1064 29.9961 81.7959 cv
30.2949 81.501 30.5352 81.2129 30.4414 81.1191 cv
29.9375 80.6152 29.4336 80.1104 28.9277 79.6064 cv
30.0137 78.9023 31.0254 77.8691 31.584 76.7129 cv
32.3379 75.1582 32.1777 73.5605 32.1621 71.8945 cv
32.1621 71.8223 32.1602 71.75 32.1602 71.6768 cv
32.2227 71.6064 32.2754 71.751 32.3184 71.9727 cv
32.4082 72.4326 32.4551 73.2568 32.4551 73.3887 cv
32.4551 74.1855 32.3828 74.8047 32.8516 75.498 cv
33.0352 75.7695 33.9277 76.3164 33.8086 76.5215 cv
33.1016 76.29 32.4648 76.5244 31.9082 76.9805 cv
31.4902 77.3223 30.6289 78.0723 30.6289 78.6367 cv
30.623 79.4141 31.2246 80.0117 31.7266 80.5293 cv
32.0859 80.8994 32.123 81.1719 32.668 81.043 cv
33.0508 80.9541 33.4199 80.8164 33.7695 80.6426 cv
34.3633 80.3496 34.9766 79.9531 35.4453 79.4844 cv
36.7715 78.1602 38.0098 76.6748 39.4219 75.4287 cv
39.4961 75.3633 39.5664 75.291 39.6406 75.2266 cv
37.4727 74.2793 li
37.25 74.1602 li
33.1816 72.207 li
33.1816 72.207 32.8828 72.0508 32.8379 72.0225 cv
30.2969 70.4492 27.9941 69.9541 26.0195 70.0361 cv
26.0156 70.0791 26.0176 70.123 26.0117 70.166 cv
26.0059 70.2656 26.0332 70.3496 26.0547 70.4365 cv
26.1602 70.8398 26.5332 71.1279 26.8672 71.4219 cv
28.1445 72.5449 30.2539 74.1758 28.5957 75.8301 cv
27.9141 76.5078 27.3027 77.3066 26.5723 77.9219 cv
25.8496 78.5313 26.041 78.4746 26.6934 79.127 cv
26.9824 79.4141 27.2676 79.6982 27.5527 79.9844 cv
27.6348 80.0654 26.7754 80.8721 26.6758 80.9805 cv
26.3574 81.3213 26.1875 81.5459 26.1328 81.7959 cv
26.0801 82.0391 26.1387 82.3047 26.2852 82.7236 cv
26.5508 83.4746 26.7168 83.9453 27.2773 84.5234 cv
29.0156 86.3203 31.8516 89.2285 34.4668 87.2109 cv
34.7422 86.9902 34.9785 86.7012 35.2285 86.4531 cv
35.3496 86.334 35.5234 86.3984 35.4883 86.4316 cv
35.5371 86.6699 34.252 87.667 34.0039 87.9141 cv
35.7891 88.3223 34.1309 88.5059 33.2559 88.4346 cv
32.2344 88.3516 31.2129 88.1914 30.2227 87.9297 cv
29.2871 87.6816 28.168 87.3398 27.5156 86.5742 cv
27.1406 86.1328 27.0059 85.3604 26.8203 84.8174 cv
26.5801 84.1035 26.3242 83.75 25.7949 83.2188 cv
25.6172 82.7021 25.7012 82.2666 25.6621 81.7959 cv
25.6445 81.6016 25.6113 81.4014 25.5215 81.1855 cv
25.2734 80.582 24.9961 79.9863 24.6777 79.416 cv
24.0625 78.3115 23.2773 77.2871 22.25 76.5342 cv
21.5488 76.0215 21.7148 77.0254 21.0801 76.9443 cv
20.9609 76.9297 20.6836 76.5479 20.6055 76.4697 cv
20.1543 76.0176 19.7031 75.5654 19.252 75.1133 cv
19.7813 75.2129 20.3008 75.3496 20.8027 75.5488 cv
21.5801 75.8574 21.8906 76.3926 22.4082 75.4951 cv
23.1289 74.2422 21.9277 72.9863 21.2754 71.9453 cv
21.2578 71.9189 21.2383 71.8906 21.2227 71.8652 cv
21.1895 71.8232 21.1133 71.7129 21.0137 71.5664 cv
20.6055 71.8115 20.2617 72.0557 19.957 72.2861 cv
17.0195 74.2656 li
17.0117 74.4033 17.002 74.5391 16.9961 74.665 cv
16.9902 74.7988 16.9902 74.9209 17 75.0176 cv
17.0918 75.7813 17.4512 76.4199 18.127 76.8174 cv
17.4453 77.3623 16.9863 78.2295 16.375 77.3135 cv
15.998 76.7529 15.8184 76.1133 15.6504 75.4688 cv
15.6113 75.3203 15.5723 75.1729 15.5332 75.0254 cv
10.9453 77.373 li
9.66016 77.916 li
9.66992 77.9434 9.67578 77.9727 9.68555 78.001 cv
9.77344 78.2266 li
11.1484 81.7959 li
11.3066 82.2051 li
11.4277 82.5137 12.125 82.8027 12.3438 83.1699 cv
12.6191 83.6348 12.6934 84.1758 12.7148 84.707 cv
12.7324 85.1611 12.834 86.6309 12.4238 85.5625 cv
12.1172 84.7705 11.8105 83.9785 11.5078 83.1855 cv
11.3301 82.7285 11.1484 82.4258 10.8574 82.2373 cv
11.7813 84.9766 12.8164 87.752 13.9668 90.5596 cv
14.5508 90.6357 15.0742 90.6582 15.7422 90.5684 cv
16.6602 90.4443 17.541 90.5439 18.3848 90.8047 cv
18.9551 90.6582 19.5527 90.5352 20.1719 90.4375 cv
20.2266 89.5703 20.4199 88.7559 21.4316 88.4805 cv
21.375 89.0781 21.4199 89.6865 21.3379 90.2813 cv
21.7949 90.2373 22.2578 90.1982 22.7344 90.1875 cv
22.7363 90.1875 22.7363 90.1875 22.7422 90.1875 cv
24.6914 90.1465 26.8164 90.4102 29.0684 91.1387 cv
28.9336 90.7441 28.7617 90.3896 28.3945 90.0508 cv
27.9102 89.6035 27.2969 89.1475 26.6504 89.4248 cv
26.1992 89.6201 25.7656 89.8535 25.3086 90.0313 cv
25.2598 89.873 25.166 89.2158 25.0371 89.1426 cv
24.6445 89.2051 24.2598 89.3145 23.8867 89.4453 cv
24.1563 88.7832 24.4277 88.1211 24.6973 87.458 cv
24.8594 87.9922 24.8848 88.9639 25.4863 88.9238 cv
26.125 88.8809 26.75 89.127 27.3574 89.0264 cv
27.8984 88.9365 28.3809 89.1172 28.7559 89.5166 cv
28.9531 90.1611 29.2246 90.6865 29.4863 91.2793 cv
29.6094 91.3223 29.7305 91.3633 29.8535 91.4092 cv
30.4023 91.1348 30.9492 90.8613 31.4941 90.5859 cv
31.3223 91.0117 31.1484 91.4355 30.9766 91.8594 cv
32.8125 92.6553 34.7207 93.7705 36.6758 95.3008 cv
37.7695 93.9014 38.8613 92.502 39.9551 91.1035 cv
40.3887 92.2793 41.0781 93.4414 42.3613 93.8018 cv
43 93.9795 45.8223 94.1563 45.5605 93.2529 cv
46.3555 93.3877 47.1641 93.4883 47.9512 93.6582 cv
47.8203 93.9258 46.1406 93.8008 45.7285 93.8594 cv
45.5586 94.0605 45.7285 95.1113 45.7285 95.3867 cv
45.7285 95.7793 45.5547 95.4746 45.4824 95.2529 cv
45.3672 94.8906 45.1465 94.5732 44.8203 94.3711 cv
44.0938 93.9199 42.9609 94.0273 42.1523 94.1729 cv
40.8809 94.4023 39.6465 94.8301 38.4395 95.2773 cv
38.0527 95.4199 37.5996 95.541 37.168 95.7012 cv
37.291 95.8018 37.4141 95.8975 37.5371 95.998 cv
37.5781 96.0322 37.7559 96.1387 37.9375 96.2012 cv
39.4238 96.7148 46.7031 98.8965 55.6348 95.8945 cv
54.9727 95.7949 54.3965 95.7012 53.7832 96.0859 cv
53.6699 95.4932 53.7891 94.6699 53.0859 94.6768 cv
51.7832 94.6885 50.4629 95.4043 49.2754 94.5156 cv
49.1934 94.2402 50.2031 94.71 50.3008 94.7422 cv
50.8398 94.7891 51.3652 94.4551 51.8027 94.1914 cv
52.7168 93.6416 52.6719 93.8086 53.4609 94.4277 cv
54.2949 95.082 56.1387 94.043 56.9863 93.7676 cv
57.4629 93.6133 57.8535 94.2773 58.1641 94.916 cv
59.6602 94.2617 61.1875 93.4541 62.7324 92.4639 cv
62.3672 91.9951 62 91.5293 61.6816 91.0273 cv
62.2266 91.1738 62.8594 91.7793 63.3125 92.082 cv
64.0957 91.5566 64.8809 90.9922 65.668 90.3691 cv
65.668 90.3691 65.7676 90.2979 65.9473 90.1787 cv
65.8359 90.0586 65.7324 89.9453 65.6641 89.8496 cv
65.1895 89.2061 64.7246 88.5088 64.5098 87.7305 cv
64.1191 86.3125 65.0781 85.3232 66.2773 84.7246 cv
66.5508 86.3086 66.8262 87.8945 67.0996 89.4785 cv
67.6777 89.1523 68.3984 88.7783 69.2168 88.4277 cv
69.1309 87.7715 69.4961 87.1758 69.8984 86.6777 cv
70.2266 86.2705 70.5957 85.8965 70.9473 85.5078 cv
71.373 85.0361 70.8555 84.3906 70.666 83.8281 cv
70.3418 82.8652 70.3066 82.0869 69.1016 82.0869 cv
67.5664 82.0869 li
67.5977 81.9902 67.6309 81.8926 67.6641 81.7959 cv
68.0996 80.4912 68.5371 79.1875 68.9746 77.8828 cv
69.2598 77.0332 69.332 77.0488 69.5117 78.082 cv
69.6719 79.0059 69.8359 79.9287 70.0371 80.8457 cv
70.1055 81.1641 70.1855 81.4795 70.2637 81.7959 cv
70.3027 81.9561 70.3359 82.1182 70.3789 82.2773 cv
70.6445 82.3809 70.9023 82.5029 71.1484 82.6455 cv
71.5996 82.9141 72.0449 83.3115 72.0508 83.877 cv
72.0391 84.5117 71.2754 85.0059 71.5195 85.5371 cv
71.8184 86.1846 72.1738 86.8086 72.5801 87.3975 cv
73.6074 87.2178 74.6621 87.1748 75.6816 87.3623 cv
75.7852 87.3818 76.1953 87.4336 76.3477 87.4258 cv
76.5117 87.418 76.9648 87.3398 76.9648 87.3398 cv
79.1426 86.8496 li
78.8027 86.8418 78.4512 86.8418 78.0879 86.8984 cv
77.1738 87.041 76.3477 86.8027 75.4551 86.623 cv
75.5117 86.3506 75.8867 84.2461 75.9824 84.2656 cv
76.9824 84.4668 77.498 84.3262 77.8789 85.2686 cv
77.9805 85.5254 78.1133 86.2148 78.3301 86.3926 cv
79.1699 86.7695 80.1338 85.9609 80.7803 85.4268 cv
81.4756 84.8535 82.4287 84.0938 82.7061 83.2266 cv
82.8604 82.752 83.0264 82.2588 83.2451 81.7959 cv
83.415 81.4375 83.6143 81.0957 83.8799 80.8037 cv
83.2861 80.6836 82.6924 80.5654 82.1006 80.4453 cv
81.8525 80.3955 81.665 80.2715 81.9814 80.1758 cv
83.2178 79.8047 84.4502 79.4336 85.6846 79.0625 cv
86.7275 78.749 87.7705 78.4355 88.8135 78.1221 cv
89.3623 77.957 89.874 77.7402 90.4443 77.6309 cv
90.5342 77.7793 90.4717 77.7988 90.3389 77.8379 cv
89.8291 77.9922 89.3174 78.1455 88.8096 78.2988 cv
87.0967 79.0254 85.7295 80.3154 84.5049 81.6797 cv
84.4697 81.7178 84.4365 81.7578 84.4033 81.7959 cv
83.8389 82.4277 83.2959 83.0752 82.7354 83.709 cv
82.5283 84.3789 82.3213 85.0635 81.9756 85.6797 cv
81.8252 85.9521 81.6631 86.1582 81.4932 86.3203 cv
82.1338 86.1777 li
85.9131 84.4102 li
85.9131 84.4102 86.2939 84.6963 86.9658 85.2266 cv
86.9346 85.1641 86.9014 85.1025 86.8701 85.04 cv
86.7139 84.7266 85.458 82.6133 86.5029 83.5117 cv
87.0205 83.957 87.8994 85.0996 87.874 85.9551 cv
88.2119 86.2285 88.5791 86.5293 88.9873 86.8672 cv
89.8291 85.6113 90.6787 84.3594 91.4893 83.082 cv
91.5928 82.6523 91.6982 82.2236 91.8076 81.7959 cv
92.0713 80.7637 92.3623 79.7393 92.7588 78.7461 cv
93.0693 77.9639 93.4404 77.2041 93.8857 76.4883 cv
94.1084 76.1279 94.4209 75.8135 94.5674 75.4375 cv
94.3662 75.415 93.7412 75.3965 93.6748 75.3945 cv
93.1807 75.375 93.5967 75.001 93.2979 74.7783 cv
93.0381 74.583 92.1221 74.6602 91.8096 74.6279 cv
90.8389 74.5313 89.8682 74.4336 88.8994 74.3359 cv
88.8115 74.3281 87.6357 74.2979 87.8604 74.0635 cv
88.0205 73.8965 89.3662 74.123 89.5908 74.1328 cv
90.4873 74.168 91.3818 74.2031 92.2764 74.2393 cv
92.5479 74.25 93.2646 74.4336 93.3877 74.1484 cv
93.667 73.5059 93.9482 72.8633 94.2256 72.2207 cv
94.5049 72.9004 94.7041 73.6055 94.7803 74.3379 cv
94.9443 74.4609 95.5752 74.3691 95.792 74.377 cv
95.3447 74.8057 94.8428 75.2021 94.7803 75.8301 cv
94.7158 76.4863 94.5713 77.1348 94.374 77.7656 cv
93.9287 79.1855 93.2295 80.5166 92.4756 81.7959 cv
92.4717 81.8047 92.4658 81.8125 92.4619 81.8213 cv
91.9561 82.6758 91.6299 83.3545 91.3643 84.3047 cv
91.2119 84.8516 91.0381 85.4043 90.7627 85.9043 cv
90.4131 86.5469 89.8701 86.9512 89.165 87.0176 cv
89.9033 87.6309 90.7373 88.3379 91.6533 89.1387 cv
91.7314 88.9463 91.8076 88.7559 91.8838 88.5723 cv
92.6514 86.7012 93.6904 85.0371 95.8662 84.6006 cv
96.2588 84.7041 96.7783 85.5742 97.0635 85.8975 cv
97.29 86.1563 96.3389 85.8105 96.2939 85.7998 cv
95.6982 85.6504 95.0889 85.7266 94.5322 85.9883 cv
94.0225 86.2266 92.5361 87.0332 92.5361 87.665 cv
92.5361 89.4678 li
93.249 88.9629 93.585 89.0352 92.8779 89.6943 cv
92.7822 89.7842 92.6709 89.8584 92.5713 89.9453 cv
93.9658 91.1855 95.5049 92.6035 97.1104 94.1631 cv
98.0029 93.8066 98.8955 93.4502 99.7861 93.0938 cv
99.4697 92.7793 98.2861 91.9531 98.2295 91.5371 cv
98.1729 91.1133 101.673 88.6143 101.218 88.1602 cv
100.194 87.1387 99.1709 86.1162 98.1475 85.0938 cv
99.1494 85.0938 100.743 84.8076 101.614 85.1543 cv
101.929 86.1543 101.909 87.1953 101.437 88.1426 cv
101.345 88.4297 101.808 88.2031 101.448 88.5596 cv
100.806 89.2031 100.161 89.8438 99.5166 90.4863 cv
99.3428 90.6602 98.3604 91.4277 98.5557 91.625 cv
99.0674 92.1348 99.5771 92.6445 100.087 93.1543 cv
99.5479 93.5391 98.9502 94.2031 98.6006 94.7793 cv
98.5283 94.8975 98.4834 95.1504 98.4463 95.4199 cv
98.9854 95.1729 105.036 92.4336 112.938 90.4473 cv
112.892 90.0596 112.948 89.6621 113.3 89.416 cv
113.925 88.9805 114.724 89.9063 115.106 89.1719 cv
115.403 88.5996 115.479 87.9463 115.481 87.3105 cv
115.483 85.4521 114.999 83.5693 115.403 81.7959 cv
115.53 81.2393 115.739 80.6934 116.083 80.1621 cv
116.284 80.7061 116.483 81.251 116.681 81.7959 cv
116.782 82.0732 116.882 82.3506 116.985 82.627 cv
115.04 82.9922 115.292 84.6631 115.868 86.1035 cv
116.313 87.2148 116.952 88.3145 117.368 89.4658 cv
118.472 89.2559 119.603 89.0811 120.741 88.9248 cv
121.124 87.9561 121.495 86.9902 121.851 86.0283 cv
121.798 86.0752 121.751 86.1318 121.69 86.168 cv
cp
f
9.49219 77.9863 mo
9.50391 78.0244 li
9.54688 78.1621 9.59375 78.3018 9.63672 78.4395 cv
9.63672 78.4395 9.63672 78.4395 9.63867 78.4395 cv
9.5918 78.2891 9.53711 78.1357 9.49219 77.9863 cv
cp
0 0 0 .6 cmyk
f
123.962 60.541 mo
119.821 59.5098 115.224 58.8613 110.966 59.5938 cv
107.735 54.9355 102.915 58.4912 99.1143 59.5762 cv
94.6533 60.8486 89.5049 59.8916 85.1865 58.4512 cv
79 56.3896 68.1504 54.5742 63.8262 61.3252 cv
63.6543 61.5957 56.0703 59.4229 55.0977 59.248 cv
51.9102 58.6768 48.6719 58.3486 45.4316 58.3691 cv
42.7773 58.3857 39.9102 58.5215 37.3613 59.3555 cv
34.1855 60.3936 31.8301 61.9824 28.3066 61.8184 cv
26.5332 61.7363 24.6602 61.3311 23.1074 60.4365 cv
18.8691 57.9941 15.0703 58.6104 10.5215 59.4336 cv
10.1543 59.499 7.17578 60.0205 5.50781 60.5313 cv
5.49023 60.5371 5.47656 60.542 5.45898 60.5479 cv
6.36328 66.1055 7.66602 71.9414 9.49219 77.9863 cv
9.66016 77.916 li
10.9453 77.373 li
15.5332 75.0254 li
17.0195 74.2656 li
19.957 72.2861 li
20.2617 72.0557 20.6055 71.8115 21.0137 71.5664 cv
21.0723 71.5322 21.127 71.498 21.1875 71.4629 cv
22.3887 70.7734 23.9922 70.1387 25.9141 70.04 cv
25.9492 70.0381 25.9844 70.0381 26.0195 70.0361 cv
27.9941 69.9541 30.2969 70.4492 32.8379 72.0225 cv
32.8828 72.0508 33.1816 72.207 33.1816 72.207 cv
37.25 74.1602 li
37.4727 74.2793 li
39.6406 75.2266 li
39.8555 75.3203 li
41.2461 75.9268 li
41.2461 75.9268 41.5469 76.082 41.7344 76.1904 cv
41.9102 76.292 42.1602 76.4307 42.4746 76.585 cv
43.123 76.9043 44.041 77.29 45.1367 77.5762 cv
47.6445 78.2305 51.0664 78.3398 54.2305 75.8027 cv
54.3242 75.7285 54.418 75.6426 54.5117 75.5625 cv
54.8047 75.3125 55.0957 75.041 55.3828 74.7441 cv
55.5957 74.5234 56.3418 73.8379 56.9199 73.5283 cv
57.0488 73.459 57.1895 73.3848 57.3418 73.3066 cv
57.6035 73.1719 57.9004 73.0234 58.2285 72.8652 cv
59.6543 72.1836 61.6621 71.3457 63.9258 70.7539 cv
64.2852 70.6602 64.6504 70.5713 65.0195 70.4912 cv
66.9375 70.0771 68.9922 69.8789 71.0059 70.1084 cv
72.1543 70.2383 73.2891 70.5049 74.375 70.957 cv
74.375 70.957 74.5547 71.0742 74.8672 71.2334 cv
76.0938 71.8633 79.4521 73.1992 82.8643 71.1025 cv
82.9365 71.0586 83.1553 70.9385 83.292 70.8936 cv
83.3408 70.8779 83.3994 70.8594 83.4639 70.8398 cv
83.5732 70.8066 83.6963 70.7695 83.8467 70.7285 cv
84.751 70.4785 86.4033 70.1172 88.4502 70.0342 cv
88.6904 70.0254 88.9268 70.0176 89.1768 70.0156 cv
91.665 70.0039 94.6455 70.457 97.6045 71.9814 cv
97.8096 72.0859 98.0146 72.1777 98.2217 72.2959 cv
98.2217 72.2959 99.0811 72.8516 100.597 73.4629 cv
101.026 73.6357 101.519 73.8115 102.05 73.9824 cv
102.257 74.0488 102.472 74.1133 102.694 74.1768 cv
102.854 74.2236 103.017 74.2695 103.185 74.3135 cv
103.61 74.4258 104.054 74.5322 104.524 74.625 cv
104.933 74.7051 105.358 74.7764 105.8 74.8359 cv
106.845 74.9775 107.974 75.0547 109.175 75.0293 cv
109.321 75.0254 109.47 75.0186 109.62 75.0117 cv
109.993 74.9961 110.374 74.9668 110.759 74.9307 cv
110.917 74.915 111.077 74.8994 111.237 74.8809 cv
111.368 74.8652 111.499 74.8477 111.63 74.8301 cv
113.403 74.5898 115.292 74.1133 117.261 73.2959 cv
117.349 73.2588 117.644 73.1543 117.86 73.1045 cv
118.415 72.9766 119.597 72.7168 120.974 72.4971 cv
121.095 72.4785 121.21 72.459 121.333 72.4395 cv
122.144 72.3184 123.005 72.2168 123.839 72.1621 cv
124.378 72.127 124.901 72.1152 125.396 72.1309 cv
125.665 72.1387 125.917 72.1631 126.165 72.1914 cv
127.065 68.6563 127.774 65.2148 128.356 61.8604 cv
128.343 61.8535 128.335 61.8467 128.321 61.8398 cv
127.261 61.2646 124.55 60.6865 123.962 60.541 cv
cp
1 /0 /CSD get_res sepcs
.35 sep
f
13.916 90.4287 mo
13.9336 90.4727 13.9492 90.5156 13.9668 90.5596 cv
13.9629 90.5488 13.959 90.5391 13.9551 90.5283 cv
13.9414 90.4951 13.9297 90.4619 13.916 90.4287 cv
cp
0 0 0 1 cmyk
f
69.6621 27.8516 mo
69.5977 31.5664 69.3398 34.7422 67.1797 37.917 cv
64.793 41.3965 61.2148 42.918 57.1504 42.918 cv
49.5098 42.918 44.1914 37.4766 44.1914 29.4717 cv
44.1914 21.1934 49.543 15.7559 57.377 15.7559 cv
62.375 15.7559 66.2461 18.1211 68.3379 22.8828 cv
62.3418 25.5195 li
61.4727 23.0879 59.6367 21.4668 57.0898 21.4668 cv
52.9277 21.4668 50.7676 25.6191 50.7676 29.5059 cv
50.7676 33.459 53.0254 37.4766 57.1855 37.4766 cv
59.9238 37.4766 62.0215 35.9912 62.2773 33.0537 cv
57.1191 33.0537 li
57.1191 27.8516 li
69.6621 27.8516 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
80.1846 27.8906 mo
80.1846 33.1875 li
72.7969 33.1875 li
72.7969 27.8906 li
80.1846 27.8906 li
cp
f
89.8564 28.9814 mo
89.8564 42.0723 li
83.5361 42.0723 li
83.5361 28.8145 li
83.5361 16.6016 li
89.8564 16.6016 li
89.8564 28.9814 li
cp
f
66.6484 125.746 mo
65.9082 125.531 li
65.4023 125.375 64.6113 125.133 64.6113 124.509 cv
64.6113 123.91 65.3242 123.61 65.8633 123.61 cv
66.5742 123.61 67.2617 123.896 67.8008 124.321 cv
68.9609 122.16 li
67.9609 121.619 66.5742 121.275 65.4473 121.275 cv
63.2012 121.275 61.5781 122.701 61.5781 124.877 cv
61.5781 126.956 62.7813 127.41 64.6113 127.908 cv
65.2363 128.078 66.3848 128.35 66.3848 129.133 cv
66.3848 129.887 65.6543 130.215 64.9688 130.215 cv
63.9727 130.215 63.1094 129.717 62.3809 129.104 cv
61.1328 131.354 li
62.2773 132.122 63.6602 132.577 65.0762 132.577 cv
66.2051 132.577 67.3828 132.278 68.2598 131.567 cv
69.1523 130.838 69.418 129.744 69.418 128.68 cv
69.418 126.939 68.2129 126.186 66.6484 125.746 cv
cp
0 0 0 0 cmyk
f
71.1426 123.013 mo
70.0762 124.066 69.498 125.476 69.498 126.939 cv
69.498 128.536 70.0566 129.931 71.2949 130.999 cv
72.457 132.008 73.9434 132.577 75.5059 132.577 cv
76.4121 132.577 77.1152 132.366 78.082 132.08 cv
78.0781 132.025 li
76.8008 129.625 li
76.4063 129.779 75.9863 129.872 75.5645 129.872 cv
73.75 129.872 72.5254 128.649 72.5254 126.956 cv
72.5254 125.289 73.7363 123.98 75.5195 123.98 cv
75.9531 123.98 76.3789 124.063 76.7793 124.217 cv
78.082 121.846 li
78.082 121.815 li
77.2188 121.475 76.3535 121.275 75.4141 121.275 cv
73.8398 121.275 72.248 121.931 71.1426 123.013 cv
cp
f
58.1875 132.291 mo
58.0762 132.306 61.2852 132.27 61.2852 132.27 cv
57.0742 121.582 li
53.9063 121.573 li
51.4609 127.58 li
54.5039 127.539 li
55.4805 124.684 li
56.4844 127.716 li
58.2129 128.125 li
58.2637 128.35 li
58.2637 128.35 52.9941 127.59 49.2598 128.599 cv
49.2773 128.682 li
49.2773 128.682 55.0723 127.844 58.3984 129.048 cv
58.4297 129.215 li
58.4297 129.215 53.7852 128.363 49.4453 129.508 cv
49.4688 129.619 49.4688 129.634 49.4688 129.634 cv
49.4688 129.634 53.9688 128.682 58.5918 129.912 cv
58.5977 129.952 li
58.627 130.105 li
58.627 130.105 55.1738 129.257 49.627 130.401 cv
49.6523 130.524 li
49.6523 130.524 49.9824 130.482 50.3203 130.466 cv
49.5703 132.291 li
52.666 132.291 li
53.4375 130.429 li
53.4375 130.429 55.748 130.101 57.5039 130.494 cv
58.1875 132.291 li
cp
f
81.3252 123.926 mo
81.3252 125.718 li
84.6143 125.718 li
84.6143 128.078 li
81.3252 128.078 li
81.3252 129.931 li
84.7881 129.931 li
84.7881 132.291 li
78.4082 132.291 li
78.4082 121.564 li
84.7881 121.564 li
84.7881 123.926 li
81.3252 123.926 li
cp
f
110.483 88.5225 mo
110.466 88.5605 110.452 88.6006 110.435 88.6338 cv
110.44 88.6201 110.448 88.6113 110.456 88.5967 cv
110.466 88.5752 110.474 88.5459 110.483 88.5225 cv
cp
0 0 0 .9 cmyk
f
110.583 88.2422 mo
110.628 88.0947 110.669 87.9492 110.706 87.8418 cv
110.669 87.9492 110.628 88.0947 110.583 88.2422 cv
cp
f
110.183 89.0313 mo
110.167 89.0527 110.149 89.0742 110.13 89.0967 cv
110.142 89.084 110.161 89.0693 110.171 89.0566 cv
110.177 89.0469 110.175 89.04 110.183 89.0313 cv
cp
f
109.901 89.4131 mo
109.817 89.4824 109.729 89.5518 109.64 89.6201 cv
109.729 89.5518 109.817 89.4824 109.901 89.4131 cv
cp
0 0 0 1 cmyk
f
110.229 89.0977 mo
110.163 89.1758 110.085 89.2568 109.987 89.3418 cv
110.085 89.2568 110.163 89.1758 110.229 89.0977 cv
cp
f
109.519 89.7119 mo
109.444 89.7676 109.372 89.8193 109.304 89.8691 cv
109.372 89.8193 109.444 89.7666 109.519 89.7119 cv
cp
f
110.37 88.8359 mo
110.37 88.8916 110.331 88.96 110.282 89.0313 cv
110.333 88.96 110.37 88.8926 110.37 88.8359 cv
cp
f
110.534 88.6338 mo
110.522 88.6563 110.511 88.6748 110.499 88.6943 cv
110.511 88.6748 110.522 88.6563 110.534 88.6338 cv
cp
f
110.683 88.2451 mo
110.653 88.3418 110.62 88.4336 110.583 88.5215 cv
110.62 88.4326 110.653 88.3428 110.683 88.2451 cv
cp
f
110.556 88.5967 mo
110.567 88.5742 110.573 88.5449 110.583 88.5215 cv
110.567 88.5605 110.552 88.5996 110.534 88.6338 cv
110.542 88.6211 110.55 88.6113 110.556 88.5967 cv
cp
0 0 0 0 cmyk
f
110.271 89.0566 mo
110.278 89.0469 110.274 89.04 110.282 89.0313 cv
110.267 89.0527 110.249 89.0752 110.229 89.0977 cv
110.241 89.085 110.261 89.0693 110.271 89.0566 cv
cp
f
121.854 86.0205 mo
122.024 85.5625 122.183 85.1074 122.347 84.6504 cv
122.337 84.6504 li
122.173 85.1084 122.024 85.5615 121.854 86.0205 cv
cp
f
120.741 88.9248 mo
120.743 88.9199 120.745 88.915 120.747 88.9102 cv
120.745 88.915 120.743 88.9199 120.741 88.9248 cv
120.741 88.9248 li
cp
f
121.851 86.0283 mo
121.853 86.0254 121.853 86.0234 121.854 86.0205 cv
121.839 86.0625 121.821 86.1045 121.806 86.1465 cv
121.821 86.1074 121.837 86.0674 121.851 86.0283 cv
cp
f
110.556 88.5967 mo
110.55 88.6113 110.542 88.6211 110.534 88.6338 cv
110.552 88.5996 110.567 88.5605 110.583 88.5215 cv
110.573 88.5449 110.567 88.5742 110.556 88.5967 cv
cp
110.271 89.0566 mo
110.261 89.0693 110.241 89.085 110.229 89.0977 cv
110.249 89.0752 110.267 89.0527 110.282 89.0313 cv
110.274 89.04 110.278 89.0469 110.271 89.0566 cv
cp
f
52.7109 81.7959 mo
52.5703 80.8662 52.4316 79.9375 52.291 79.0078 cv
51.1465 79.3975 51.3691 80.6016 51.8418 81.7959 cv
52.2188 82.7432 52.75 83.6846 52.8887 84.2109 cv
52.584 83.9258 52.0391 83.4648 51.7383 84.0195 cv
51.4805 84.4951 50.6035 83.8223 50.2051 83.5684 cv
49.5859 83.1748 49.0098 82.7148 48.4414 82.25 cv
48.3516 82.1758 48.1133 81.9756 47.8789 81.7959 cv
47.4863 81.4951 47.1367 81.2773 47.5156 81.7959 cv
47.5469 81.8379 47.5605 81.8623 47.6016 81.915 cv
48.2891 82.793 49.7969 85.3125 51.1484 85.3594 cv
51.584 85.3184 51.6953 84.8145 51.7754 84.4746 cv
52.1387 84.5674 52.9512 84.3994 53.1543 84.7168 cv
53.0078 83.7432 52.8594 82.7695 52.7109 81.7959 cv
cp
f
67.9922 72.5156 mo
67.9121 72.7578 67.832 73.002 67.75 73.2441 cv
67.666 73.4941 66.4043 73.0352 66.2305 72.9688 cv
64.8398 72.4395 66.1387 73.4863 66.5781 73.8633 cv
67.125 74.332 66.6367 75.541 67.0918 75.7422 cv
67.3359 75.0068 67.584 74.2715 67.8301 73.5352 cv
67.9375 73.209 68.5508 73.1445 68.7109 72.6602 cv
68.9258 72.0088 68.7598 71.2754 68.625 70.625 cv
68.416 71.2539 68.2031 71.8848 67.9922 72.5156 cv
cp
f
38.4395 95.2773 mo
39.6465 94.8301 40.8809 94.4023 42.1523 94.1729 cv
42.9609 94.0273 44.0938 93.9199 44.8203 94.3711 cv
45.1465 94.5732 45.3672 94.8906 45.4824 95.2529 cv
45.5547 95.4746 45.7285 95.7793 45.7285 95.3867 cv
45.7285 95.1113 45.5586 94.0605 45.7285 93.8594 cv
46.1406 93.8008 47.8203 93.9258 47.9512 93.6582 cv
47.1641 93.4883 46.3555 93.3877 45.5605 93.2529 cv
45.8223 94.1563 43 93.9795 42.3613 93.8018 cv
41.0781 93.4414 40.3887 92.2793 39.9551 91.1035 cv
38.8613 92.502 37.7695 93.9014 36.6758 95.3008 cv
36.8398 95.4277 37.0039 95.5674 37.168 95.7012 cv
37.5996 95.541 38.0527 95.4199 38.4395 95.2773 cv
cp
f
45.6934 84.4854 mo
45.6914 83.6777 45.2617 82.8955 45.0469 82.1309 cv
43.6309 82.5186 44.5938 84.3457 44.8574 85.21 cv
43.3848 84.498 41.793 83.9766 40.1426 84.2129 cv
39.2051 84.3467 38.5176 84.2441 37.5762 84.0898 cv
37.6602 84.3232 37.7441 84.5547 37.8281 84.7871 cv
37.4727 84.8867 37.1152 84.9805 36.752 85.0527 cv
37.5801 86.2539 38.4082 87.4531 39.2363 88.6543 cv
39.3379 88.8027 39.3516 88.4766 39.3301 88.4199 cv
39.1719 87.9824 39.0117 87.5439 38.8516 87.1055 cv
38.584 86.3711 38.3164 85.6367 38.0469 84.9004 cv
39.5293 84.4844 40.5059 84.7285 42.0234 84.9736 cv
42.9668 85.127 44.2539 85.1035 45.1191 85.5293 cv
45.2246 85.1777 45.7012 85.0313 45.6934 84.4854 cv
cp
f
56.9863 93.7676 mo
56.1387 94.043 54.2949 95.082 53.4609 94.4277 cv
52.6719 93.8086 52.7168 93.6416 51.8027 94.1914 cv
51.3652 94.4551 50.8398 94.7891 50.3008 94.7422 cv
50.2031 94.71 49.1934 94.2402 49.2754 94.5156 cv
50.4629 95.4043 51.7832 94.6885 53.0859 94.6768 cv
53.7891 94.6699 53.6699 95.4932 53.7832 96.0859 cv
54.3965 95.7012 54.9727 95.7949 55.6348 95.8945 cv
56.4668 95.6152 57.3105 95.29 58.1641 94.916 cv
57.8535 94.2773 57.4629 93.6133 56.9863 93.7676 cv
cp
f
63.3047 82.8457 mo
62.9902 83.5762 62.6777 84.3047 62.3652 85.0342 cv
61.8633 86.1992 61.0605 86.8984 59.9648 87.584 cv
58.6406 88.4121 57.043 89.0908 55.4609 89.1563 cv
54.8867 88.9336 54.2363 87.9365 53.7949 87.4951 cv
53.2109 88.7334 54.2051 89.3574 55.3574 89.3252 cv
55.2891 90.2266 53.8457 90.5254 53.1582 90.6494 cv
52.9395 90.6904 52.4395 90.6104 52.3047 90.8389 cv
52.4043 91.3242 55.1152 90.7002 55.4492 90.541 cv
56.5352 90.0215 58.1152 88.6133 59.2988 89.6523 cv
60.2988 90.5244 59.791 91.0215 59.3535 92.0391 cv
59.2559 92.2666 58.4141 93.8965 58.5957 94.0078 cv
58.7539 94.1055 59.7324 92.9199 59.8828 92.7207 cv
60.375 92.0791 60.543 91.3086 60.168 90.5684 cv
60.2305 89.9648 60.7598 89.1855 61 88.6328 cv
61.3574 87.7969 61.7188 86.9609 62.0762 86.125 cv
62.3379 85.5156 64.1484 83.4082 63.3047 82.8457 cv
cp
f
65.7207 72.3555 mo
65.7598 71.9824 65.9766 71.4453 65.6934 71.1631 cv
65.0195 70.4912 li
64.6504 70.5713 64.2852 70.6602 63.9258 70.7539 cv
64.0293 70.8467 64.1328 70.9385 64.2363 71.0313 cv
64.7305 71.4736 65.2227 71.916 65.7207 72.3555 cv
cp
f
61.6816 91.0273 mo
62 91.5293 62.3672 91.9951 62.7324 92.4639 cv
62.9238 92.3398 63.1191 92.2109 63.3125 92.082 cv
62.8594 91.7793 62.2266 91.1738 61.6816 91.0273 cv
cp
f
59.3145 74.2852 mo
59.7129 74.6699 60.1191 75.0488 60.4883 75.4658 cv
60.6172 75.624 60.9473 76.207 61.1133 76.2578 cv
61.3633 76.582 62.8125 78.1533 62.6074 78.3555 cv
62.2656 78.6895 61.9258 79.0254 61.584 79.3594 cv
62.752 79.291 63.918 79.2256 65.084 79.1582 cv
65.2695 79.1475 65.2715 79.1719 65.3008 78.9863 cv
64.6602 78.7305 64.0527 78.3975 63.5059 77.9795 cv
63.3594 77.7061 63.5059 76.9766 63.5059 76.6914 cv
64.2246 76.8613 64.9844 76.9121 65.6641 77.2207 cv
65.9961 77.373 66.7988 78.3379 66.9277 78.2402 cv
66.1836 76.6816 64.3613 76.5625 62.8555 76.4199 cv
62.3574 76.373 62.1445 76.4814 61.9648 75.9629 cv
61.8359 75.5918 61.7656 75.2012 61.7656 74.8076 cv
61.8945 74.2939 62.7051 73.748 63.0508 73.3398 cv
62.8223 73.1768 62.5977 73.0127 62.3691 72.8496 cv
62.1914 72.7227 62.8184 71.9844 62.957 71.8086 cv
62.4551 71.8379 61.9512 71.8662 61.4473 71.8955 cv
61.2363 71.9082 61.0254 71.9199 60.8125 71.9326 cv
60.8809 71.9814 60.9492 72.0293 61.0156 72.0781 cv
61.3594 72.3262 61.7031 72.5742 62.0488 72.8223 cv
62.2207 72.9473 61.1289 75.5859 61.3379 76.168 cv
61.0039 76.0664 60.6172 75.3457 60.3809 75.0723 cv
60.002 74.6348 59.5977 74.2168 59.1309 73.8721 cv
58.9551 73.6982 58.8008 73.5029 58.6348 73.3174 cv
58.498 73.166 58.3535 73.0254 58.2285 72.8652 cv
57.9004 73.0234 57.6035 73.1719 57.3418 73.3066 cv
57.6445 73.3457 57.9316 73.4355 58.2051 73.5527 cv
58.6094 73.7256 58.9844 73.9688 59.3145 74.2852 cv
cp
f
55.9766 78.4482 mo
55.7305 78.791 55.8125 78.8906 56.1367 79.0068 cv
56.8008 79.2461 57.209 80.1475 57.6348 80.6973 cv
57.9219 81.0684 58.2188 81.4316 58.5137 81.7959 cv
59.0527 82.4629 59.5957 83.127 60.123 83.8018 cv
60.0566 83.833 59.9922 83.8633 59.9277 83.8945 cv
60 83.9668 60.5332 84.4199 60.5332 84.1543 cv
60.4961 84.0518 60.4414 83.957 60.3711 83.873 cv
61.7422 83.2285 li
61.1445 83.0156 60.5488 82.8018 59.9512 82.5879 cv
59.4551 82.4102 59.5234 82.1543 59.6895 81.7959 cv
59.7656 81.6348 59.8574 81.4561 59.9316 81.25 cv
60.1699 80.5908 60.4902 80.3936 59.8184 80.1523 cv
59.0078 79.8613 58.1953 79.5693 57.3828 79.2783 cv
56.9844 79.1348 55.9941 78.8984 56.2207 78.2725 cv
56.459 77.6084 57.1211 76.8047 56.3516 76.5 cv
55.7832 76.2734 55.1641 76.0957 54.6699 75.7256 cv
54.6504 75.7119 54.6309 75.7021 54.6133 75.6885 cv
54.5879 75.668 54.5508 75.6211 54.5117 75.5625 cv
54.418 75.6426 54.3242 75.7285 54.2305 75.8027 cv
54.2598 75.8584 54.2969 75.9141 54.3262 75.9697 cv
54.8066 76.8682 55.498 77.7559 55.9766 78.4482 cv
cp
f
47.8945 88.3535 mo
47.293 88.3535 46.9531 88.3887 46.3945 88.5732 cv
42.252 89.9473 li
42.4219 90.4102 45.2266 90.1104 45.7598 90.1104 cv
48.1563 90.1104 li
48.8652 90.1104 48.7324 90.0947 48.7324 89.3516 cv
48.7324 88.3672 48.8906 88.3535 47.8945 88.3535 cv
cp
f
16.375 77.3135 mo
16.9863 78.2295 17.4453 77.3623 18.127 76.8174 cv
17.4512 76.4199 17.0918 75.7813 17 75.0176 cv
16.9902 74.9209 16.9902 74.7988 16.9961 74.665 cv
17.002 74.5391 17.0117 74.4033 17.0195 74.2656 cv
15.5332 75.0254 li
15.5723 75.1729 15.6113 75.3203 15.6504 75.4688 cv
15.8184 76.1133 15.998 76.7529 16.375 77.3135 cv
cp
f
41.3828 77.6445 mo
41.6953 77.6406 42.127 77.2813 42.3516 77.5078 cv
42.6543 77.8096 42.9551 78.1113 43.2559 78.4131 cv
43.8984 79.0566 43.6582 78.9961 43.0137 79.6387 cv
42.291 80.3594 41.4824 81.0166 40.8223 81.7959 cv
40.7539 81.875 40.6797 81.9502 40.6152 82.0322 cv
40.6602 82.0674 40.8223 81.9707 41.0469 81.7959 cv
41.9512 81.1006 43.9395 79.1211 44.1543 78.8945 cv
44.3398 78.7002 44.7031 78.248 45.0332 77.7363 cv
45.0684 77.6826 45.1035 77.6318 45.1367 77.5762 cv
44.041 77.29 43.123 76.9043 42.4746 76.585 cv
42.4258 76.6162 42.3711 76.6523 42.3164 76.6895 cv
41.7734 77.0527 40.9668 77.6445 41.3828 77.6445 cv
cp
f
21.4316 88.4805 mo
20.4199 88.7559 20.2266 89.5703 20.1719 90.4375 cv
20.5527 90.376 20.9395 90.3203 21.3379 90.2813 cv
21.4199 89.6865 21.375 89.0781 21.4316 88.4805 cv
cp
f
14.875 90.8965 mo
15.3555 90.8809 15.9258 91.0762 16.3984 91.1582 cv
16.5684 91.1865 16.7637 91.2051 16.9492 91.2285 cv
17.4082 91.0732 17.8867 90.9326 18.3848 90.8047 cv
17.541 90.5439 16.6602 90.4443 15.7422 90.5684 cv
15.0742 90.6582 14.5508 90.6357 13.9668 90.5596 cv
14.1035 90.8887 14.1836 91.0898 14.1602 91.0322 cv
14.3613 90.9941 14.5918 90.9609 14.875 90.8965 cv
cp
f
11.5078 83.1855 mo
11.8105 83.9785 12.1172 84.7705 12.4238 85.5625 cv
12.834 86.6309 12.7324 85.1611 12.7148 84.707 cv
12.6934 84.1758 12.6191 83.6348 12.3438 83.1699 cv
12.125 82.8027 11.4277 82.5137 11.3066 82.2051 cv
11.1484 81.7959 li
9.77344 78.2266 li
9.68555 78.001 li
9.67578 77.9727 9.66992 77.9434 9.66016 77.916 cv
9.49219 77.9863 li
9.91797 79.3916 10.375 80.8105 10.8574 82.2373 cv
11.1484 82.4258 11.3301 82.7285 11.5078 83.1855 cv
cp
f
19.6816 81.7959 mo
19.6367 82.6758 19.7285 83.5703 19.7715 84.1387 cv
19.8359 84.9922 20.0371 85.8896 19.5684 86.6592 cv
19.3789 86.7588 18.6211 86.498 18.416 86.4629 cv
17.8535 86.3672 17.291 86.2715 16.7266 86.1758 cv
15.9141 86.0371 15.9961 86.0078 15.7031 85.123 cv
15.3633 84.0967 15.1113 82.7705 15.5215 81.7959 cv
15.7363 81.2881 16.1172 80.8701 16.7832 80.6523 cv
16.0449 80.5254 15.3086 80.4004 14.5723 80.2734 cv
13.957 80.1689 14.6016 78.1426 14.0859 78.0703 cv
14.0137 79.4277 14.2129 80.5938 14.5313 81.7959 cv
14.7285 82.5449 14.9746 83.3076 15.2285 84.1406 cv
15.25 84.4141 15.1055 85.9688 15.2129 86.0859 cv
15.2617 86.1387 15.6133 86.1543 15.6758 86.1641 cv
16.0918 86.2363 16.0742 86.6104 16.2246 86.9824 cv
16.5059 87.6729 17.6406 87.7422 18.3359 87.6426 cv
18.9551 87.5527 19.4629 86.7764 19.9609 86.8945 cv
20.1738 85.3867 20.252 83.9023 20.2324 82.376 cv
20.2305 82.1836 20.2344 81.9893 20.2344 81.7959 cv
20.2363 81.332 20.25 80.8672 20.3379 80.4121 cv
20.4395 79.9004 21.0137 79.5186 21.002 79.168 cv
20.041 79.5078 19.7422 80.6396 19.6816 81.7959 cv
cp
f
28.7559 89.5166 mo
28.3809 89.1172 27.8984 88.9365 27.3574 89.0264 cv
26.75 89.127 26.125 88.8809 25.4863 88.9238 cv
24.8848 88.9639 24.8594 87.9922 24.6973 87.458 cv
24.4277 88.1211 24.1563 88.7832 23.8867 89.4453 cv
24.2598 89.3145 24.6445 89.2051 25.0371 89.1426 cv
25.166 89.2158 25.2598 89.873 25.3086 90.0313 cv
25.7656 89.8535 26.1992 89.6201 26.6504 89.4248 cv
27.2969 89.1475 27.9102 89.6035 28.3945 90.0508 cv
28.7617 90.3896 28.9336 90.7441 29.0684 91.1387 cv
29.207 91.1836 29.3457 91.2305 29.4863 91.2793 cv
29.2246 90.6865 28.9531 90.1611 28.7559 89.5166 cv
cp
f
35.4453 79.4844 mo
34.9766 79.9531 34.3633 80.3496 33.7695 80.6426 cv
33.4199 80.8164 33.0508 80.9541 32.668 81.043 cv
32.123 81.1719 32.0859 80.8994 31.7266 80.5293 cv
31.2246 80.0117 30.623 79.4141 30.6289 78.6367 cv
30.6289 78.0723 31.4902 77.3223 31.9082 76.9805 cv
32.4648 76.5244 33.1016 76.29 33.8086 76.5215 cv
33.9277 76.3164 33.0352 75.7695 32.8516 75.498 cv
32.3828 74.8047 32.4551 74.1855 32.4551 73.3887 cv
32.4551 73.2568 32.4082 72.4326 32.3184 71.9727 cv
32.2754 71.751 32.2227 71.6064 32.1602 71.6768 cv
32.1602 71.75 32.1621 71.8223 32.1621 71.8945 cv
32.1777 73.5605 32.3379 75.1582 31.584 76.7129 cv
31.0254 77.8691 30.0137 78.9023 28.9277 79.6064 cv
29.4336 80.1104 29.9375 80.6152 30.4414 81.1191 cv
30.5352 81.2129 30.2949 81.501 29.9961 81.7959 cv
29.6855 82.1064 29.3125 82.4238 29.2051 82.5313 cv
28.9297 82.8066 28.9629 82.9141 29.4355 82.7559 cv
30.1328 82.5215 30.8438 82.3232 31.543 82.0908 cv
31.8105 82.0029 32.0703 81.8984 32.3301 81.7959 cv
33.5 81.332 34.5898 80.71 35.4336 79.7441 cv
35.8105 80.1191 36.1875 80.4951 36.5645 80.8711 cv
36.752 81.0576 36.7676 81.4316 36.7793 81.7959 cv
36.7891 82.165 36.793 82.5234 36.959 82.6621 cv
37.2324 82.6621 37.1426 82.1406 37.1152 81.7959 cv
37.1094 81.7441 37.1074 81.6963 37.1074 81.6553 cv
37.1035 80.9619 36.3691 79.709 35.6191 79.5566 cv
36.7012 78.6016 37.6836 77.4893 38.707 76.4668 cv
39.0215 76.1543 39.332 75.8418 39.6445 75.5293 cv
39.7148 75.46 39.7852 75.3906 39.8555 75.3203 cv
39.6406 75.2266 li
39.5664 75.291 39.4961 75.3633 39.4219 75.4287 cv
38.0098 76.6748 36.7715 78.1602 35.4453 79.4844 cv
cp
f
21.2754 71.9453 mo
21.9277 72.9863 23.1289 74.2422 22.4082 75.4951 cv
21.8906 76.3926 21.5801 75.8574 20.8027 75.5488 cv
20.3008 75.3496 19.7813 75.2129 19.252 75.1133 cv
19.7031 75.5654 20.1543 76.0176 20.6055 76.4697 cv
20.6836 76.5479 20.9609 76.9297 21.0801 76.9443 cv
21.7148 77.0254 21.5488 76.0215 22.25 76.5342 cv
23.2773 77.2871 24.0625 78.3115 24.6777 79.416 cv
24.9961 79.9863 25.2734 80.582 25.5215 81.1855 cv
25.6113 81.4014 25.6445 81.6016 25.6621 81.7959 cv
25.7012 82.2666 25.6172 82.7021 25.7949 83.2188 cv
26.3242 83.75 26.5801 84.1035 26.8203 84.8174 cv
27.0059 85.3604 27.1406 86.1328 27.5156 86.5742 cv
28.168 87.3398 29.2871 87.6816 30.2227 87.9297 cv
31.2129 88.1914 32.2344 88.3516 33.2559 88.4346 cv
34.1309 88.5059 35.7891 88.3223 34.0039 87.9141 cv
34.252 87.667 35.5371 86.6699 35.4883 86.4316 cv
35.5234 86.3984 35.3496 86.334 35.2285 86.4531 cv
34.9785 86.7012 34.7422 86.9902 34.4668 87.2109 cv
31.8516 89.2285 29.0156 86.3203 27.2773 84.5234 cv
26.7168 83.9453 26.5508 83.4746 26.2852 82.7236 cv
26.1387 82.3047 26.0801 82.0391 26.1328 81.7959 cv
26.1875 81.5459 26.3574 81.3213 26.6758 80.9805 cv
26.7754 80.8721 27.6348 80.0654 27.5527 79.9844 cv
27.2676 79.6982 26.9824 79.4141 26.6934 79.127 cv
26.041 78.4746 25.8496 78.5313 26.5723 77.9219 cv
27.3027 77.3066 27.9141 76.5078 28.5957 75.8301 cv
30.2539 74.1758 28.1445 72.5449 26.8672 71.4219 cv
26.5332 71.1279 26.1602 70.8398 26.0547 70.4365 cv
26.0332 70.3496 26.0059 70.2656 26.0117 70.166 cv
26.0176 70.123 26.0156 70.0791 26.0195 70.0361 cv
25.9844 70.0381 25.9492 70.0381 25.9141 70.04 cv
25.9063 70.1748 25.8926 70.3096 25.8828 70.4453 cv
25.791 71.627 25.6328 72.8193 25.8184 73.8359 cv
26.3672 73.2891 26.9141 72.7412 27.4609 72.1934 cv
28.1426 72.9785 29.2051 73.7246 29.0469 74.8906 cv
28.957 75.5615 27.8379 76.3613 27.334 76.8574 cv
26.8594 77.3301 26.3906 77.9668 25.7695 78.252 cv
25.1523 78.5352 24.418 78.6445 24.3223 77.9268 cv
24.2227 77.1699 23.9707 76.4395 23.6582 75.7461 cv
23.0996 74.5107 22.4863 73.1953 21.6504 72.124 cv
21.584 72.0371 21.5215 71.9395 21.457 71.8467 cv
21.3672 71.7188 21.2754 71.5947 21.1875 71.4629 cv
21.127 71.498 21.0723 71.5322 21.0137 71.5664 cv
21.1133 71.7129 21.1895 71.8232 21.2227 71.8652 cv
21.2383 71.8906 21.2578 71.9189 21.2754 71.9453 cv
cp
f
31.4941 90.5859 mo
30.9492 90.8613 30.4023 91.1348 29.8535 91.4092 cv
30.2266 91.5449 30.5977 91.6973 30.9766 91.8594 cv
31.1484 91.4355 31.3223 91.0117 31.4941 90.5859 cv
cp
f
98.4463 95.4199 mo
98.4834 95.1504 98.5283 94.8975 98.6006 94.7793 cv
98.9502 94.2031 99.5479 93.5391 100.087 93.1543 cv
99.5771 92.6445 99.0674 92.1348 98.5557 91.625 cv
98.3604 91.4277 99.3428 90.6602 99.5166 90.4863 cv
100.161 89.8438 100.806 89.2031 101.448 88.5596 cv
101.808 88.2031 101.345 88.4297 101.437 88.1426 cv
101.909 87.1953 101.929 86.1543 101.614 85.1543 cv
100.743 84.8076 99.1494 85.0938 98.1475 85.0938 cv
99.1709 86.1162 100.194 87.1387 101.218 88.1602 cv
101.673 88.6143 98.1729 91.1133 98.2295 91.5371 cv
98.2861 91.9531 99.4697 92.7793 99.7861 93.0938 cv
98.8955 93.4502 98.0029 93.8066 97.1104 94.1631 cv
97.5381 94.5781 97.9697 95.0039 98.4072 95.4395 cv
98.4072 95.4395 98.4209 95.4316 98.4463 95.4199 cv
cp
f
112.517 81.7959 mo
111.45 83.5605 109.64 87.4238 109.354 87.9707 cv
108.856 88.9238 108.354 89.876 107.856 90.8281 cv
107.788 90.9629 108.813 90.2422 108.917 90.1582 cv
109.001 90.0879 109.142 89.9863 109.304 89.8691 cv
109.372 89.8193 109.444 89.7676 109.519 89.7119 cv
109.56 89.6826 109.599 89.6504 109.64 89.6201 cv
109.729 89.5518 109.817 89.4824 109.901 89.4131 cv
109.931 89.3887 109.96 89.3652 109.987 89.3418 cv
110.085 89.2568 110.163 89.1758 110.229 89.0977 cv
110.249 89.0752 110.267 89.0527 110.282 89.0313 cv
110.331 88.96 110.37 88.8916 110.37 88.8359 cv
110.419 88.8115 110.46 88.7568 110.499 88.6943 cv
110.511 88.6748 110.522 88.6563 110.534 88.6338 cv
110.552 88.5996 110.567 88.5605 110.583 88.5215 cv
110.62 88.4336 110.653 88.3418 110.683 88.2451 cv
110.729 88.0967 110.771 87.9502 110.808 87.8418 cv
111.138 86.8984 111.468 85.9551 111.8 85.0127 cv
112.177 83.9404 112.554 82.8682 112.931 81.7959 cv
113.032 81.5039 113.134 81.2119 113.237 80.9199 cv
113.122 80.8789 112.856 81.2334 112.517 81.7959 cv
cp
f
115.868 86.1035 mo
115.292 84.6631 115.04 82.9922 116.985 82.627 cv
116.882 82.3506 116.782 82.0732 116.681 81.7959 cv
116.483 81.251 116.284 80.7061 116.083 80.1621 cv
115.739 80.6934 115.53 81.2393 115.403 81.7959 cv
114.999 83.5693 115.483 85.4521 115.481 87.3105 cv
115.479 87.9463 115.403 88.5996 115.106 89.1719 cv
114.724 89.9063 113.925 88.9805 113.3 89.416 cv
112.948 89.6621 112.892 90.0596 112.938 90.4473 cv
114.362 90.0898 115.847 89.7559 117.368 89.4658 cv
116.952 88.3145 116.313 87.2148 115.868 86.1035 cv
cp
f
107.849 76.5107 mo
108.479 77.1367 108.233 77.2383 107.901 78.0811 cv
108.294 78.9219 109.362 79.6855 110.335 79.6855 cv
110.569 79.6836 111.13 79.793 111.218 79.7686 cv
111.731 79.373 112.257 78.9746 112.753 78.5586 cv
113.722 77.752 114.524 76.7754 115.452 75.9277 cv
115.808 75.6016 116.194 75.2715 116.647 75.084 cv
116.966 75.0166 117.466 75.1582 117.565 74.8555 cv
116.31 74.457 114.772 75.7949 113.993 76.6045 cv
113.698 76.9102 111.419 79.834 110.985 79.4004 cv
110.403 78.8223 109.825 78.2422 109.243 77.6621 cv
109.019 77.4395 108.794 77.2148 108.571 76.9922 cv
108.374 76.7959 109.142 75.6592 109.62 75.0117 cv
109.47 75.0186 109.321 75.0254 109.175 75.0293 cv
108.61 75.752 108.081 76.3555 107.849 76.5107 cv
cp
f
104.185 81.7959 mo
104.173 81.9326 104.165 82.0684 104.165 82.2041 cv
104.165 82.4902 104.812 84.5244 105.038 84.082 cv
104.556 83.4395 104.413 82.5967 104.44 81.7959 cv
104.446 81.626 104.45 81.4551 104.472 81.292 cv
104.716 79.3555 106.687 77.3564 106.04 75.3301 cv
105.983 75.1514 105.899 74.9883 105.8 74.8359 cv
105.358 74.7764 104.933 74.7051 104.524 74.625 cv
104.683 74.8164 104.825 74.999 104.892 75.1387 cv
105.927 77.3096 104.372 79.5898 104.185 81.7959 cv
cp
f
98.5518 75.2881 mo
98.6689 75.6963 98.8525 76.1328 98.915 76.5547 cv
98.7783 77.5215 99.3154 77.9502 99.5361 78.7246 cv
99.8311 79.748 100.124 80.7725 100.417 81.7959 cv
100.517 82.1416 100.614 82.4863 100.714 82.832 cv
100.829 83.2305 100.89 82.2764 100.894 82.4307 cv
100.888 82.2197 100.886 82.0078 100.882 81.7959 cv
100.876 81.3721 100.876 80.9473 100.927 80.5254 cv
101.054 79.4678 101.556 78.5957 102.546 78.1348 cv
102.128 77.7168 101.71 77.2988 101.29 76.8809 cv
100.761 77.4092 100.228 77.9385 99.6982 78.4678 cv
98.4463 76.5176 99.8252 75.2314 100.581 73.4971 cv
100.587 73.4854 100.593 73.4746 100.597 73.4629 cv
99.0811 72.8516 98.2217 72.2959 98.2217 72.2959 cv
98.0146 72.1777 97.8096 72.0859 97.6045 71.9814 cv
97.6396 72.1055 97.6748 72.2285 97.71 72.3525 cv
97.9893 73.3301 98.2705 74.3096 98.5518 75.2881 cv
cp
f
108.282 81.7959 mo
108.185 81.6895 108.091 81.5967 108.005 81.5234 cv
107.499 81.0869 107.534 81.3623 107.724 81.7959 cv
107.923 82.2559 108.292 82.8936 108.372 83.0547 cv
108.571 83.4512 108.771 83.8496 108.972 84.2461 cv
109.136 84.5713 108.13 85.3232 107.915 85.5684 cv
106.981 86.6455 105.937 88.0566 104.315 87.5332 cv
104.313 88.667 104.157 89.8857 104.567 90.9746 cv
104.821 91.6426 105.31 92.1641 105.95 92.4844 cv
106.138 92.3457 105.446 91.1973 105.372 90.875 cv
104.745 88.1055 107.981 86.7793 109.036 84.6738 cv
109.884 84.0156 108.979 82.5469 108.282 81.7959 cv
cp
f
119.946 73.6602 mo
120.106 73.6055 120.351 73.5791 120.507 73.6523 cv
119.749 75.127 118.989 76.6016 118.229 78.0762 cv
118.366 78.0771 118.505 78.1787 118.644 78.1738 cv
118.415 78.4219 118.218 80.6826 118.54 80.7578 cv
119.099 80.8887 119.659 81.0195 120.22 81.1494 cv
120.161 80.4746 120.106 79.7988 120.048 79.123 cv
119.97 78.2002 119.948 78.3066 119.021 78.0898 cv
119.37 77.8857 120.575 77.4922 120.69 77.127 cv
120.7 77.0938 120.468 76.5215 120.468 76.4238 cv
120.466 75.957 120.599 75.4941 120.704 75.043 cv
120.854 74.4043 120.63 73.7803 120.901 73.2578 cv
121.011 73.042 121.231 72.7461 121.313 72.4912 cv
121.319 72.4746 121.329 72.4561 121.333 72.4395 cv
121.21 72.459 121.095 72.4785 120.974 72.4971 cv
120.956 72.5176 120.937 72.5381 120.919 72.5586 cv
120.595 72.9258 120.271 73.2939 119.946 73.6602 cv
cp
f
123.823 75.8291 mo
123.739 75.5781 123.056 73.9531 122.778 74.1162 cv
122.636 74.1992 122.835 74.4922 122.886 74.623 cv
123.204 75.4473 123.524 76.2715 123.843 77.0977 cv
124.237 78.1221 123.886 79.4863 123.571 80.4922 cv
123.501 80.7178 123.319 81.2354 123.075 81.7959 cv
122.647 82.7783 122.028 83.8926 121.478 83.7949 cv
120.724 83.6611 119.97 83.5273 119.216 83.3936 cv
119.644 84.5928 120.681 84.8047 121.649 84.0059 cv
122.444 85.1953 120.911 86.0313 120.536 86.9395 cv
120.698 87.1953 121.569 86.2637 121.69 86.168 cv
121.751 86.1318 121.798 86.0752 121.851 86.0283 cv
122.823 83.4033 123.69 80.8096 124.468 78.252 cv
124.458 78.2275 124.45 78.2041 124.44 78.1797 cv
124.138 77.4004 124.087 76.6191 123.823 75.8291 cv
cp
f
71.1348 70.4658 mo
71.2988 70.959 71.4531 71.4209 70.7344 71.4414 cv
70.875 71.7471 71.5059 72.6406 71.5332 71.7627 cv
71.5293 71.1934 71.7422 71.334 72.2813 71.291 cv
72.834 71.248 73.3867 71.2441 73.9395 71.2168 cv
74.041 71.2119 74.1348 71.2217 74.2344 71.2217 cv
74.4453 71.2227 74.6582 71.2197 74.8672 71.2334 cv
74.5547 71.0742 74.375 70.957 74.375 70.957 cv
73.2891 70.5049 72.1543 70.2383 71.0059 70.1084 cv
71.0234 70.1641 71.0527 70.2188 71.0703 70.2754 cv
71.0898 70.3389 71.1113 70.4023 71.1348 70.4658 cv
cp
f
86.5029 83.5117 mo
85.458 82.6133 86.7139 84.7266 86.8701 85.04 cv
86.9014 85.1025 86.9346 85.1641 86.9658 85.2266 cv
87.2236 85.4307 87.5342 85.6797 87.874 85.9551 cv
87.8994 85.0996 87.0205 83.957 86.5029 83.5117 cv
cp
f
66.2773 84.7246 mo
65.0781 85.3232 64.1191 86.3125 64.5098 87.7305 cv
64.7246 88.5088 65.1895 89.2061 65.6641 89.8496 cv
65.7324 89.9453 65.8359 90.0586 65.9473 90.1787 cv
66.1914 90.0195 66.5879 89.7676 67.0996 89.4785 cv
66.8262 87.8945 66.5508 86.3086 66.2773 84.7246 cv
cp
f
80.3115 81.7959 mo
80.2158 81.5293 80.1182 81.2637 80.0225 80.9971 cv
79.9033 80.6699 78.8184 80.6865 78.498 80.6357 cv
77.2734 80.4414 77.0605 79.4561 76.7617 78.3223 cv
76.748 77.6191 75.5313 76.1846 76.2168 75.6631 cv
76.9551 75.1025 78.416 75.6367 79.2383 75.707 cv
79.0957 75.3135 78.9277 74.2373 78.6113 73.9863 cv
78.3301 73.7637 77.3926 73.791 77.0449 73.7363 cv
76.1836 73.5977 75.3242 73.46 74.4629 73.3223 cv
73.707 73.2012 73.752 73.2139 73.4785 72.4609 cv
73.1563 72.8203 72.834 73.1787 72.5137 73.5381 cv
73.7754 74.5488 75.6113 75.6084 76.1777 77.1816 cv
76.3223 77.583 76.7422 78.1963 76.4941 78.6133 cv
76.0215 79.417 73.8828 78.9707 73.2617 78.6191 cv
72.209 78.0254 71.7793 77.0713 71.3633 75.9902 cv
71.248 75.6904 70.791 74.8008 71.0039 75.7695 cv
71.1289 76.3398 71.3379 76.8965 71.6621 77.3867 cv
72.9316 79.3076 75.3398 79.5283 77.3496 80.4297 cv
77.5469 80.5127 77.4336 80.6328 77.8027 80.6924 cv
78.2578 80.7656 78.7559 81.1924 79.1113 81.4727 cv
79.2383 81.5723 79.3467 81.6885 79.4639 81.7959 cv
79.8154 82.1182 80.1416 82.4648 80.4189 82.8545 cv
80.4756 82.9355 80.9014 83.4092 80.7549 83.0068 cv
80.6084 82.6035 80.46 82.1992 80.3115 81.7959 cv
cp
f
70.8633 86.8945 mo
71.0664 87.1484 71.293 87.3906 71.5371 87.627 cv
71.8809 87.5371 72.2246 87.458 72.5801 87.3975 cv
72.1738 86.8086 71.8184 86.1846 71.5195 85.5371 cv
71.2754 85.0059 72.0391 84.5117 72.0508 83.877 cv
72.0449 83.3115 71.5996 82.9141 71.1484 82.6455 cv
70.9023 82.5029 70.6445 82.3809 70.3789 82.2773 cv
70.3359 82.1182 70.3027 81.9561 70.2637 81.7959 cv
70.1855 81.4795 70.1055 81.1641 70.0371 80.8457 cv
69.8359 79.9287 69.6719 79.0059 69.5117 78.082 cv
69.332 77.0488 69.2598 77.0332 68.9746 77.8828 cv
68.5371 79.1875 68.0996 80.4912 67.6641 81.7959 cv
67.6309 81.8926 67.5977 81.9902 67.5664 82.0869 cv
69.1016 82.0869 li
70.3066 82.0869 70.3418 82.8652 70.666 83.8281 cv
70.8555 84.3906 71.373 85.0361 70.9473 85.5078 cv
70.5957 85.8965 70.2266 86.2705 69.8984 86.6777 cv
69.4961 87.1758 69.1309 87.7715 69.2168 88.4277 cv
69.2227 88.4668 69.3438 88.4141 69.4063 88.3516 cv
69.8926 87.8662 70.377 87.3799 70.8633 86.8945 cv
cp
f
89.4502 71.3574 mo
89.5498 71.3574 89.5537 70.6719 89.5225 70.3877 cv
89.5166 70.3389 89.5107 70.2988 89.5029 70.2793 cv
89.4072 70.2314 89.2939 70.1328 89.1768 70.0156 cv
88.9268 70.0176 88.6904 70.0254 88.4502 70.0342 cv
88.5088 70.1572 88.5732 70.2773 88.6357 70.3926 cv
88.9248 70.9307 89.2295 71.3574 89.4502 71.3574 cv
cp
f
90.7627 85.9043 mo
91.0381 85.4043 91.2119 84.8516 91.3643 84.3047 cv
91.6299 83.3545 91.9561 82.6758 92.4619 81.8213 cv
92.4658 81.8125 92.4717 81.8047 92.4756 81.7959 cv
93.2295 80.5166 93.9287 79.1855 94.374 77.7656 cv
94.5713 77.1348 94.7158 76.4863 94.7803 75.8301 cv
94.8428 75.2021 95.3447 74.8057 95.792 74.377 cv
95.5752 74.3691 94.9443 74.4609 94.7803 74.3379 cv
94.7041 73.6055 94.5049 72.9004 94.2256 72.2207 cv
93.9482 72.8633 93.667 73.5059 93.3877 74.1484 cv
93.2646 74.4336 92.5479 74.25 92.2764 74.2393 cv
91.3818 74.2031 90.4873 74.168 89.5908 74.1328 cv
89.3662 74.123 88.0205 73.8965 87.8604 74.0635 cv
87.6357 74.2979 88.8115 74.3281 88.8994 74.3359 cv
89.8682 74.4336 90.8389 74.5313 91.8096 74.6279 cv
92.1221 74.6602 93.0381 74.583 93.2979 74.7783 cv
93.5967 75.001 93.1807 75.375 93.6748 75.3945 cv
93.7412 75.3965 94.3662 75.415 94.5674 75.4375 cv
94.4209 75.8135 94.1084 76.1279 93.8857 76.4883 cv
93.4404 77.2041 93.0693 77.9639 92.7588 78.7461 cv
92.3623 79.7393 92.0713 80.7637 91.8076 81.7959 cv
91.6982 82.2236 91.5928 82.6523 91.4893 83.082 cv
90.6787 84.3594 89.8291 85.6113 88.9873 86.8672 cv
89.0439 86.915 89.1064 86.9678 89.165 87.0176 cv
89.8701 86.9512 90.4131 86.5469 90.7627 85.9043 cv
cp
f
92.8779 89.6943 mo
93.585 89.0352 93.249 88.9629 92.5361 89.4678 cv
92.5361 87.665 li
92.5361 87.0332 94.0225 86.2266 94.5322 85.9883 cv
95.0889 85.7266 95.6982 85.6504 96.2939 85.7998 cv
96.3389 85.8105 97.29 86.1563 97.0635 85.8975 cv
96.7783 85.5742 96.2588 84.7041 95.8662 84.6006 cv
93.6904 85.0371 92.6514 86.7012 91.8838 88.5723 cv
91.8076 88.7559 91.7314 88.9463 91.6533 89.1387 cv
91.9521 89.3994 92.2568 89.666 92.5713 89.9453 cv
92.6709 89.8584 92.7822 89.7842 92.8779 89.6943 cv
cp
f
84.7334 72.627 mo
84.4912 74.0488 83.124 75.0918 83.1104 76.5869 cv
83.1104 77.2314 84.4033 76.9229 84.9229 76.9229 cv
84.6572 76.25 84.8232 75.5996 85.2529 75.0391 cv
85.5576 74.6436 86.7529 73.8926 86.3252 73.4668 cv
84.9893 72.1357 li
84.833 71.9785 84.835 71.7578 84.7236 71.5625 cv
84.5947 71.3369 84.4072 71.1563 84.2041 70.9932 cv
84.0889 70.9004 83.9736 70.8066 83.8467 70.7285 cv
83.6963 70.7695 83.5732 70.8066 83.4639 70.8398 cv
83.5635 70.9268 83.6748 71.0186 83.7842 71.1123 cv
84.2881 71.541 84.835 72.0371 84.7334 72.627 cv
cp
f
81.9756 85.6797 mo
82.3213 85.0635 82.5283 84.3789 82.7354 83.709 cv
83.2959 83.0752 83.8389 82.4277 84.4033 81.7959 cv
84.4365 81.7578 84.4697 81.7178 84.5049 81.6797 cv
85.7295 80.3154 87.0967 79.0254 88.8096 78.2988 cv
89.3174 78.1455 89.8291 77.9922 90.3389 77.8379 cv
90.4717 77.7988 90.5342 77.7793 90.4443 77.6309 cv
89.874 77.7402 89.3623 77.957 88.8135 78.1221 cv
87.7705 78.4355 86.7275 78.749 85.6846 79.0625 cv
84.4502 79.4336 83.2178 79.8047 81.9814 80.1758 cv
81.665 80.2715 81.8525 80.3955 82.1006 80.4453 cv
82.6924 80.5654 83.2861 80.6836 83.8799 80.8037 cv
83.6143 81.0957 83.415 81.4375 83.2451 81.7959 cv
83.0264 82.2588 82.8604 82.752 82.7061 83.2266 cv
82.4287 84.0938 81.4756 84.8535 80.7803 85.4268 cv
80.1338 85.9609 79.1699 86.7695 78.3301 86.3926 cv
78.1133 86.2148 77.9805 85.5254 77.8789 85.2686 cv
77.498 84.3262 76.9824 84.4668 75.9824 84.2656 cv
75.8867 84.2461 75.5117 86.3506 75.4551 86.623 cv
76.3477 86.8027 77.1738 87.041 78.0879 86.8984 cv
78.4512 86.8418 78.8027 86.8418 79.1426 86.8496 cv
81.4932 86.3203 li
81.6631 86.1582 81.8252 85.9521 81.9756 85.6797 cv
cp
f
123.839 72.1621 mo
123.864 72.1836 123.896 72.2012 123.923 72.2217 cv
124.161 72.4141 124.433 72.5811 124.757 72.7051 cv
124.942 73.0996 125.132 73.4941 125.319 73.8887 cv
126.015 73.3018 125.819 73.2412 125.493 72.4023 cv
125.552 72.4189 125.804 72.4648 126.085 72.5039 cv
126.11 72.3994 126.138 72.2949 126.165 72.1914 cv
125.917 72.1631 125.665 72.1387 125.396 72.1309 cv
124.901 72.1152 124.378 72.127 123.839 72.1621 cv
cp
f
58.4395 176.551 mo
58.4609 175.137 58.2285 173.893 56.543 173.893 cv
54.5605 173.893 54.5605 176.573 54.5605 179.524 cv
54.5605 184.29 55.0234 185.133 56.8379 185.133 cv
57.3652 185.133 57.9336 185.006 58.4199 184.838 cv
58.4199 181.463 li
56.6895 181.463 li
56.6895 179.124 li
61.6035 179.124 li
61.6035 186.842 li
60.7383 187.01 58.5664 187.348 57.3008 187.348 cv
51.9453 187.348 51.334 185.133 51.334 179.356 cv
51.334 175.518 51.5234 171.616 56.7324 171.616 cv
59.8535 171.616 61.793 173.366 61.6035 176.551 cv
58.4395 176.551 li
cp
0 0 0 1 cmyk
f
64.0742 187.094 mo
64.0742 171.87 li
72.3828 171.87 li
72.3828 174.209 li
67.2578 174.209 li
67.2578 177.963 li
71.9824 177.963 li
71.9824 180.305 li
67.2578 180.305 li
67.2578 184.754 li
72.5527 184.754 li
72.5527 187.094 li
64.0742 187.094 li
cp
f
81.4531 179.483 mo
81.4531 175.581 81.2227 173.893 79.4297 173.893 cv
77.6367 173.893 77.4043 175.581 77.4043 179.483 cv
77.4043 183.383 77.6367 185.071 79.4297 185.071 cv
81.2227 185.071 81.4531 183.383 81.4531 179.483 cv
cp
74.1777 179.483 mo
74.1777 175.454 74.1777 171.616 79.4297 171.616 cv
84.6797 171.616 84.6797 175.454 84.6797 179.483 cv
84.6797 183.467 84.6797 187.348 79.4297 187.348 cv
74.1777 187.348 74.1777 183.467 74.1777 179.483 cv
cp
f
88.4639 180.325 mo
90.6855 180.325 li
90.6855 182.477 li
88.3877 182.477 li
86.5195 182.477 li
86.5195 180.325 li
88.4639 180.325 li
cp
f
24.5894 212.409 mo
24.5889 212.409 24.5889 204.69 24.5889 204.69 cv
24.5889 204.69 24.5889 197.182 24.5894 197.182 cv
27.7729 197.182 li
27.7725 197.182 27.7725 205.073 27.7725 205.073 cv
27.7725 205.073 27.7725 212.409 27.7729 212.409 cv
24.5894 212.409 li
cp
f
30.1792 212.409 mo
30.1792 197.182 li
34.48 197.182 li
38.5288 207.727 li
38.5718 207.727 li
38.5718 197.182 li
41.5444 197.182 li
41.5444 212.409 li
37.3491 212.409 li
33.1948 201.274 li
33.1519 201.274 li
33.1519 212.409 li
30.1792 212.409 li
cp
f
48.0664 212.661 mo
44.1226 212.661 43.3843 210.342 43.5522 207.706 cv
46.7368 207.706 li
46.7368 209.161 46.8003 210.383 48.5508 210.383 cv
49.625 210.383 50.1523 209.688 50.1523 208.655 cv
50.1523 205.913 43.7417 205.745 43.7417 201.211 cv
43.7417 198.829 44.8804 196.93 48.7617 196.93 cv
51.8613 196.93 53.4004 198.321 53.1895 201.506 cv
50.0898 201.506 li
50.0898 200.368 49.9004 199.208 48.6133 199.208 cv
47.5796 199.208 46.9683 199.776 46.9683 200.831 cv
46.9683 203.719 53.3789 203.467 53.3789 208.254 cv
53.3789 212.198 50.4902 212.661 48.0664 212.661 cv
cp
f
64.4336 197.182 mo
64.4336 199.713 li
60.8906 199.713 li
60.8906 212.409 li
57.707 212.409 li
57.707 199.713 li
54.1641 199.713 li
54.1641 197.182 li
64.4336 197.182 li
cp
f
65.6172 212.409 mo
65.6172 205.987 li
65.6172 197.182 li
68.8027 197.182 li
68.8027 206.139 li
68.8027 212.409 li
65.6172 212.409 li
cp
f
80.2539 197.182 mo
80.2539 199.713 li
76.7109 199.713 li
76.7109 212.409 li
73.5273 212.409 li
73.5273 199.713 li
69.9844 199.713 li
69.9844 197.182 li
80.2539 197.182 li
cp
f
91.7285 197.182 mo
91.7285 207.979 li
91.7285 210.256 90.4434 212.661 86.5625 212.661 cv
83.0625 212.661 81.375 210.848 81.375 207.979 cv
81.375 197.182 li
84.5586 197.182 li
84.5586 207.768 li
84.5586 209.645 85.3613 210.383 86.5215 210.383 cv
87.9121 210.383 88.5449 209.456 88.5449 207.768 cv
88.5449 197.182 li
91.7285 197.182 li
cp
f
103.1 197.182 mo
103.1 199.713 li
99.5566 199.713 li
99.5566 212.409 li
96.3711 212.409 li
96.3711 199.713 li
92.8301 199.713 li
92.8301 197.182 li
103.1 197.182 li
cp
f
104.283 212.409 mo
104.283 197.182 li
112.592 197.182 li
112.592 199.524 li
107.467 199.524 li
107.467 203.278 li
112.191 203.278 li
112.191 205.618 li
107.467 205.618 li
107.467 210.067 li
112.76 210.067 li
112.76 212.409 li
104.283 212.409 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/BWXZIB+UniversLTStd-BoldCn*1 uf/BWXZIB+UniversLTStd-BoldCn uf/UniversLTStd-BoldCn ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Katie Linnell) ()%%Title: (GEO_chapter_vertical.eps)%%CreationDate: 1/10/12 3:58 PM%%Canvassize: 16383%AI9_DataStream%Gb",KM...=n*p&QIL#W)V@A5=HQPL%4t.%69#B!(Q>Z%`@cFFPB_agiVdhPFG+<eO>@OMM,dFbG)/2Rg8/glACTGmUoNLY=Br1j]%h4eaJ`?!8R3aMqREFEYKL\?XJ1lG:ir>>%jP3:SU*0r-+^_TehomLLRlSg3IZo:/cp7(;[<:+o+_pR:LV3<a^NQ[<1D[bQj^%R5'%38-GT*4L)@rD'EI1QW(oK0cE+[]VqL5PEtlg7>Uu+*NifdC)X_!c@++A^^"RSklr<l0rT<%7130mtdX'UZ=8F>GV!%Ib\^^-EZn?%a@og!]5W%K(W(Cgr\,@R@1n(pgE<[\)3+N!iGe[er;:7.H+iFqJR>M8!lXB1T:QrlGDfKN[,DfpZNW#<_?lcp>MLjjooQ>Cm)VGK%//'66#fC[VN'K()KG`Iu1W..kd0CdR&U*9^,98iP!=9";@KRi/q^>kX/ts2Rpo\8(pcOjX+F&(7qFX5^>r@QW(atLf7a6U'EY<\!%OA2u/C9U%i[JfefHJ0F"LWR'^n,7Q*/cW%>kU+2g=>6-(*VaWK#_2X?;;*%4P&\Y(*WbpV;'GqahCD9]3PsLTXf/a^C?'jhGYu9.%1He8n[*q8.(7untG&Q.XSZrGA[$rVZjl-!=rBHB5g[ctSJ+JpAP>4.ATh!c`:s;Y+oil.nDUHl!)k@+Ce"W2"rFU_XA9aQ'6'qJ>%#u8Iq@O*1KG3gLsdif)W%^8/gHUn$97.H9N\Krcsr1`N2V'(ATF@o<d'ck=%MmhZ$744aj@)_LU<WqpM\--O\lk=`1Tg0:#%R@)g%L[EQ6n#l*o?&+^4dBMHLF:B!5ia46'Oms+.&!IGY0HR,T`<I`?oi]k,AX/i-nc20m?k7QT)l>7g)F4C3iO:9Z.(re>:@8m-.h7G$%Ujj+0+3/$r/GSD>pcAcNG9#Z3C/pq0Mgo"KYIZ>mF^;`8BOGUn'a0=-"SaDO&1\"t.gR%&kqe>3-]ScdL4@i:NY*e%&I[LTDoAYV%&Z]*SQIRHkWE'V/dD2fB7M&tn7K]hQ)Vg&rApTjd*g*X89=aK%Ke<4^=ND0T7P*Ul39=qs&cP6>j9U5[h_Gl#(4!dSp^&sthq/Ug%'DIG*iG[crrur/&_D-<oH$mOs^@4)@1`?X`og-`GNd2CcQLHiBABpThVO_G]d?/HP,Ji;fLkYccDsW<^OLaLh]OLXPZ&h1Q@@e3O%Mu;OPr.NkqqVuLk*$P(rZ&h3Jc)\o`_Xkq1j+nl]8@cg&X;TL-Z]8-MD_`ui3E)!'1L3*qpFPXL)"J2WO?8Ruj:5BMf6e>/_r$9h%nr<S;S8_^1NB#!b@7qkMFGFLh7ptQs)&??eBg^$G;HO]&04[e&hO-ErFWQn4%4RVY&`/mu`0/NYGAbaYq&`P\R`X"%CX."=4Z)@E%bAX9Fgnq;%g6u`AbYokc/DVNERJ^LZ9SPsaZW3;ocIN"FP*s8>fk^qr6Ec?krGkQc[ceh4AZKLFJ$9g;^[*WR_gMsnAUjM_@E\B_%P5XKl@E>(I^\faBpi@.kfTH#30(Y@p0E8(PpiH.qrtVtW225Xkq-Uh\T<l<1cdMjGT&\P`DdHNE/>)\jnE5$rcYq=7YgFjhjTs^g%@1@_`%_?tH7DJ$b/Sn_*_C`;7eR,l7#]&4",KbIC?))+),Ouk&3T9(LV3cJ0q1l5;!p#/Oj.8',@"SX*ll,IH>SE-4!HUO+i,9<a%LuCDma`gQ*nK1Y]F61801^a3!d/`;b$sF8Y34]R'1<b%)_>?:e`n0`6>mFMUl;lI+q8\PA>p9eC=/!['D;j+STDmjF[Z150NYQ(h%e2kCm#u[&>MAi4\."Tt!f&om9)rB&Fpc&V1DU]"t[O$!Pm2Im'#U9\E@ea#bYpZHpj23b>)9/PYBUsC^kd)A[omg*pnn?h**#GkV%;INn:SYb(,.j!*<g+IcQiEu@JJ,L3R<h'9R2KK;?8(/[bS^`;9\qP<jhYV:`Wr]f-AsmpFWs,,$TBBDN:fDFB@iDEedK$C\rXBdA%#;nTWR^pLAH('(nD9N((T,o**&@eSLD-&,Ob\Yh7[Bqd1Fg@.8+-ZqF3OR_MA%L<UAmW`IX;:J1,8jLVOcIh6DOC*KF74k4CZ1$$%bfXR'Do>I5<-&/<=jiHi#Y[n9(24D0,eHO7h&tulH*9Elli91W*ENJq^a:mKf#gil7h)<J#W$<@4&A<>9Il:Z%-kmc)W-)ka4OaB%7=MHUb5$-tr"iR)4/=]"?:`[RUilA9nRl9aXa-:ZJ$RYL1X)m'o2M3Vn?TgU3[a(&^TcSe%f!HY-M!T4O,O#.SEI_YpQt]94=+.Q%Z<pkGq*.Q`q'18mp3Bt[*7<DYC?@Q=FcsV/ATn'1Pp>"tkc`"!rIO[[9;I8U+>%H7rBY7s(bcrr'6d.:8)P1b%'P;RK2[Iei!R?a%Qs5oVmrC7uk%N@k^Z?K[U)d4s`;)&:lELS["B/g82<$.RN-P&,?fXA_*$\I"pXoKW%flQoL>LbY*3jF5p<>l/;5SFH.:YKKCQ.:R%Oa#n7_::67W55"QC=LmrnL1mTRc=`dC.E,O@uE"W;T\PCj^\V6OOltD.Ptg,4:]h-1TT7Bk5eaTk#B`<3N<mhJc.-SZ/t*(O:UpU%W!.6/UKL8@g'M(Yjr<%+fh/#>78@g@Uu-o1&#S!LDrFj$,l/=!SQe0(\)B/tnr>Gqd&W&u^pAPAKTn:+N#hJ:'6VMDfmR$sd[Gp]%TP-79bJflZ9WuS`l?Ph%7!rBHNDL;'P?YA[f:_is6,ATGcgJV/-I3(kKY&AA;gTbdWfb@5q`rf^@?)qe7$^f7CXRjHkoH3W1?5a9%Ol/Ok]&GCZRV1mHrDqSmLH."t&*S;_i@b#$roth(BcP)"]_h$b!r:#d-dN?aVL@;M/Ff,bUcS,#=-6+Od9n'7UuMO<_:>&Ls3.op%GTX,_O%;B=\dHSe]Ai*U5J5i,:/,7`5L',$BC1Qu]gd.`NF&:dF2$.2C-B0iNHqRgB?h=lYQa%-7G5(!=(U&"'>:*LN2"bDA15co%?W[D'`GLXRJf")jkrB9[od.a\7!lHY/P!?rn[==4eVa==3VPr\m=;>)HqA>>]o$ZhEnJWF06-1%W?S-/C[93WiD'NNeN%Lu7kVeU%k]0K>i%uup5#De(hob5*em`C<5\4ISP!s`Cd58Eh:1K0qJ6N]-A[V)p0f.@91*4q<_":H1e2-KDN=9%;?.J.1NMUeKMMA>GoI;;a%C1'g\7!YXmT_UA1!R[WN7%EKGqJ.oGX8qZkpp-n;*N8Ah4'j7RQg6TnSY3B#[*E5]osen*--@IqN/;?8GSaOi\eAY%[mO">n'>)!%\FLYZKq.pYhD.j)mu"uh;/W9\B3A2Yb%jCJ2_c4#b',:aaI_,X%qW@XPQ@u1h?NeK[0C5.C,&.1S6o4"FH,<0aT\Ea8?S%fYZ0J<%G'1[#b1Q%iZ8]lD`Z@A!DPnsE"Z$rBhB)PeK#cJf"aCg8X!6gQM/dd;Bl$H%"rY#mAUSSGd4$k?*$qiPa\e%BSr-:"*up:FVV`Od%SY@I$odmSM=uXt/7V]u$`:Hh<K?BT;Y0+a&:i4HZ;D"GnD+NG*;3Y->B8sTRScb_(@Z#/335XV(ZoqP,cH]u59dAZ*@,G=(.N9"/%$$RAsEE%Q`/1[DB%OFU**m9GAZEhd2'3eug8$.(^bE#7B+ktVSBFea?I:T.>rH"03hjL?$bBsZ1XJ'fF;G1,X83rPWPr2s[<u+p_%[@0[h3PS^UaL$acW;N*YQ<,6)N2=FmAi$:SY*<j?OH)25SsO$cQM\4-pQsFBHjA8pa&5,W+.qOK>tql^03?g6n_En&AToAUJK)ai%U"(=tP&1?@AQ@#OX7[Z!R=1*))_*5NG,)-J?!^C8W$6F&UFL'7OL7Gi5tphE,W=iCQlQcSbkZr^,hXH=.^Q+B<b:tnncFP_Bo"<4%,fuQK$RMp;BG8@Arepu[p1,0^qW&dYFr?&'Z?=("_CtM:T4KB*1F8pse+j\NAQp^oDp5,tr[,C3@@er[r,Q+shhuVbIHGo*YF*OT%QH.oG']tHfFh+p@XL/MaCEA3W^Dn\Y+,."DJSsSUZ*\gpL8uT-`cC9rjrUPr4r&XshM#tcZG"1-T?^fofS6Go8F:7<Bp+;t45)CT%MO(O#3L=m2A5)/OW!AGs;\in[/I`:bLWm)8>o_%pNS0c+QH79]GrNa9]Tbk^Z7WD\oN\N-A=gZB&P;-0>[945>qC\6f!_6okCSDi%Xa71)'fu8qg@&KfeOXG!%YjpWs-0_OpN5LN*DZln[fn_IrF=7tVk\G([$)9c@/"c1Hq:LFBXcc3VaIsLg+<ionntk'[b@9IZ<L+n%PB"22I,+.sdbT=;/*t""/J:NEW41TYfcE%!h31V1f5?c1E;P;LDbB1A[4L[Agb^mWVRgK2]5KK#gV@N=S/uf[f^1J4T5j`4DI;Gt%R?S#Q:)J,:Tb_f!)Rl!%Su0E]((ck1]1n[]h9e2&G*%VZg;Hmph;_))PE'hlaUi)mE4--+\k0)JgjrTH;Z.X.f%P!7#9S`ge$JT4%GaPj9XMES%)YA!F?@Ua&:NjqSh>L1u)4_L!B[E0+]'\?"6^#2+e)"td1(,^>^luP3@I#1mY1gQ'hfk8]F4.l8Jrft;NW-sD*?gWK%rh$m[oWMjSl-`dtY')Vc5Qfj-Usk+<]h$0-"I;+9p;``rA=S)-R7KE1p&I)p%?b>7>NWmQ.q)A+lFVJ/O^8Ddg.f3OLBJKlQo^KC%ga@Nmi!aG05I=9QoVC_3s%0se)(*"jouXF6P`hnW]'0lN=4fZM"2d_n@-$,EN72^=JC%J4H?Pg;;GA9^!7^OAIkh';.I<?0&Zm#@%b:FNR9jF6ejtXaqS)X9H,<]Y7I7DpLq@gU;)<3#Q]JR6Gad62@;PR*9f4`D:d7p&sPkSV/BM"C%JlS6s]!-N>l('0=8[jmW`h8+c%?@'??9V>\MW(s1Nrf_OrUIdDX>C6ns\PSO7<5$oMA"!#Gik%3Nc>tM.hsScWh4</fCGLs"joN:fb&G=?X+-W\I2o&:[ru.0>qap*%]*i\Gr\6u*n0-G$pJ*td`ZGXa`-EO00ViE7.utbZG%@@7JjC6_P>80,Ej?&]GGtdjG;/Bm-;?01D<PtuL(CkVinaQNHC>NUG3n[L%F[5%<g2XWl%%tFDMMaCIXehS.;KQ_N8Mk,?s3fb<>')k7OZO]Gmg_R*O8GJl]DP_FUb_7"ch0AeqZBq[X:?gE+5iFJh*GZTQQ?V5%PJQ;98\_K(1K-CS@b'm\EW>es=M.kWD$A#;*DY>K[$7p&\$#(rd7K(,OY9%2qC$h0\#uPTrF%X#cHpn+6e^c8N,CKUoW.aJ)%IF+%IF(Q3afn<Th=D]/;"5ZZ3Qh3D?o^8B`b37_#L(aipW4MTqd\:<rXPE"hE*8hL6L"fnYk@6k\d:Ol/!/BTSU?$@iS<thL:M5ki,,?%@<SI;E4g4d!;>M!^r9=A]pcan9+FV,3H'F.fC_[^D&L/69@P#*1O1_u#A>QUSb2Cr\4YSXHGeD91Y`$t,bpQ#g[>XA2P&jd=Y`OI%cgb.j0Fr;]52(G6o^2!M@2$=`V.X%^KOu+q]=Y#M]p.je6]1T>_AjEF>c1\<J`D0n!<.>9!j#"hgk[*R#oc1JDg2`#iABnU<H$CQ%oif%4YLLbg\/s2<H;OA%?JV_FFh<ZV@eEp,<ioA:j]YoI$4ttq28A;(gmV0J0aOi2X0l]M>,dggEAabNeY)2/]rG:ZWclpm1b//j%X\u9#.cj9-M(2p[W;%+2i`;S,?*Oau7_)j.Q)j"=\P*/r@6#b5AZtHdS[)P0i^R16CN257`8rt=UH"3bfT3_uNLe^^Xf)i^UKUWV%.T&3`USn`X;%WPc(V,YAfo["-_E,VGeZ][P_`5S,K-9eR06A@>Z9p-U"SJE'<.de>%cST<_B9-^^^Jr5$1,GWp^P"+fDMXUn]QCJ%7t0Y,^@-E_$fS#N>@,4JHSr"l<P5URH]]+jJ`hBOkB`/$H^<E*lYatL\eV^@`bnap6T8t4f5k6LEGa<J)G]+f3E<!:Pb$ICW&0%?%eoP*:EGW\$)g:%lGg*>CANPWP4p6AO[lrKR*S\$)JcuNR"aUmk-HlO_l$s7u[\1$>'cn'jimt`a&7gCkOeCpU+,ceIKroPTd)r:p%B+U%["Tt8e9hVt:?Tu;Kjp8,BJf@GkDOlFs`>8[p72U^q`>Aar72^ds`>Jgt72gju`#<"4]M@Gq!aZueYE59LUnb#d["fps..\k[%*_AQ<5"\&R/CK(Rks:l?Q)jPW'L3s@.8VVc"Ys3?6qT]tT<uN]9lWa/*7>[O=emtcd[`G`&%i7F7TE?_$E6sl</P#p]gDB!eB:oH%:VC$+Eq!)%5IU*fbZCXW0+a0@Kua<q!QbG?nN_@$:ne6&W=2s1"jZC1,ITkl*7-_WZnDD2N'J?*TTrO:^E,>V(?he$HL$jp![oeb%ha+*^T\<D5W-Z!O!=8q3G<l$gYQCJ<?k4Hc$Y:e"YJQOT.h/6!#23?j$/#]d@=e37@7D_'7l?[B#1gf0FQ16M0[VlA!S7"]/#K/B%d*1'Kj^87#/TF3">%+T79C:3VLEm3T&nM[e>`p!s%S./Q'$:p2(<RK:)Tj&B*m,VJ,0FG$+S"MQjjdqYWN2B^LUmaES+Y0`\]9#F%cr8Q5db+VB2Zb!P_b=J>DB23eEdn=Yh#jJa5kuWY!bF%i\>D,k$-RI-0GQ4-%,V?u?p>j>,A"),<LB7:&.ZC+V/a<1G[PduYWref%U,&)]Pa<<48AhdL=?0cr4>:)LrkOI]@*Zo$V#[5i,NWV6(0E[(/0Ef#%1L#f7UQnG@"WU'_?/5$DCdK3%N&%/`s6Z(Jm")K\<_-R%K5(E$UeVS:JHa&hPmd<<"03F29a>((A$FN,*$ju1dSlZPCO5hJE)C^GGYricJ5LtsLdSaR+XU&U@BP\5eOZM%Zud&i2MsC"[p&k.%p?4n'+=Tf@O6H#$1.chHe<)&kNp@0QO)g;EO0Xhpn)8A=!h]mR"f2AWh]+qnJD,PM:a_*.SNs;B]g0h-h%8s=rBLfX*?d!`OEmde%WmjVm=C#`@GF+O`e0Z;R_3u%$4fN,nWKHEG0eK%],.kdNjHA&&AI?MQYsO:>M,MmF,dLm9C6<NOaH$+#]hASc<@kVB'ss9`MMZX.%`?M;6GWQj_8%bD:5k(=CA7<m*U6S//bE`o\/R)Gf[qp''k-EMP];mK$5o\^M2SQ'a"TtjmYA&R@#)`YVZG?^oq$TYobcj"BA:nYR%2L)A./kd-j0u%OPX)*'Hh0$-MNKh+f>K_3`IK?@hD5^NA^"Aqh=+`&i98:cPl%N.tUfTf7T3fU%>G)p?*KgMPd<_J2dgWL><$fYb%OE?_$(/[Q2c68jI:XXjciYL&BDDhh3M,&]Z2HlV##n`%,$;sR7K]3]oCAK2T*`IY2i.;bA;V6CC+leI($AfZ.>>,)3P/meP7PmU\%H4Ge"707.8,&#@VPs[2@BVqbrKhp+?Me"EFQ^:n"=duClAqA2RH,>.'J!K+PCo:B2Z(GJk?0/2o'dYqF:o9J:.@X6oW,,?Pg,L\>%(!*Q/BQL:(lUnXei#YR=0j7_`5a(DoZ*e:;)e=!T[&$jGn5a5'0@Qd?OU2N>$jYi/Gk>HJ#LP*,@)XZ9Zqlg";(!`d`bmju*gN\*%?IZ%27S->^^W8trO?JqsVdHUsEb8YOKpS(<$Kd,e?IQ1\;.;!Hp!X=Ka;;mnd'<]n11#OKnRK["Y.AVp!o5HfZQ.aK2F>P:d8VB[%+aAGjE(Zc`Af('B6X0!62JMg#;IFcI`l=hlfH-[7iL?0d&u^spFJmeoLo:*<6Es0k1[sW<,qfO@Z`C.RW$g=bE+$gRqMI`r5QC:0%&c2r\QZT*'9c%4l^a@U=EP=%s2<@CQj\86nZJ[cb"P5rU<N2k?5.K8N0A?_5e90LK24L9$RY.&'ibam(gEbW6^>GcD\';b/h`TQD%*.Vo:5lUokTPsj"1?5!#W;M9^T"g\6qE*rEIkL!ZpCi(D7dS=J6=j0.Wbr:jr;DhC;*$<Nr\7!!ksu0H+O%U]!`A1Y,qFpjqAWQq%O?ZUZ`O#C&,COq@Dr1Zdc_=Kg<daeF<GW9FbmTf%kgEhg95tJ+c1F+%ZfmULrq>RS^4P:qkPmfN-h-`pKN>KMX($AHTOZVZkn1h;%]`KO@jIi`gYYIs8Krpt:'c8?bk?9&%ka$0`SHk=DHZOKH=tCl8!F##5[D#YH*LDNO92TL/!nka>Y#FoNJ9dB&o3b$\@f#1CkL9BR%k;Sp_ru<dHdb<0OiFB$110b?+5oB,_?HIBH8Ak-0(d=NQYdkQa3tGr3m0S87?@Z_@a49hOg!I73QK?-!W^+!-3S7m[1Z-QijbEoj%b9/K,&B-hsVqTCJ)(dLtQYlQjn6[P4=s=S4&@OP@C-W\hfE:+&J4uSH9ON#M4CU0,;(6[:Ii_-am`k!5>/np&Jl>YPWpuM-30]>^%_fdkMcN&6efOnWYFr);kZ[!0qWpS#$`$_W^%.B0^"I'@<OdnEglbP/1l(2\fr#B>#ZB[HQd@MB!7E5VC;=$@j#M`Yem2;RijBGA1%geu$M+J[nLKa44fm0`dR8#VX@Ks5(*G#A6^%G8%UZ8Bk`S9>^-#;?QU#u(ipE7?E)2F+?op'ad>%cUTtRiBWR)%ELq(0:Re*bN3>%S\3-\J1I<9HPqL<8'$R]R`tjNm<XJ3;RF3S:@hjWaJ@#A7<P[SQ]++``p'(,-J9lZ;&&#Q]+Dg,33X<`D/7L)"qi/gB=+061RhuS%>`*AW,l.,m89#NO\q?i1Y`5P$*&ADn7"P%?&24a-+g7hZ3!WtN]HFm"),N&X9Z$-CgGNAsUfH8)g9e0mVi;=R$Z#m_s,kqar+5p0%m:@CpLO2M6GqcSh4I\2a6MHY?o7iW"aW,W5NKH+qh_'dP;`543p^FTD^r5O+)/\QQbdLS&PS<$tkub;YHD'uo4ul8-pQ?+F-,=[`%9CX!hflkqaUVVtmbZr"k$Z6,aokk(!G#E2H]oc\+g+tuJ(Qf57aI^e"*mA;T"M?;8p!%*k#Q?!h45qc4[tXI\rNb$J\nOfTbXf`B%mhURPAb^QBB44]*nu1aKe)X6lJ:>;p7'9aQS/A-RpJLs663smE1<'NCD[,QbdkKV"-",P#YCM4V)mYN*$f6P[6kU0Cn.qR`OHOmn%<89nB7N&fD8g%9H2'?!e>S#%:UNmH=D?<_Ve&)E,(TTlfb<01!QEP8F&;)V=g(A.$EsJla:2h,ecJ$&\?gp24j%89ZS#?TY!FVZl%+F$]7+60rjX!>tC7A6Q(NcECK;?n8a*8"j-qi38<Y,;I+?_PPs[MLBA!t,Ctp-*_g<l>-n0Z/PODf#ah#WJIa"(5+!!C>iPJmRjf%!YRXbX:k^;00=]8g<c?1!.la]Od]T@FBeukD-Mh(_a*mQ?rn]!Kn1+4hkS"Qe0,!S!h&X>N3a!:^6Srr*JGHP634X@%#jRE.#:!'%O7pDt";M]KW.<PHJ7'n#*I'o$"nO;d:k6M*"EDL=j.b<3Z'oY?]Q").--ri\KR&SR1Cb2FEeUdFpD%0D7b2i2@ok^I4^Wa'0I^B\%KOp*&V-$ASR7.6F&7Yr;NhTWQ"iB5SE*2&EF*euS4&E<(*mYu2>p1[c_,p#hDuig%Ut`eqjGV+5dQWJt4UgF3^&l;6nI3>VRQCM+%Ehn=A$;'Ac>U3XD&<tt0'JT*0:sF.D"M06,ek9Dkb#Go2LoZ:%*7Y4m7Hb)fC:;MioG+d:'hQ0u>6L):B&uT<3/B+SKbq'Z!\edd%P+j(0?rY"e]eCF^,Xq&%1VKHoWaCPl4\sI`c`C,PGdo*UL$sa'(gonX*B:4i2OGPF]*0dGI*\0:#.iLkP$qBV-aXThD!`&J(132>%fhnD5Lb2b;gK.8d"(U"VHAZ(U!p^s:!OdPu4V2tdO$snR>L*I'mKs>NTG@UER-7W$3ant+6f4%E8)pb&;(+I@(`gPt(n/NW!^(Xg%)2=U)5gL8$&]^XC#du=]qf0PP"$i55pHf+9,A&EW+C01V,dQ]'D#OD?%_403^rG7&g#chOboNH1lcXmZ9a$$=W%Ne")H0KEJjn*.%\?=\-!WY#1nAA'L<Wchb']%;<!)UkdMSff35aY96/mF-h4P=g$>GT=J=Oan5R&.k3$p.$-Ob"4J.os>KGMiR/K$2#j?bY[eh8Wkb%"dgHL?#!]^W@0O!9j`(^>e)UABV'l+hC]CnSg6*'C05)[oqhk"2\&6>>rFD;N&,lZ[LY/gR+';niXPs)LSC<Im0^!@qLW@,`Ldi^%#^a;P1oanZ3QKSM)^uU@AC3?C1cuOiQ=(`0>M\/VadCe14EC`:"$>!Q`0Mo7&'BO7Qs)fU>DW?l490K@:^uNt8d'P6m">@pNG0s$%`_^8Z$3B?@cU+$dmJs!8+;TYs6dNQpd^j9!JHC/KeG^a7"AYc&p!N!i.BnkI+EdkH8-m,:rXf[af):?WA$JH_Y[:U&<q^mtdB7NP%*WaUlq%<?lVA?riI3N$c-t6RtH.kH\WHDW@7H>GjhLGtl=bJC54GE)(ilo7<'hJXjG[bnmX#e&[7IOttUim7KKA@/Zi(FmG/#2WI%^C>^uhIdhP#YDdNkUC)]8#6hN\@I0H]k=\5o.a*X8$]<Z1:I7D6JioEJY=Gij/W=c)f%mJIG&&)gOg-^b_1PScaJ#OF+gR?eJi21%2Ek;1d2SJNU&r3g/fe$qFJ;S6"(-86M7=:Ub&[]i(YW<[N\N)*CtG%B"pU)=\VHZ^FR*/>5I30rai#40C_1S3fRCc,Z6S0k@#LTF%Q#?[gE&8:@^B'"<kQo@,KkKkS"0h$uj[f\ndh1frJWRit$39<poTU&CT'jDc@Pn>Kk5)TSM)uL\$c%`Lo,XO>aW9:jnJjr)CR*c7%/;pL*m#V:[NXY#a]g9M`"U5(R/4@Ka+YGVPI8=Z_i)m8li1Pe0g%Z.`@)Q&R>c>>%"PTRVOY-PoJB:YsG2j]G\6u\n?p;es!eOPj%$GaIB%QNifqP/M@SSE7JI:!!u55/T"`Amt')i<S%e171B)A4G'%ss:)6NU%'Dude&eH%B,^q_^a28q-UbZp_N%l^Eh"=rX:-t*'-%J;qBTAV0#_2:)dQ!BOs"&?7\5#jqAX!dh(P%beo>(jZgJ`,$%u(.e>LdG6iEA;h5mY\AsEMV.8]>:UHi$FRJK?onuKJ7O4^IN0m'%XanA2JW?[KW9kq[Ui!1[*[n;rks2f=!-EVYUa$:WKmH!\*D"\@*VdLbVjn^k5RX')N;ssNZ7$oL!-J0),X@b&`70,HH+23fjG6)3%dI#d(Yfk/i9N^ZR"h:[gjt&45;Ap3[SgZqQems*F5T_0g,oA,O!$GA[+i"J%h1;IE>Yh9+!)2-0K0ps(/hcM^1:W((NmMH1^GO8/%ldaeK#-(*rV&0a\HCA'kWXt,o3\`o)(P*.?H^ShVT`U+k.7rM/4<5*/E3gu!@/KJ'Z&pNa!hcGK/e#]f$[a1RN)`1JJ5I//10DU2%*cT2`fgtNR^lq?`^fAkg3`2.+*5HBQ`5n&`(>Hm8V$(II)!GYPM_$1Jkc0KX7$/=.":(+NLhrnt(brOtm:IJPf[NBe'b<)'Z0[@H%g'VM?ZAPfJ=`daL'-\2fGMi[O>NL8r#^+9%<]9H8"#OGpltNt&E-ms_=5&R")k`_BN^?CW^_lfo23P)r@mR<h6<'HT5gL$M'I]th%QVj_?lr5`,!63GX_oh<p0LVS>Hgk&T^lIEc,-eYQ0[SCm+)8[K@L>qTPZ[<O!6fg0njXM\X'c_L!5Fg]#k;,\]jQ_J&Bq?@.,f>K%U'cD`Y+$@VJn*&C*(gI0p0e";/-6C+6:H]@RgRPB]0[=r2H?r3=;*_P&IQH@NGM24&d>]ZH;6k9YB\@.o:ghU"PQ0mf"(#T6;(ii%OraU^4DbXph*DfCnQPlV4K]5RJ4Q1\f2L29<af.:X'uR1JWe,?JJ<;J_3V.PcBf"B/4*5!_>4=#MNjAC\2":AerH^c!O<Ge$LB4V%1ZGJ?"._t\@U[@;Kg>$#e(,uHH90FBe`I4S+I:":IJ2_g9G1L2+`lE>k2*L1mJ)ej9X^uqo)L_mm.i-0!2/A0)\hKQs!$m&J@.44%5+-t>/ETm:g]6su3E>Q'[Zc.rcVl_+U`khm,#kNo*(hRuBhOa%**4I77ScTQT_GKhKk<`(<_+lZmfel9&C35P-qsPTEI@kTV3E/E%J:p*g<CnTl&Nf7`F?R=FWAOogjGN!XbAK[Tf`P[uG6?4`4i)8$V\3J,gC#Y?,OCCUAEp/Z23r?'X;h6DC@?Z]W:%I0iY`'A%O/Rg%`0r5IN-1GQ"0`k?:0Z;mf+'gpE__i!0XS4ULJa&<&+h1]LQN,ZkZsSL7Q$>Z%_6br_^o(0QLoG56FE:QG".+j4]`:9Bg:LB_CTOh%@OQj@M:2YCG&4i&;eX3:aUCY/lJW4,PN"#A+`TRDZXc=['$3D=*E0g,4t2)99Y@>c"i4=_d?$c?;T1[HnJ08h@c_6+N[0nr/DD\3%N-$S*C]J(N+Uh'e9uTP0W07qZ'F:u=h@dhmW=?E!KOA=1):<GG[%Z;A!/l.qrWtiQY00.9!(mNkS7cOWlNDp5f3"s7,>Omf&AKiE%ee:BSnkWZ!KE;-7U>Ik@irBp!g8C#,I$$Gi0^M7agG(&\,Fb6I!dZ>1$U?]UMtkqr4+R9-aATQ?`!dn/&ul7+@&UC6)!u?bfGIme%Ddi#.+u#)qel)f[!-E&!A8('kW6X>C=rXE]'YD6p`gSr;$,mbcYieDHhI3^X='*#_;nsqhc?pr=;s^S42Xgn%E>6dYFTiVQI.=f5%1GD5IHY'8[7KE:YXZ)8B3XoSiMU<b3EnS(VA*k_D+W7fE1DmQ.5P#?ZfTLat21)D.!-?"RH4<9S&KD+W(et(BQF<YKn'q^9Cibr*%%f@H8Iat"s5VXRI5!"^O@q+\1Qoi)n(*21V.^T>WViGgS7>T<2Mp=DU&e8:3/7uI.h]'lUfmSn_/Y/$La%(^+q'uE'42B;GEN^YW%O!8uV(ND4!JHiT^.GOrS<E+U(;)p7\nP0'e?<cNZ!&rIe_@P<h7!L\)9>@/?c!^j."IH8`5"-;<G[cb$7tA#eLkdD3!.[t1;7RJ/%cpi6]ie`2dF!Ug@(jT[48-e.OWW\mX5\5'^%L3kB?C`i6&i1b7H.pq&`g/fl!t%"g!Ed?l5/.=N-*,RDa3pJYH&;V*W_c,q`2&#Z%EuckMB!<7N)G1q>0cSk-jln"l[\Wo/bWQFPb@.IcLU$7`S6S'1':X_h9+%IiPHfBUB.[(6<P>bb9QrUT8`c]_6F:iRlXa&CGn+o2%h?L6bm?n;*!>rl:CH/b5[:3A/WKC`IA$"l0d1gT<JK4&]iea^p+7#_3THjV$os+u4`uY5&?(j+0'T%?:#IeOK&_D%l]2V`EgP.<L%ZjROWE%:jhCZu<s"QcEbnSDE/e!1s4ZK?D\Y8U$(YfF19Iu;GbJ8isL,:uZ7N;H[e)mhBIZ%X`$ST4sq54jg+_$0NNBg\U-Gh@R%%Km)$u*QGB8Wm`^'#,.k&M6mM#70ptF^sPmg\3oQN#(`1cX(Vch^+2sfU\Am2LH=g2X*dh3l6@Irh?t_E@<6Od),mh>/;DZ(!*!VE%'u3@A2L7AF"/'ET$"Mefe6#,Mngqdd<fNi6";0^O@BlY`a6\gMlI9"U$%E.?Sk&scRLC1VicbOjr72]eP$P?W#@oi_WTL?6,Cr-[%.j5cFUra3_c;"i\m"qQ/F0MR8R?oP(+'=r0N^P'3aA]XDN0PF++P<!s`DG[(&Eq6CM!=I%Tfh%N.1D"e$C3Xtd^s'!:4jpX/N+Jd%,M?ipQ*^]gOAGsebU!/,5p6%k/:LOaF.n/R7C?Fr>\GhQpL(a^\$L4W*l)0"73sN\+iS[kWVHu[@8pR43"lN#^nE7>M`@kK?smUd%T!)Ob+,Gm)$LCdu!5<)"Q:3-`PGb\@))!Y_cn`t`=Qg)#2be#sU`*4[jV.mG<=9\3m@?N;$<9]i8f2,TOiRkkeL=g#+rIC%cpB+8%F&^d?:*Q7!0[SE@_%:RertCNWr$7QsM#/_LV6N(>=2&I3;..?/JK4$s==0\n>KgaH$+;Ik'A"g:Kk%dY$,*?*/)j6shHg1@PYAW_%P!Xtu/+d(HNegoQX"+Z8&]\':8Nk"C,991\\5RG':3dO<b*J1E7li#.XB9#C30\8kT]FY#6mbQl8*ksc0_!%("MWtHTH&\p">+%D%/ZL?>jWrAa^1_dCRiYVX8^s3*8Z2`.WDr+R%.8$^bH#bJiY-o7#8Y`RjP$p.fUCV=bOVZ"5ghQ]GgIhLV"!57RXj0taYQTh>g-da%j:5WDR48@l!6iT\6]O5?AkQ;YcD1HUQM00?>NS"j".`3Ga;[Y?-#uHg,jda![u^@S1,^X#j`i=GY?q)8qQp=>;Z<H6YnYQK9h^hC%&5:;aG*[p>g9T+(;LVDmrBMnkQG@:?Pf?1_iDNs[1ZTCRd4J"`Xf6(3C4X3!QAaL\bGFqKhLQghLr<<G@k;VuE`"M?'$nm$24N*#%k(Iqt*o;__Y=4EkanA4b921QohOp+s,=O*P'lbh"l87(C:)%>'3BESDAm5][l6K*^.Nfa=Z3I7REro!$-W9W:"H4>RO&uK$W-(O$%;ZLVij2S5q5Y9;&h4B0`.$GRJlktHCD!1>V"a*IC[dt&>'Zg,2b"F(#BLbuZSq,MQ$(Wb!?Bn^0'LZr:40W0cGmBT1+^FO.FTOE&%l2q5N&E0&I/UbDGq0KX5r.j'DL./@6'J%+D7CibplAM%0891.=WXr!MBm&<dE$116P^[TW=U>2,rtsrk$%l>'!n5@J(iq!<^3,t`%=0']bA0)F"-#a*n?G8V:7nHcI>9[hm+/mfDf5[K6OWn&AUJia2m&LV*I6+;1)>nef-<BMG"O4AhMLZOWjQuDS)[9odNatB]/16Pl%(S<G/Z1SkKg!W0P'(]*qN&uh`%f&YQEE/!a`2a<*FXdVjP&ueVk0aI.W/]dc;pKdT/3"Ma9n=t..m&jdP&6GH!!_.tbYLaBgtq'i%lmPMQ0Wq79*b&RI#Z0EnUT,LD9_WBSOUGHK)ee3+]`;HSY0TsXL"m`5H6NK6ZNL=3elBVe,+o`CV*pD:6"$3Q$_m*I(>)dUd$&bl%/+RiC=Pl`e#mY>iL`1:BcBqd@>ihFg3:e975k,<t)EsF%.g&;IX6Yn5HD=7#ZY3"!63f<212V0g"s`G++=iU]ZdNDh<\W#b=3,Xk%kr(&^ZG]556U)oU>Va=kV#!01SNqB1lPa+[(IfOYe8k!e'r<]_Ngs,F3-PquH^tkYHO?9CT"/1O?,U!VaLI86@%O9%kfasbHj_fm%LA@W."jZ1j&gnU!99T)\+9G$(Y+_b.-3D'L$>Z4K=tBZ<.<AKd*J&'7mS*1#ZUmDhh[(VF'g47]Bd6M7QuTUHG)FI_BkjrL)OK(h%&H$e;^p:9V`):)ZGNd=GUYLdDUoLGJJF?O$%\u8mD^eKu1")sd=RE5f$S,QE-9I*BAUUE51>l+@';.7VJ<S.`(t]`]NjJHUDA#"C%:t"<XM?!lseJK^tmX`Y*&NC&m\t*),-&f9sOAkj?,ZO21oJ>rl%T<34K4Xe9na.a+%$iHR5lkk81)SVC&5_dJ$i"lOAQ.(kfM:#O%[K=bd/I''!.[gDgmUmJIbIn`jZ-'TQ*^PZt'eg34V(,5OUsupn@bP^3'-1/?>BXD5IJ%FW?=kU6\Sohl))GiR4i^[Y4U$".0lN0,%6kcMqgZR?@"#HRkf:-`@=ZT@1k"c"lMe$5Xo&.WWW$6rLHa3mV>#o!aT5%l$HT*pF8jHT"%Q^$l8&go$Zt%7D;XV<G#*sgh/9=Ha%N8b<CZ.prX"[3cOfXc\pMm^GF&mFB"$KEOAm%4s$W[<9`<RF:lYKGShnjn?XX5FJtem&!q1f)EJ_u\h',7-SO[0ukZ-]B<%,Y]?D%@lUd5*'n!^KZ^S*g?7tYDpp-V<=)'YQEa3(d*9Z8<^e:$q?kmupelWn.6UZLW9-o3C5s?/$:?KpBZ]XUF?H=]MS@`bm'['iNOmQA%Wj;l%mt=;nUoG7F[WWd@l,"fAq5UNWT;A\qI30Bs,,km8CFN5dEbL;B!m:'&3R1#8"FQd_a<\e%^e^fA<FMpl*)sYQc^t!)3m3bF%';(=^GPHhjPn!O?^cQZ+)QNrCT;!>d9XU,JicB--:3e-"olZ7*7$P;=$''*87T[1O\MH?Hp15<0k]MYUT/31G<UpUFW@^sZ:EPMq%==TXkT??Cr"KE0301V.L.N\e.^9W@t.O&gGfSqm[K]NEH&E%.h&:g^(V&BK9=-3;oHp5$p;da'?nZ0t)&K%KrI9"LOrPh/iG34H8%'?[<G3GZ,l72qZO"EGo.l^QE%m!o22:+-/j2\AKE:?-X])]sZiUi(eW\R&9.=\(?Z>BQY?^sEYpCm?+J@%_CZ`934aY3s*6U]WV$%Ur&VR(%G0*6BM`dHnL#LWbNN19`Q05>.:U&B=\2ge']OcNbXM@lKJl<dU'2g93.1ThQ!T!8o@8qPdMlH[]tX1:fX%LSYJj&>^^_[%/,t."7%HS&YZ7eGjqC,no_m$CG*@a.[2F;um&<(M4^A%!`&_8loA^E"k]qaE5Z][L=gBPY8o?m&Z:>k\mBd3iX23h/-1d8US:,j2%!s?A+LbZ^ZN#aD""sMMP,^'s>YpbC0Nk9m>QhC0e].78+L8)*Pm[:-dh<34b*NF"D$uRD]=ELah)Ur'ig]?hiU,-o^a$B,i'MsgC%K>>hY?^JN9^V9=Zg?S)8?f/bsl9#q$\?b)Z)MeB3AW&BEe`SFbTYsqEi9R.BT:arZ*I.F8;a7lq`T>hpGe-k*%Gk0M;5O#e^bXEr%e$fM&NQC=bnP4_G.Kq"a^4(k=h8(Ap5]*S.F<'7)h,e@H!p/_n"b?c@>t)b4J\It!&]@m%PSdQC)J&TNir)pC0Z)0(:9o!'YFjXR%K68SOGj2#n3q-Wbe`G!E-JmG;b76)RhL;OJ;W=&84n].]-OIq$i4Bu86N`rVh0/"b4,JK8jm*RV$L&#%a#c.Gd1.Wnhr/p2e\Sc9%cJ&ib+"\jjSoH+nhKZ3kK*&8<$,?cTW#@uuTAY"JXiqjDj?Xfr&0Irc!r2VX8d&<QLQ:E:;\eBU?D$\jQ4=m-RlL(kN`b1[jm,66%64Ce!/'jWq<Cp[rl;7"Z&$^qVPjH#EXsin#)_YGrG0]uT3h(6o>ohqhP'ts6G>WWTTt'E(&(f8h(a)X$I5<5X4,C6ueU&)r,=I7V%*[`3+"RL-DkjeJ(J/q;65sM+HB%.WC6WNdBqYKj"1E:.WG#T/*YdcCtDX<t]bK?Hs8)pQ%/^LrO_?ok6R*VJk%R"#d&lYAo`R8gP%k_rEaX_]JIUJh<0Y2!u4FM?;dKW7MZGbC5*&_)@PlP!3Rd-!Q7kS6:ALn7Q+(s)m#;%H7(fMu@-/!-Ppm)^:3A:G;j.h@5n65]t4%nu*j,$*1ld7g4^MdIScb12.MiK':?j1nn7Vqtc>8aHE'pGUQZHWtG[<oVF7];MV@/5urdnC$@0u.tq4:%&B9;;C*7:J\#2Oaq@QN%NZqK`Ysc\i*!g>?%O30HfO%^qTcD*d+rm@AK$LpV3Ii>3#Hee4G32-+HYPghQjUu0Fqm!djh.9?7l$bkV*f>0'*CNZ!Wi.\l*Ia(%(TDbcGcXGrYIMkp*W]88R07*$/k%0%01Jr-EZRK4o=A?U8"6)&ertIN,'>Rc`sd'Ga^[b;1?@aGYaP%3K=WbK*D&OMX[#t'[La3X%;IeX0Eam1HHQ:),.RlHRQ&%XdajbmD]%&%bg)a$^'P<(9]$,10?P.uu7OX&-QB(`M9*:I.N'",5<@!J5JS%=eX8#SdjRZ(\9WWpF%fj4SZ+Jk.tVlAB[>3Xm0aY8p<lRK+\lWYg4^t#n#Arfuc%)Lfu:/p\2THEM8Z4GJc?nq'%I@U'P!aUF*O%]h$g=!VK(:t%:@+eF1%V/P4t)QAD,70:sWH*M?r*BE7f!QY&i&U:LrSq&'-gsNaIq4/Yc0DW_=oj2G!\UL1AHpHHG98B\l2;0)7VQd,Y(@N#^h`TY?hJ]7c%[ao>Vg\kG6r-6bGHc>Be\t'mIg&\L6mGl;J*Si4%.I<@U_ditHH.MDjL1q1%42p$r]lA3)IuQZ&;S9GTD;?]0^?i7s!'Gp@H`,>K%+-Op&1&ng'&KcCVGXqs7[AnV%bg"2KCZ*+=noOA7]/;dqc&KSHBo^Kep?C6i2bSc%fm,&3ITPqGcB<Bp?I%7V^g+Ybid>oMqT&'R%k.&j3oNFLaV8#:?1QG5OPQC&oP^C6Dg>'fddAiSUnRQl,l(l")RWj(fC!M!dENXkn]_i2edA2t52$NsMDZgW4k2khe)5W=$qSr^S%2ZL3>e*=8\ki?<Y2sK`ha2s)n^OhnK5!*8fro(@MDD'Si1B'arIFR[9_;J:^4;R,n7dMWBR;_9ubF'E>k2^97Y?6M)]KCuJafq0s%)CC*CFu/m,f?:iamG<_i^ijXIl:j"n>QZpCAio%L5=gRO\3J3^:tFRY[&2RG%f2so302Mc)[)8oZ>f0d>'a)Z[u'fZK9&a6\%3Q]%?*rd3U:pRp[!+9!^^9Ekn$bfVG]2^(^"bW8oaLS8)kB^5[gDdeiSGp:gOspCE0"/SEGeCa[gXW7*qFS80'$5gUGWDS.d;_qF*O"X%qLAJ`a*d1d%C%-C&b&M7"-,I,"^Bs^"[]c[K[I;090]cs,\RKSg2(kJ5/F")1)dQa?A027?$tnlCX^G@H*p[6(iAC/-X,-\:b6)W%<o'5;:JOCD\FMXrg,5l.5&n)%$K".a"fhcqrD%iepWkW*@rg;dO.H3J7"r<OTYJ=dBTP.H-O]QTrB,\eFYKT4n0D_FLWs?I_4,33%q4iu*be`:63m"V[mu>=Y0E8UhCj6DeC!1O"s(g!MV4YP7eo70hP9&PdEmN-jV`8L.$!pXoag'kW_or(#oCBY3oK`u`mG<(`V(\tr%+.40"<S^U!`>\P>9CB$bmP'#d8n?IJ'5j`bZoKC72.Ma&FZXeg0*S)!rn<"[N%E&>R#H8?c,bLE1E!H!3@[#7DiN)H_\h:Pe+]]P%J5tJ^472Q(dU!W)Xl#_<%,9gKDE?&rHN2[3F+%NZjjV.@gQQDVaCjc,1rYkf,:@/-dr?&Qinktg;_n!e$+6lSP"o5U.V6#OBst^S%(g;iTTk_@"W=78JJ%:X:2YW%NF_c>rLgA/O0D7)6[3tdJ7*sO1ZandeB7<<Rq&-^QV9I3*\qHKRFskC=(U8uDk-P&+E7XLM:Hu!Z%BQ=4"g5Rh!q<qWmEFX1PDFE7sZ^!@Z4#a&1G)70i<nrE]G<<bn)mS1gCas<]p[%q7b-L;ITA-DOH*tue+0UOm@c_h0fCLEu\SIlt%:JnXCi8uHqT=d8o.[Z0;=g%Q!R]>fUPIo5bQ_>D^QEle5=`\Yi/j!i/pE=)?/EuiUc=,EuS',=H/iNXo9YSSrB)JW%?>Ok'qbXCX%)K_-Sg.cqSB?=P@2PY-k?0+8m>DMF`.a"f:iN5992D<\S0#)0IkUUHu=+2N'm]hYM]R/c&ADP["<P4=eR@'%XZ$/i3euJ%,meCqd%FX/mnlf-mb^D$G74EtF;[-qP);Q,e&VmB(9;!/`t3k+=5qtV81r[Nimafs[I^FFp7q,_-Y[q;0"/Ll0-O8('R&P-'8Gr`kt(X&G"%AaI`MGL?4Bq3[X!0]D&&\<P*Jr+jBbp2XBGUtM8[-]<lb%*$L<f5OYe026KE,LT7Hc"HuUIbq@7TE"nsg`*K&H8>D>@Nk1A::L)d%S.8Ii;<2>peS:0"+-th\2n5`H,jD_KagF8MG$U_-[hEV9@9+qbCYkFfR/EJU>P;Q*%'q/BhBeCte^aZ='Z9"pA6fg/2ubBRo06;o%;[tT:-+>=Yq8DC:m=29/3Qutn5?dl'R-'AWLWRla]'QPgEgTQ]bc5JKs+,2-qnH#=Z\6S1optltPf)SFADIkblWF_(KOh3rNng"B%R/EJUMhecVjY/35rj+f=4A2X.ZGtpneo2Y%)Rr0Ui+<`'[8m"rSgL`IMt$0IE(ttgs$IaKO5JLOkp,Y_bC&DlLt63sb+C4hPG]2P%aG5:aSs-LcBM2I7i4j*UE\kJ8BH)l<Z"PY*dHX(!Cg=?,6!JJaQD1$im+KCMjfrG;#Amts2YLrscdq!FR>3ilQ90f8@:h)MoDbL?%]T(Y+;4I'iX>[VWhl+dhD%>9LV4E66o'tOVG6"dT(!C`K?-qb`g4WJuF&u-mW@sPcTJTiRPN<a\h>X/'a4KW[06[=bEGQ[HZ?`Om%59t>>qjq:4D'+427JOCun)<^u\59hP-/7fn.m7V@gA-e)L?TgT`jI,Bc"M)+[j'\aB>f`5plq/Ygo]$]@WHA>Rg6k_i,=#b&@3iM%e.)?@`T(ODCja2Pop=WK?#'$k$&d=k#>==,MVE\X4B5S\)pS996%9"Im/COHZEKm7=<pf1I:-*@Q!5JcO?60]^7`Wg=:.Ipr7Qn]%N%?rD1)]U_RZRbhB/3q'8)>CJ,Pb()q79\hp"2BnN!n3NlhpLL)u-tmPJd+hXIG7Aq`=c14`l+43'KoC2`C^h6bqhDq4BWA?LGpu%X-dYT*%,+4hW?fnij<N^P<Wj<ZT1ceMrS>'/pO&U=SJ+:1n,`Nbn9N]c.gMARZYi,nm!M#8'%a!.U)6+fB*?a[<#WC,NRB4#<1lQ%\^`l(RH4B+P>sOF9<tlVemQU!ro$aNq4DE.\u_m-XnI)Qp\")1g4a^BS]-Y(VpkZ%0;"g/l.HoVmkjQK\@L:_D>*e#inQWHA9\.c%mW(WTh.W!o]@Ne4k,Vo,F0eHLr>S5uhWZ^gHhY;X9CK98XnHK/hM69hPE,)@e(2530^5.j<jbX[DNg(7AE,kEZi"^`-7-,mao0[P%8<j#$-2Co[3uK^Hl8iuD"TPgO=cf,NZi_D99)0;UXtAO0CJtMILSj+C.Um-4%dke;[72?iPL<4$6/$uTH$BEAr4ruYl(PiiH"6g!%?;m#V4!hj=kG0^g>idhB`7Fr,J>`AQ>\4F(H(.ObAs9_":ZZFmQA4uh.Z$OWRn_aOPIK6+D)Q[/:#9KG[or=89h-KdDF=fM-40A6%-_V#MA@.(oW)(LiXElYe7c"H!K/7>5B5"B8;98dUL<VM2<iiB?eXrOtImmE9)&bI).mTCP+("b[ZdTs;,je#lme,<j2p]cOe\-%q%r2E]N4#bKX>.)%b=f]4#gZBjedHe)\DOrr_hq^BGkBMJjC#(mmC)I)UC%*)3bc/LdUt,KdoDM*2s3:_Ef#JF%a.Fug/m^g2kJ(m%%aT(TVPl$@r>9EI'[=,[l+j83Q!aBCpo%/b'J5s'jrKEFB3_#AOVQH]]oI&D%CJt1\iq0tt!.=XChS_rm<EA5QS<BtiJo!c[Pmbi[%Ck!t=8ESg$Y@Dc_L6MNVdrdWD[V+^ajNi!bM/kq:rV8Hoo5f#>0!7;n=;(8Pc;U%YfK;TLPLN^`0]49)21eP#@qAs)kb]U_nh[RC%C90_r]1Hb=m^B`!C94-Uh]t';8W?_EC1(^5:6qhqf`Yo&*LNB+PNFjh4R]cNQYgg(S22B7I:g3^s'?kpkN6<c*6AQF8t)B9FbuHe%;XVTf*%.Mg0hhV7UqLC>!,\U`kKc?S/q34_]),l,4tQ4P%^X8ikH*9"*4Nu5"USQmj+5iQmEQ=Q::46&?/ap/m)U[<rX+X)5QBls%?YuQZ1@05VY7)S(G'7cO;lFU';k#\k0%rG"BHD*Dq!=_$>cQ&DM\bfk5*%>m=-?$CPMu&-"*1bDH,M!Q_\J5PDr`-E2U<]F2cY&"%;m#l]H<.Y(/3b4,?9;cT\D"263*N*2Z#$aq\)8,0Rq%?TbrDR;S,V*#3M\pCDI,rj]&>[>h"==0Pk[ZOQVNBU_S&aM(7Thm'Cbt<%3jT.f2?D\^i7eB^f,O5@p+83(hc^842mk:*Aqk]DT2W"d&RTGL2A+gninHkKRu$MW0:Rc9GllP]inL_V9$FaQ-S$82q)9qk>CrV-%MY^ZRqlS=UP2F8s6GBi;q/57P@OuY_pkmtDEtb0jOZTr)4RqF;)hcIG4Ki4)o>HR%\LG^C+DujLhE8P_A^/k!#96nGIc\2^SYUO[%YK3C9+DJ:)+7ChE595_JG4Oh+(&$h*d<D#IP$W:U>)J_j;l0a+iYq(0Eg!gG44'lgSS-J/UEb*!A+_/dJns"J2sK[E8nY>b]t6iG%pTe-9]&Mj[8Tr\("t]RmD26AH$&<W&c0DU3QF>N9NQ0)7Y8K0,o%A2YS]*h>QFKH"K=QE?^6?I81:Wikp=YkX>m!!R$r<$u\t"^S%2d3*^]'\XORH/kbmUV0L/WKe`(Rq5f`]O;QaSe5tZi_D98i@V?Y0G"e[E8",WC+\kW#>XSa9qAb1UZcHf&\u1f>U24CpO*9-G-:L%TLeV$Y2I9Rf5NO]Z<Yu\)YAC@-ZGJ2h"XOCi%Js&V2`*OQ\Il(_e\HhI=dNbl>G(1/<dfa^>L>L^1p+\pQfg5i8HE1;BY8f^TAtE%,7DX!9LcZpp9r9`@%*&,/%m/&/b8^[(uuW=C:ij.d`QKtSbDh$BeKh6eo/l.L@+M62dPE97Q,VVW`eW3hRRB[XSCY??aNj]mp+En%YPP^'8O;u\leH<I/&$//:EFiR/WHgp$iTC7ILXlfh]lNg"Q?4AMWb7n-i;<>NsT-ZNW7!_<Hn%/F.7q9?&O!s-I>c\-ShcU@CM/\%HHgf7+aI4fGPO[)d+?).YPNG9#b$bhf2\sAm>#e5fJ?C?Fg2cBcuHY=GI;9/nZf[*[$07F?1hiXm+dt`I!h5Je7[oXJ+IoD<AaeM%4#o6$elMfU"Z,bkg!L7VN:j'4Dq.P!Vb#RB>6g@igp]/DM[J/5^RBW3Ci=LNImTLYS>=%lHajD3P#YZJEH7S!NRo>IknJ1\%M8*4%QHNB*[CO"AED:c((MdPUDOcrV_P1'.DogV,NLX:LSD!oWF&oiS&ebUqn:p#!@F?*cjS0LIeWKT%EGAP1;>\</:"CI,_Q8/$%s4!G%q2a]+W,f&rl"jh"^SugS>0UUa\>I*/qYI+lnmgF#=7<Qhf0CM#8'&=*rS@Qs6''LJ@;mMUD>26^L$&R'_rFCF+1oSl:15)B\,YWn%_Lu5rEPGnHU<p>XY@s2Ka7\5DC2(s$=bY+iO7;*7]Qk$\5Drk<=n1m_<j;hT2_PM"IOXno4"/f/5P!g,fZcZi.0t=E/++,lV\HsY%(rW_3a:/-FZ$%n0$mrXg9\RdE)5(+np'N1$X`ko5j!h+dHFLS?<8]uN/Lm$+ZT79ak`9j=DX/=E_Rm\.6<r<[<IFCalJ:6e764i1%h#gKSFP(p@P<TrrWRE(<-sQ/1Mhq/HRGg+mZ&6/YI_R[udmHq+dA5T->u_RG<LLqt@Xj9J7""*h1P+H\oJJiU1p-as>-&,[UU/sd%UmIUK_rC[""i>Z[[3AtZ-Cmp/P^Oj3Gm(59(B*6#>UhWma`pm\_OU&gJD2lq]2dW8ChLi>ZXh_T-_9't`=c)VXA.+<&+b,Sft^ZY%pFRpkoAPC\'%;@'qHR!g1M2^sZZQY>9tSB24Z"iEK`gO-Dmq,J<;#&kr.8"la_L/@;&3WT!otE^6i9H.h5@scT0<#Nb-QLecdrA\%Hk(hX4p7nY+dMB*jPERV/cCrZaC;b_A;#]CX[r2h66U.CW]b*Lc<uDDHT2umc1<6-W$J-]dqh57T;VM>4*71&5?&*\9KNs(H@Pi:%D>$8B>'Q1We-m&_)J$]u'mLZH(5gj92mU?:W3F5TG7TkqGRe66I]kVCO7VjOp@@sEBSI"eXX..X24<0g^)X!B%r#ss`K,Mc+gN!B%08TVihZ+7,C;+hW3G4iS\2N[aMP:7Ij]l[J,3+rOp&Ge]<>2T8V)m@0II/)`a,B+N[]\b+fMmk@cds:R;cL*`P[JRgI?>iV4R3OX%8"Qd_qiD<0eb1SG[$'B.6EF)K$Ojco`,qf842"9&U?))U$k@n'"YT_0?unj4!C-OB`>LNp`(j/",,'jc;E8s'k.dHm_+H*B[Jh=8%h5/D_<VhZjXSJ\D'mAnmV9K=05SqrENDA6g[fB,FHMZ/GabT9OTVG6PXLc%m87hMDh!8INoq<>R$t<nfJ/ouk/f*k8#>$9H08YKE%32W;;[JeZu_1'@WGr$qo644#mK9tuWoK^V/BHsa5?Zi,o2Xq$flEd+S(13jhNGQI]8in'c[c*B4F6V(+Knr'u=N6Wka$_Q4;\po#%8BC;_KkK=cou7;F/(m*m/tqPAg"#Nko'AHmZALkp#QDhDGUq8V<og<q^9[em7Pk*.r@Z!F&9A1/U<]X@I*Ee-pkXNsRQ.I"@6afe%%p6-YSO2$I$d%#=$^,!nk]`&`:o;5_q'M+d+"*RF$N7M+89'L;6fp5b3RsKPV_k0OR]hmta>*4aVp(\M>Q's24uDFIU1(0eVsts(%7e]TpYXlrUl0\fdkP#$6"r=I1X-I,H_L\Q(6p@4d"$_4s)gI2'q#&=N@rZQ$e+#5;D1f>l.]:nB_""P;3%g-!lY#PBB"bah\K4G<%_1fo#VaZg%Ff&+=H$-!;c51@]/UBC\K:&6el)F>*WC\@?%t!ts);EKUP^W[D(4E;OJS!-#08KX-_8o/75fh$Y2asmIO:?4nNN-Vj%OV!s[W_!JoB%.P.,(j3'P7UI9/#0FWR.CmaU=-3$*3/\S&Aq2bHpb53g*?H`bugnn#T:$j$uYh5?FuON6SQ)CWstp=D\Wo&DB!d5%fu;)_a?l_$R+"Cp-G)\-$p/n=QbeAXU>q.`/go+NRS5(NR>X/@fE+-8V4bfF5:4K+*>MR\imq(9r-E.#r+g:kBiD8p5%0$cDBG+8%+72:r(OaU^<aT:mIhcRHb+OhrFD)eViIjs.XNiY$5T)*YBJ@UaRRP'3<Wl?E`+<gY?=8j33>WSg9LaohFoWj3_f3;IXU$8U6K4tT%7j`Z8*;V4[O0NPC,!sVeaH?VirIS.WiiJCa>\&\"8k7".Y\3)\^=\6Mg;<qUSkVN%Wst[R%)kJLAeoXE`<2@Le&"#3,&Q-jN>F9*%en,G#[_omO>:md8)&R*=NPLp46"X?bZaM`B0nqTgTeV;YcQcp.7lpjn(n$`KB?f-+*E9D(/"Z)_q34$]Akf1/-WD_.dY.EfWFX1G%-"An6:ZmpS;NH4qnj*u[[=32F"m]&Z`X-6VjYJ2]GA!)>`];8^MjGJt:nEs`2#dG+rdk&%3HrPB`q)qH[bbkNh&F')O:4YR/id:c%`t3cZnBli/#YiESlI23I:9WQem*NeCQqkDAShBm58>8F)mp%MQa6d1@#dnaC#/YAINh6suMto06s.SQSRko'7akPCY>l;)$oH]LU%03m%M;Y7RCEiV6q?F*$EHd0ZGh!\RQ-2[GtnEq^@//mr%TON2cnR'n+_hIj;I83[XJsMElr`nF<pmT`@e7gknh%nbR"-.a[`sA"a%E3@0nDTfX*=cp1LQ&g2mq0:_sfWJ;]]PuiHr7Pu82rH7J80M:q=+M=$Mc`#5F+!QdOW^%Cb`j)'?H1?3Igj',?@"B`+1=tEb\\M=%(Yc%,^/"ro$i;Du8:KqF5AX-I9gUcZ-S=h?r[o5]hk];UQ:a:#OY-_R+bB*o^+ST+MofpcgeW[,,(7dCd4QL+EQjRu]-uJLc[-3s%p*\n[l**Ai>`%/UofL8TKg&EBr7!K48+&paZZL:iI$'B-l*1+N3o;L&8>4uf.r=etc\X8%g&Y+"1b\8n!b']LU18[.*WT8C;rSWW%O7D(]5r-@`p&P?a<cQXg?^d19Cml0CLr%k5>g8d%[3>jnFHd8"UrB,$YApi(C6+S=G,IM&W0^<Fqs:'&C4T_R)&2h.hWZ:G9oB8T%JLpQhgLk6$4m<m6oBXAIhKceC&_]53V*cSD>g-Z#+eh$a&'DdHiI\';(2qrPJsr]t/;B1tF/%mXgKW=3\>-;a[8AuZLW!&e[P'Ki%_F6?HI7Qh_HC8D)+'4eq%$FY,7Q6K*HSbii-DPVdKd'[%6+\t[KVLh?Bs4U$/GDtVGkl?a4;mn$jBbgC\2["`0^#3SGLA2Q7dWi;%8Irks4R2R"PKo).0^4O<lO0<Oe@'IdG(*!%0QAd53db0O)3]CRk$GfjFAO)R>SH'%_^ujn06mct9!E83J".c4g;Ubt6eYDDRjj>6%'i21J%Va(/5,?FXW"6,"d*q;m(!(4>m'I!O7i2p>"mU7<'/7#/`B]ZkruiBm0X3_j"u?_(\9?T>ZoA8$]t/!q*)XtNl?:ndJ$NTc%$_Nb-2^Y)U8F`a&LoUe_AVt\kMOp5iSLsW)+snr9qAEMVG)p6)h:?S"V(bSr;Zup0_CV(U'5eO$TW/dcKt.3G.MF:I`9o-^hTF@=%R[XjulbgW9f2B6/N:igs0t7geBOXgh2'V?IgM$*kfZ!^'@GX"PjNAq0,4</XP!`/=bdh2iglo_@bK^m4>!-'uKMQcJh97>)IG[7A%*Oj)F">t%rZ[(3JcEPgbpTXW-%I<4m9J,&?<).Qrm]]^V%rjq!"iCH%$*9`J,\BMo(5qh+m#1&t_Pf_.-Q//oEoMMWS@67JpUl_g%e\9bM[P)Oa(E.8lo;(26o='8s)e5G:U'9j<k)`<9Xn2b8f*H+E-%,cB9"T;q?[t$kC?ZM,dUm`o$qFAm/g8)rV60a=8Z;f3>]/VB%IukUnQj(8cYW8X]?K7mGh.1aoR\i+NZDKYfY!I1?Cm/W2Z8L#l:.?[KBbgPjKbg<Q`hc^K0KeUoY#=u0W.]L6=HLq\@PK?`EQ0T?%#H3BR]7B_/TJW/r87Y<T@@lU9?%Ah(f9C&i"Wf`0QhNIU%7ekcDpMW665-h<1qJ(qB"'&R::'if.XRR,p;^h1n;7Mo%$c[[67r89%`O,h@emN]n-Z+BH(m6Se'[+]ZD:d2LYX#>Mn],*U#XQS&)f96BpWU-ZN^981jDlN0OLZ$]8/-sDZG*hMp+F9gZb'PQhn"tsg?_QN%D`N?C[N!u4'T4GQUp#Js=);6&2!?b\?6Ptpe*N'sRSpp=6[1-gMbA8LOjpL?JOA"'d4R3hM`Qo02IKHV1)FR[3>SdQq1br677<K0%[c98,?<<lndaKJ"bV(iM]eL6V>_1A/dGQ?<o)+23F*j4[dU>2J_EJF]3b>`KSEEk&=e#rkk*jRjHZ2"(JC#ApYAc3%@<;\=K[?/=%P=h6WI^K6`Z(CTV\I8OJ-bZ+I(p_6D!nJPG$oU84dd<Bt_c$#IH444S1'Ze7bP'o\rI\Hp'gKofXMfgpTqD.EcMXBO-O49[9XK*F%a&RQ^4.VVqMlGq*6N<g#7lD(Prag^c0U^QeiFcqjVp1lg1Y:mQ->JXg6,t=bCq><@?+/q(]APmmY2CKtm0EKmG;Z8V"c!#QHS4?I%52[0&B4!f7GJW]-K/PZ3Co*p#BeR#ajdej$5YrJV>h(&B)BsPT?8CNueO\n$aqcc_A\g$3Bs2*S[C1of$%\L,e:eU[gl-f,):jrD%72I>3Y*ao<k:-R%G^-\U0R/;/+PQ%l4b.4ZGD5dJBLCD\LSM4P2h1"b:K""a4Y:AV:jj3ABUKK)RnX:,PQ()^Lh[A20U@riiekt>%F:p"r@a1[Sh)k(a`^&fWm&gor\9D8t.U%JE:Cm_@kFgCN7pendV$I9XZ%IM'/O&!B8XCLn0F)M)VA.25(8se$Uj^cc:H-7oF`2ZC%q[i01T1m1WSedN_O<=4cS]U4$>ggp[FrXAE_4`td`d>hJFEg6YQ7&)jUYY#Ln[VuY&h/'TY$oY%BR#A$RJWq$H-]0M+ZkV?9Q%<&%F&O40N:/`?%/\lOE;X?uG[=O;_n!/9d?PT<9:NUsOK?""iEkY&>To\2X`]dq*Rq#Nf==:OW%$S+;="88j'osIkU;[Vq]AKt\U)o0%na&;`=#>?Vn+E/_^h7DDrNtBZY*=.l\CgQ`RMTpiffTF29Q3Jc<MO,!B%1EEkNB:VC4"p`r5t:q=e4Z?G$6FLC@L6n(sk!#lE'dF%!Q$,s>^^.,("j$M4:iCDC8ZP67]$KlkS1Da?R5_4+o!X2fb*mDKq,X9QWR"#71%S@.l5dUW0M(Pr_dK;Uo2Nm&\JtPJ3tm+cCR;.%BNg_QMeV-*-KgQ@$>F]@Cj2#Kf1+oJ^/Bk!-c]mrqn;M-gl(_S*:m&LNq5dFXn/o%>Uc6qeji2X9A[)51J^4f*C+3bcVfBUGcZsJ%Y*p$k"#!,T;VOZoY^e<8A"8lh1RA7\cn)<0;S^Y$JBr^e2X):WP'/3[?m/ic/KKi**4G!N.hBZlY6E=p@SEQ_.DPW@%/cM;LdZ61%Q53IQU'S&_pWAJQJ"ELMi[FVQ,U^:"BmnC$/LD\Fo)iN2(gSOj._Zm"Qgf@5Z]G&VE<%V"&KJ.lI<k#oLZ\#"nSp_ZWIaIO@5-NE%#A[B\pT]Wg>&7,k6;m.q+0g8H)%;$QG5aspjr'?V\6#G95h6C*ecYH0!-S7(D#!_&39d!o;b0Nk(T]W5&$A+V&S.7@135qn'%):A%g,^)34LVpK8m86sH6C>MKq^L@R2@GSkN/cl"0P(.l\ECn\"O,?c;hOu?O1HYP7Qn6&AL+?kON_*DUp\i,Y/,2:K$,_Q*pgnjhpBD%a,s_%O__VnID>gTgY;I0J+q4$jNX5Cmaq=tQ&!7Ih6X_k]e>s6^::NJ9spOV7UH<PJ#ETZhL51id=Z)gpNQ@\q<$AJiM7>LlHZ_L%bP&S%/Se=4?TYr2IJ**dDl%@ohS1i`4WHV-FphLbn*PNX'Vm,:b39F$mQJ5OV2*UpG7U.M;X'\"$Ua<hIY.+,>%?l9q"(8#mJX4'%n)p6'j_fQd"HtT)]DWlIEmgn3?bNVTmsO`<YZ3ciSfH)Dm&Mg($"*Z+p6Y>I[IibT5u##(^HT;[hY?d&h,1.u]67h&db'#u3[nmm%A2Sf@RAuhUqDt^"*d6Dq4fOs2X(UD;p=+3^rcP>Wn,;eGrqG<_k'hjA;>%EIhtlj1lT]-F>E?OtlpU<W.Ne)+fjbrW,csXH.t56]%]30(K5AjQK]Qa,<QabbRDc`Ofq>L$)l8L@8eTCBLK3(j_4M03]-Kk0,ICjs6GK(l^enu*1gL'o.\,G'F<i*.qrAQgUgV6G)H\Yu.%Jb7iGGjibB>M';N^&%D1\_$bVHi(EfpNFIB0Aj1TE-HE`QA<`*p?hI`[dLD'HSTmNdh[CrL9Fm`FgkZ49jiD:BA[Rpgds#en=[rE%r3Ws+Ykn.oQ`o_!@XeOHo([(kjb'eks6]OY=08rUS`;AQV/@CI[Xb%V_7*e2P.V61#=%p$SfUkVDZr3p1gdZa/Gn$PT@J+Kqd2:r%\Gc"17g\\%Dq#/g'Xk+'s*O+[qqDW"pXQnQYNnt%]m?UU4*Tibj?*XoI:M)^n=Y6NWI99mSa,D2GPCR6hEV%"<`0S>rU![62$tI+%SnJ1Sbm:P_^O(N&WCJZBMb<@W9f3d*n%IZBi-hqZ<-s,,G-_#;O*Zt:o2R(rIedK$Yk@-iH,!NCW1=p:s*4=ZYBNbM>8?V)UN\hg%56n<_lgO2pY:ACunp[A-rq3m<qgG\qn"dR<g8LTjCVp9=pcT$m[//I#dGZ2'VrdljDkAq&[ouRQDIfJEp0mX7K@5gi^OMOH_$iI4%U?(:HU[eALO.M:X(Km5q=^rL`+l3XBOKK'ZF7uZp_H-Wuf%-hlqu,u!<o]O%/r@CBhsWL=+<B@r\R"I?^Wiq3oZWa3.gs1VoDR?U%6F-g-R.Kr\mnro:':U90rp@P8h](;t:J59brmB';Xfm2cc\+tf7kf3#ViC)I#Ig^G_2Ip]mCcCBP>kA/TDE50%dP^2d"e8nh62C;%05jidcg%:p?M!9:Eqm!4H?K`-Id"G5lMLT&eT^F$a7GTB5#7eO$X;_fB<Bor@33@pb2,qWo;Es/"7OW5i<^o,h6EJ?hQr-'1HoL-%3p>@7eGPr0gCGA(^/N\,p]@Ue-]NGs%kGKAr[T``-2WI!GA,@WmdGdH/+:N\DPbg/eLr#8^%i#HG^<S<0W<mn5Be#Qmt>W&02Bg,%JS)ZG>mYE;S[#T8<BL$=LB+:?T<T-4^O#L(QuEo#l*!Tpj5K6HDpZ<"?9@l+?C,#:2+Q,??^G+>^$S5V4$32YU1G8EN07K85I'WX%cF4&G`r/F$[UIp?Idq8ac3`h`L9\1hj%4[r]0BV743buLOQ>eKGREN.LDR*`^Ycd"G]X!&]D8:1YpZ*OjhouJ<7TO/r;4D/5?(:+%o(srA!de9Um%5Zob(l0*0=sit@)i8oI5l'"rL-g2eBcsCmXMuYm=jNJj@eg\q!CH7l#sNG^KMB<WSK&q]-mCOSu:=]*WRa:BYs,b%$FPC]9[#m^I(F`0Q%nbdh6$I&gSi[Y!;FC%%2sckr<mlE^;_Q.H,-1gndrq0LIUOZB"KaQf.ESa[q^d=-4,O(?@W5"L"W7COf2KL%6\_ScLasAI>L-',-@'d]^&)P^TKhGtmIs*9-fb1&JFrDZq";(3:*g@arS']-`VVk<;o&##o/G!lQf#s=bebdW$T3EJQX,E8A^I23%?TaLn!^[XugBTK0;q&R-fgh>EOrPJ;+q9n.P%R@B"+DU\WiK&?;(QZl/eO$m`8]r5p.VVE;7SYhF9+n"2d+?Tc%JcG_)!:]SQ(a]%K4d&mHH'R-L,Nd/h8M3.L6==(D]_X^MZ*(<D]Y"SA?.T$W]YLX,GW.MbYo7QOOssV^_BZbl92<Y?=.lU(Wm+[q&<otP;0c?=W:DZ%e*8<;+YAO[QY)15)99H+m)qJ"#h`T\^\MHpp%u1Fo]g.onaN%?#X&&!a4rB.EY%lde%Ncic[NI[pu:$@lsa"AHoI5EIci6N>\`F4%?[qnB[+bNHh8=R1r/\%,.l5reIsc3\3+KN?[pN&n"0pL#5XU4U:3UT(c`Z0Aj'09/He_T-AUXCDeMl6&oka3YkM"C_IoK*r.dtgV%MdC9#iSe^mA+3kf&%hQ-.(:XK\GP(H]XtrMH_WfPFnboR]nIU$eY(d3F0o-XmPm9tgh9cL:M]4(ocGsH$9b45P;o$Kjb<XGm2Mag%ksRdMMQq$RC%P3R4hK(W)\8D)oQQq@pn`pkJYrY-])VBZ#u5Mo-KloWc/9j;BVN.'/YP8I)McO8Z0uVo=bIE19#Db#)SFid=8pU:%-P^Z3Z['^)\lk.!"k"#ZrU<JIBdNNY#.Se\q=3FuD_"%irAl9LfR!,0%d2'")2jU/57!jHC6.8-8N(Ds=l@5tkqDd[#[_`JNlq5P%T7XS*G-Z(!KNo9ln9dD*JoA$u4K<LTe$nE:(Uc+!s!"0$IdPPY<XS-bj*aU91u[8]nY<r#*QR^;Hf"AYDYGai;XT%P(?SKiYk.?B%Zp+H+DSGmphg,"fMc`EJ8)L0t=m+XnT\oS@r6+BY043K<K&=8*ec3#[m$9p2/*G5r6QgDgib8S,Mh/]_Q#l-#0<tshfWDcfDTBV*%H863[#F3=-qCa/N9A'%,f5JE?e9_kU8nT[B7P%\d^=muSL!@:YPogMX*]UWXl98:&:4CnHs7lN]'unsJiUqP!c#Nc!.m0FD+'<lB%s3KP+DR[o-M5!f(G?@W"`/^h8;E-CaR@.KcY`n_DrmT2B-Br>Ojk0IV]k;_&Y8pD1Kp/41o!8%uH/Au$/?(DOpRllYjOu$8S85O(%p@X:8_cc84;TqmBTljEM%o-upe+VqE_U=&8ZQPL\r`@[[#H&C0cK&`NrErG$XSeV:>HC\jCCRBs29-(N*SAmcfJfY=2ipcrc/rR\%qh-cUk,*#KhW><WMk^q]`SJ9Or1&7ik8s%2EaUG`lRT+-/&nhJ`ag#Er+;FII>t(u?IbPf,mfBVQu;PsFe"K6eE[tX;D4Dhmglh@%?[kfB.[3^pIqX5\!\L:Rnib68B0gRMe>k$V[FH(>AO<Z.)aO:Sj/qeGeRR^$[rH_:j0!k*lBGQ7b7B/p4tGp+V-t-/jnJ+8KcL3\%4Zf/l-LS',n)ZS^D,hBY.Q[to])+s37jc8>DX?-@NQ[78.1H21486:)O`*moV`*B4f/6'=YS,5:b+-Ml:%dSN?\]ebI7gr[Ph0]3%TIF$!lQ<`fg!+G=;d/4qENse1$+e5(17X+dj0gA]k4QBn%IEQ1AmIZFY78fPc0gYDQXBca/f4g`Q20h;XiL7.]j_Z=-+A,:/NbP-%/[)1k!bJrH?Tqa77qH1c?30IV[2UuJHZ+":[s9trH<brMoicUF7nWH>Hm);.9q1iJPBb;7"&:gCP7JnM:D'/_+@LFf)T?^f_(4A]%Y<FQT0'3X5^;&DcYJCu=B$KeP-<PX'`a5M.HSh$'bGU7sZAH#;,nKD>^P@T$^LQ$aT[K+fS+Yg<nYiG_hD:%WguS;.kulG-#NOCT%mGqm;Q-&o]_DD#8-8lnms#*L<-OOf^6^cghRcfU4hrA5AhER@EKWo.b$Y7BU'.YiEk0[XTUNS=1^^V0pBOst*D>r=A9qM7SBSWlB%;1[glr5dqI!"uOA'qilQe!t<)/ksl'er5V%/3!*.3*Umb]m?m\*?$X4Z1ZB;\!c@P-lg*P6)<7_^\r-&+0*K]k!W^%DK=^RX*MmN%:$(PAA`j;Do%^m#I^`1(E3?4#PPagr^j8'A>%;n%pFhQihk)gI@E&/cdT2^uk?2He0W<Z9&!kF5Rp$MX37%2U]m7fS+gpjGril>)%&t)mV*:;0nZSm=4fW<=\mOX>k/'INZom&atQ20s"EsI'8f?L;k[q@P5M2-lK-4]JdkNn8\-2Ak)]en6U3:.GgdFM7MRBi:EDe3\R%Ac9"r@kB<aI/,mm4Do)%#)okXKl6a(^lEo>EsE5&5G#;rba"fHA`p3Y2mMoAfqY(T5C;Nho;s?,05Yb.S6+<MpKp5_q3HNsV>>:`%ETJhG^$]0dV9PY/d`'g>]l__>9GL$;qgaUFT*qil1I`3g[YI+q4eJCE1o]PecfmGdeb6$9LV4H?HfF#76\3Efk?!SPAp/="214q"%Is>m3+qW<+WVKZ3fZm@#p+WOia@Fr;W#Sq'Lh.=%3HFc\Y>C5AVu#CHmN,=9a(-:YmD6nG]@k;<IeiCCNQX-=&P)NkW=(NtIYo-J%d#IU0j8":DZmH;L.pDj0^Srbt?tR_KcV;Z3%!u^9<J055];fKY`E2<BSCuL5o1""J)]=>BmY+uAJR11`]h"PJe6I?9g_t+XF1G2)%=KJcQCNmGuHZ6VTs$$IEO7!0PIasHo+qNCkGaqkhC*6+B7^K'BeVEk206)g*G.rlQ+QC)DH(iMA[fNJ27-"!NA^on/5!Ieh9CJh+%R>a[pa)`mJ30`,cEI-_W`NqTJFj:e0XLSou-"J.I`8H5)re(,XB;5;XeS<F[l[i5G.YreFQ]J1t!T1^JO4_0\gk_paY6HXa2#4uc%bOn"f-&+-V,Na4,f=pRIc-JIQ;gSFWO4l*kW0boOm>uT'Q;"a;CtLgB6"T(tBkND6jiN;0d8;UPs-Xm5-pe#<#EIW=ct5Wu#s-&d%@AC=m<eLXh-mu\eZOUNU3W_H'.oAHBEp^ROkGDRS"g8CWChu&%mZ<)dCE!`GM?HOkk3KtM0Lt&e32Pm;G2X8iP`=tciJB"_d(1kf%041_+n4<.^c8p8fbhJ%_h\c2B2tJQ]K:9+GqDEO_1&;5uhC3\rT)!a[/J<@"m-VKY>Q2k$2]n)%O['?LAG^ZZFM2lQq=&I_$F8O_%nTraW76<1s8<_/`T8Kr_qY"g53VNeM^AG6\f,]?814!XTcjj._oJol:+.6<)h_!*h^-%FjH$^^qCu#!u?-_3daq-%UAcTM0*51/]%kg+Hsk/%&mJSiZ_Q>03nG=-%P%F%UaCDZZoeZ#6cYW2Cqk[Vm'dDju&q*(aJeojohV9`B(ngDa+F!!U.G@$4q*tu@PRenQS%FnN]%1dLrsKb(pt@01-^""#W8kfLc=baHfIQ25@bqRJfh[sB"Q=`&?4k#?1EFll=$fK-;2Y(g.oE/i1<?AL-';geOt?N/2LCl^q[h&7k?%cSt9BcM-H3l]:o<1MkP7SB!)#YAB5i2p/#j(YII:&:6ZIB%<9Y]=ZmgfXSHeBjRA14CPD0h=;ERX><\XNe\FBlXTr5-au#^&M:`7%nh68to/kWkbb=M`Mk#2+=Q\TMn]9!Scn4KBT_kNtm;@sPG8C2VRorqM]*,Il23_g?NuHVO+%=hdpBbX8U:BMM1hj3)Q%bR1ZF>'f%n*M?P]>F97(U-<J5FYTrgTT\'Df<pfSE+km)j+ROgu#]D!mU/"r3e].J9#_`Ci(iMU@gQ*4,WIa-d[1aCV]W1p%nL!b!P$/HP=?*%,UD^:Uu&Ik:86K$=.^8:k=<`"rTh_8XM'\,8?]GSVP3VX_nu-Yq/*gW^O8#qbc`YOo:)f@LR:p0(XQg]44%>i&n,,g(0Y2K@I7pp%@^XUbhjgWb:#*reY&8jb,YCT"Q0a.m\^.`N;-@gtTj?>V>-p5T)hpG(YLe6_mmZJ\I]r`.mP0G]MS5bW3puIiC"=%VN@blgTH`a^%T`Mh`kLPkZ^Y!9pQ%&!Wc2:m+D]Si54!nD:#uNnS$u[j*oLo+t4KQaVo31I?k9AF1\Y&`YnC\(+[8anG!Bt[Bh!,:0ghk"l=6n_M%?8"cS=eMi;eeWcLj]_B?8[]`_0$ES2os7ErRIH+5V8%X<Gs5Pdd;5.Xi`A?pm#T,U@VD\/Ns#8WCoeEnd(C1o!EFUHJ066[r9m=k%/5*t)Ys4_BE;9+(:+$iU=cR']m0pP@>Fc2]Hm_^RF7JbHQ?Rd0G_D9i"n*o,TrP<A<GDHU'JN=E03Q'l2>:7.ncujiaCN!DN,`DD%B+Jm[U0:eT(2'8R2>g+tVm[t[p4Mc+?h@`(S)*sJ!7bTLH"hM9qAO4*RJ'QeL-+NrG'n+N,$Rs7#FSi*G[&kBQL1uG/[R^VZK6@K%1Rl!X-F9PHIll?Cak0\'FDXuFFo"'n@kb3r_RBH?IY$--lHf=nk1,F!?u%[!d'"hX25?D@c;RPgQS.`BXk(_hgZ$Dm^RKqXp$MR#%:bdlf_qNI7F_UhcFahH&XYoiboqT(_pXC",^%*Y=Y-r*4:,dG&1gNrqYq[2o<I7h1b6"g6m/mqo2=uCdEia\s>3a]sbTOZ`/M;Lt%AFk#>OtH.J*oM,Dc>P@??9$M';q"B$pt(*Q5(>Ide!P-@7fLeBPXKdS6PK==Sr_FPZ'h;3i2''=b?e.\LR0XOkMhE0)a1?Na#3[8%coQNY=%--HjdnVpg5EM:9MV)3cKF.RjioT(gq;3`D1&L\Xk>qXRDnN+B-X?RrI&>Q/[!Q\f(nFVDPpFj>jTGo/)t^K6UZ*D@@h;S%Fh0F-E`5,XmW9odC?a@>_=:Ru>dpWOAgV8j.oDiQ-ZA[WQqiX=nW?t&^!eFWMl0eXpdd6\pj-JK6d7]6"SC!!W(od&n$!k^WB$Kj%jgK?qkG.4?+('lDiKO6(:)D)pA'6frUWDO[qfco"::J5nSHj=<S,@`GUJ:h9D]8U\4`6gk.i[,T+cK$Y;giu*<eO6@pHYXE>jM;s%WnHVpd&HQ@3V4?Dl#l<$1j9M[C%Ko')`'A:1m8<mokXP3MsGIVIm6)FO7%+)./u/:NOGQBKt7+d.Chcop@LI^Y/RB^S[b)V_o&*2%-WY>eqXLOuY"fT&U)=b6V,o%BDq)7k3Yfp6^FQR[Nim<W01L'kF+J5t`T$U\8b<(&*/`NmojARs[6=Y_IZ5pc]$#G*c3HBf5+d%C%W7+F8Bq.=FI<.Q>&SoRML7O?[B"IX4C$?#3H;peOmIfF%WmaY%]!^-/(H4J.E2OL]o4;u%]$o37PLW:e]bT5bm^d"-V^O(5F'W#"%=7qqU:N`qO]N^3Vo]LRFD=Q*_FGarHm.N\ls,C=B^&*fS;d?6Dio"9^-G%Y`BC$b5h#J0OEit2ZK@/=H&*NPJ_f;7H'dojBMa41<%,(C&=/DpKNhN$bD4$C=r>*&(CH/`CO-)T.t=`JF9Y<st*F58AWI>e8TO6lL243GTe3coa(?4D"6]gu:iD7,g:ce)qd6o:Cu>]IiV%\qNm,5(bu^7sR1XSN]-qJPJE_Xk+?Q@uDu_mINub\JDW2'CXffm'IJ(e@fU7oC)McF?9.2S7uKn6c`$;B8b7gocdOI:5iF5dAZ6c%'.\O7Zn32Ur?c\k$$6N50UEflcWeH:C%E^n#cF`b6_I':G#h`t#Pdc7hT?lq#]4a7D9\tPID9@Dg@m1B.RGpSd*DV2eYgE\e!2J,%$<!t3^o^Y4kXsC-f>+&bWjDU7s&?U90#p/p'q9Z%M1#l8GI/+^<&CK?9((0aO=maq[rg?d0T-/Z#/@UQGNjPsnau872ZDrep>n$u%e@T1!>p$&aJ%b[Lr%J'6mXaE:4p?8cI;1=OJ%`>_^)?gToj(I$Tsf1cU>CNNla*p,B0eit#EQ87pZq=t_i_'`KW!s854I(2@Y[TP%p%Y^dN7286e+;c#B'`GuZ&?8D'`[jFj2HH5;\8CR1\"96KCX0%MCI#>L]."O(E?_AJ%@A0]dKnKZM?L8)>j*Fkf<R3m*k<7Z"CLA%03b+bbDr[M4M/pXK"Nb;MYaCRksrMj6T2:"[V\P!l-)Y+l3"QFqHI0]?10=82KZ>^gU7TXVYBB%8o:95E`aEt?eMR-(3fN>Ed%'[%r`\(Y$ZiE#4?@97Ff[N8@!F6>WWo$/qKMe5!8BK_!007Tj5YQi+a%UIX3A-kg,Yamc4"JuAB,<u76B\B_euO@p=gFOSju!n7#m'N%5>642m;r[TI6reXPjFp-:<d4SF3_JqR'59)Ze/#=[JeJ34%24Y[aRn[/Y,D@gVjtIVc29#[o7^!`4NZdL?e$qDKL!QZb378[l`-%%?9I$^:T46,7!GXIcJpu,C0jtN3s?TkrP-fu@'6I,?c@,5I$r@GieZjJa8FbVp)ha4W!8nn>fUuu'AFs<iqCCW60qiJVss0?#X0iJ%s!gZaBmdK1qd(W4I8d2''J53CnVR&UmuaV=gd9_(ke#5*IN]ftNm[-6gbL\2i_`DjRha,V0Nuha2H+@T4TEpRj#,O,2V3L1Bd;@<%h<E9"/?;Vr0"c[Nn/1)e3r0:(e8p-p6217\n8f;/n"4UbJ5fpbO_"chnSF26\1d6pFkg]LoYcWLbB<fPq8hI\8WB-Akn#J[%)\V4%bfH,umQqi_6M9TWT#6&4gT*+Ojm.O:SCWtkOg1bV!d`IHAu:\XWeCD)-!Yrg3iM1BifJn[d_8VrInmZu(\1gVOG+Hu2W%X([cmA0%ohiD4<Cb;0)jsr:U\VI+dQ^+F5OBJMftXec'`5rAjj7enp`5q=WO?.1ffs1Rcj[nl^\`Xi(+UFD`;S<Z@AbQ=aBd1V%b]a)`qe4q%/7s%o.aoEo-S$WH5'bs5Oc!3=Z8EKA&J):lBjfaYqpKVl!j&;>2Dac64cLTMC!Ri$XLI"F0"$'7fH.>jp"XIc7Th0uU<3[De&tVK%Oe]Jb)$Aa0?>?ZLA:sti^1aJ.57=M5WmnUX-2Z^HVH+a10ss\oEl"a":2I*]9T<bb0M4/9\&KMX%ZQ1];.ipfX.s_0,ETTY<\Ggr%-kj-qTtLMKcAUk&1A'Q$./pOd[7u<a(Cfo-$m#)U0X4Lol(tbKQY81g??N0k:7^Ug(/CBb(m,orPYWJ.kjEb1Z08*tAh;aa;]Y`1%"/EP,J!0O=ZY`>,O5tj+Ukh9ol_2KFHDMW"M;HT!DlC\g*Q!eJL^/6qRM5GQqpeAbA2d[8An:4Blm/W-n&=OA(=q/EGK'Ja_O@3;%9,>-R@7dQ@)h3FjmhV2YKn%?\_%bH<K,UNJj_+J&1NCP4J%<<JpktaYg/B=7V*FeMG;71:_i$D?<Tq:eP*S'9l@(.!:igJj/lJMR%%Oj`<lc@5nSMo#A(ERdY*L/6\Z07qRH[!iY,qBaFpQ)DOKCWCg_knUm*k<pe2cf<[>i`GQDbLR[`K\3@Qo`;'e,!9'.@)9SQ,8:A%j-$nk]5FFkN]Xgl>JBl&]5VkYbW.cmD);uTcXsfZ0opo,9pLc4IMq#R<IW8SoOoXO4>mhm(66+-)p3/q),2/H-I(h3qs2H(P\u.F%`K95&fnGSf%E)o="U:.3V&0OLU^Q-.%to$t(eR'&m!2<E+Rt\ba[Op<f0eGR&L(tH>h?YkL../ge4DH:e!fk#(6J<*bqn)FYK-*<%3[hr30`RHf)V<(6!^lhV89g$*VB8cF88/r,-J(\k!aVLX=AH[4>TMu)4$WSb71[U<Rm#D.&'U)9XQN$%8l*J_]-Be3?`'LQ@-.]8%Go6E@lG;'iA!7#_J&f,81V'(n9CL.$K1dNhal15(NPp7''d.I,jU7oPO2SF<kMrJPe_T&noX`Hon3ddYOtT*?RE1F7NlL+BPo10R%)Z33(K9(0YFE>P:kC6e-C[f*.R\#S2=sfTQ_*J/0MWJ1")_UL[-N*X5b$Rlaq:)._BWhWph=%[:_;3uH4otH\$hH'75O#uh''$13%[H[I%&i$r7$@JEL^FELuX3r)jIT9S;jGkQ8dueu2]3cOQ]655*j%$,1eV';h=;+F@K+m!LR9UG$oWAM<e0b$iQ]G.]%."GL,ppN+%E_;d'-/nZ78FF#%@R#>\%k$C45iebP!'VBTNQV+Zh/=,1/;kBJQ?G`AS>_@nAQM6N/kHOm?=,Ene7#T(T>.YU0L+A>;dDJc1H]ej%_SpsYU'BAJ#GRqanh*en@:Ku@$g=:N'`M-LD#1b^Sp[n,J05$`RU>-<-2tN"r.\`k.rd:`D!-!V(hs4j8ZBW"f1oDXQUrM!\1rJd%YSSJ*SDW?Ba"VEqTPl$UP"[mX?8!CUJ]>W9`!nU^h@YBS@skOS\bh\%.5Lu.1m+OR]SAKc^q+To9H$V,Bqn<80:AT?'WZqN.Xo^k%TW,>lC#W_moGU$4`jW1$CJ%+oKA^FICWOp"VL<9Y.n@dYC8YF!-M*E+&::6Sr#DhUe<;Jm\_W,&"?]nN)jY##F6HFU*09R*Vkncc%8`csK$nLs?#JC@MA*(o(LYl&($dB*h;fo\'r<75HZ1r:;0>='1bsGp&7Ulc`j.ZF?dPs<]D>;'.`^)#P.?;;fD^S_rO):`,qn[IP%97_%dOTorpaF!Z);C*Am>c\k^*rOGfh3!E*g`Dto=;h7B(]?Ni(:q3fi+(<Oom:'k8!1MCO2[Gl)Rf5ddUlFrqd?\6S%d#-OCVeW%;@I`N]1XZ.'Z5*?d-kJ@(pl(!r>o1"ObNd>\.n>K8Aet@(s-1rH^BJDZEPm(h_,G"I[Q31T)E5YA0K_)aiRI1FFbZYe1JXuCNGt$%<ItN$E?:#VFF'.P;+AuWUn8_JHV-ScBf'+/l?T1`=!<FPqH#4Fh$qA1'.os%<[u^D3-skrpja22$*NTc1@oHUD'F+Ln`*"r<AS<a%h0apq'#<41.A]6hc:A&$1>WVra^!$MU2nl&o=t)nDut2/Y+W8eG[T45cr<)M'=BJV-.HF7b3I\g4<ujmWVjjmOT@Znf.,<Mag]c%%N/E2^"@3QS[hiC0A+ZDq6V<1IeP*=\KLo7."`D8I'l@+KWo^=;dg)q&dQH0QX*u_'2-LgFQW-8;aUP,%0"HSZ>;=W'%:*uX?/Y@0%?e<XN=4$cC"oG6l9<OrZ<t##AL+^#g/l4.plPd@q$G&oK0K!so'm,"A_-bg@-!/Fo*ud`[?#g)hdnB]uF>T!0$9F2JpKp:S>X:k\%;U74BJV<+Z3hY^J^Ejq<p3QDCp^4+_nm_0O;L*Rs:pji?Ib:P]Kp;1P#1;#cf3jbM6_7U$dVh:^oq8Zfgq&.U+*=_+RnK>bSN:n)%_((q19XFEdF@CGdDm;ZeM=DlKeg1hWEdeTX,:P,*;U7#[\bc9!G>7MC3kf]glJf?H(_ZBXYFaNJd9KJ[L<`_$N\-Dcl.!7W,c?7(%Q:76OPN-]WQa&QcVSk?(a!mNc?)AB6h;beY\eVjM(ANrtpD^emN2%`LEE"5g8_o9[d\_W',J;D3'-E,!aUB=dY,AOG;l3r^LK0/r%-=oLj3f?r,XCeccbB@GhZhM&a.5FU6I[96"O`c&D8P2lVNjJ$u`Niu:]j<WhSE%i^37Pk&qe*MULfj=K>B:MIjRcEJV5aX`Wcn&5%a-V$m5nA*c:=o=Y7,<6JdPQGjC4'`(f,T#Pe8VKMf\*jsrThu'4c^l3h"5`:ILg&#jukSMhCWoOM=EIB?L+E,P#"A72_Kt7?t2bs%1;-C;,,bG7/(UP+VRI:5#_hob@M+A=Ui.gBq#-f[$m[l2p!^m`'h8d?IF%i0dZp_n/"a7V/t#q^`PoQ(]::0FrO[3Jcp(gGo>8mf%,]*eX?rInh9BhGL\2,=pU)6:='>XksN^a=YYFV5E/IUlJnf$@.^BXQuo9E-"mT4+s.1?U>]$l-&jm_I)-_Pl]PUF"6/jd4iBeD@g%+-f?d%hgY#'(j7c=HEBh**!a>YHdZaOn!![?/7SnihMn+>(;*.=0<3@&_.^>Qp,]mSa02%RRp0Bb<<C[!dR=#*'=0QNX]HglJDX*%:4uo@('T$RaO%XHQ*^/EObk$?b_R+[3lQDU]OuDa>Gn&T1'&oIn,Lp-SEHp0,I>gZ8&gHsg;q3/^M\t]Ppe^H^gU-,k:!C+4aCRW%?fK4L7OFA)^8FFARCMUDoOV]MEko;WVmJ2bO3Ho^\0A>)Nso%O-$j)WBc"c[YqWH%3?B2QV5NmS/m/gn'3j?7A_C!leKp\3NNru(%gi1c5H`K_CrFI<C<6j%7l7\\h&Q?ksbNV_W[?M!a11h+WP\dALKl6!^>.SIbDKU*XP%HN7lK\5i>t;F9$e)5D1+>N-^H,CF9MV"U%Q]HrtmWLgu04")+Qh>;`>Dt)l#$hbks7p/=lJYY!fDt3q8084>`!s:!Y,;]Y?e<3kojkNUY5_Z#SO@JJJqL1\9?`,/=?TpdgsNW0%NIfTs\K&Ur&XQ79V6>Z4Xl:=64^;&m/1.GsUD&Oj;(ji3S4K^t)p!jOZApL`-aG,R5C!3>H+gtMoBWs>[lQgW">YUZ'B/%rHE"];%p;:i2rRTV".j!Sm^DY@">Sll&p?05hbBQ5M#a6FI&n@u1oOQTE:.*'?M<.6[,/]$5&Z4MsZ"/*@+uQp32NI+ZcRB[t_S":s:'7A:%P0]FcA\E+GI2##V/%MmT^<$pjl0a<uVqQ3%nR:&5P:.(AdUNkZ!b7)==r11"?r4mEUn2uETH[AR;?g3bWXO#!,423N<>j57BnZ=4%;QklDPE2k=<DkcCMU]NE<MUZGUa#JN5S^8R.?8tFH?/`nB56C8TR@+Sh33do)u#J'`%fV@NO>B0^sZiL]#AXgO]&]>'MFY;o8?MV%1hT,K?OGtmb"s;(^e3S^Yq+:i_BiaJ%BpP,]F*M)\E"X5?^AQ+0A^0J518k6TgOM3[FMuheugC;UJBV!M=@nL#utGe3D`GQfROs_%<4s&eN8a5IQs(fa4W3RU%%aI2-t;N%"6k,*0NK9IaG[6K9i9[c(fEIcTW^"[%VgcFn^b3@FI##,pOthDbAZ.%g![]*,Ep$gcnD]d%'rR/t"/^g&*V6\tnBW*2SA(.<eTYd'cXB7HF%4m<4W50Cr6&.Af(r9b/cW?g^'Z078=a^olcuA^7[&_c.V19I"=ibq;sNCd9W.%B%nG^JOBj@pt8^_a$s,no!*]A1O3uq=%/oTc2]aN>!"n(DTf_'>).!?PY]'h>li$E+oT-LQ,R0KjQ4&2`YK*@j,YHS[77r6+cC(?<k%]W)dQ'm@WS'm<r1I&Dn!X+T&"1HE)Yp*m/5Y`dN#g/r0hXfq\kCo>`IKq15oSNALnq0)GfEP&-`j@0hu-[2b.hRiQ.IIlUn`k6!q%IpOsl2S6\94A!2LU(^1[cK:r>/k!9Pq='N$c(Fc8P#A+2"uY%h(t!'2gTgcaj`UGAX0&X=N8pnX9>@3A>EX$0i_+Xrk<X3nnr*57%olH=%E(K1unn$Mcj<hF9X\8&8X/AaU9[8F0HdTiC9s0;b^8-,5I*'iWpV-Uk'"QZjV7H?&l]!B"k=6S<]WA5>k&e`YeB,eU;ZAm)%.2T[5b&hBERI#6\8jl"O5Fg<(V=Rf:"0/5VniQU6LZqi6(M*iiH/X3Z9c'DTnPG\G@="uOMm>r1"0\S[i(a`,p>>qOl(Tl0IFcZY%Wp(//ecW"NMlNW>nUuu<eT=YXr@]F:QYO+13)+5Up".`9;71M;1[YHH9c"aq*G@<9@a3!0Wp*ERF4F>L>uWDH-Rq0MC:Yg%PSn^'%?.=u6dHX"sdm_g87GaE\=#F:5rd!^=5h0sR9m%YmK;tf,WhkWT)<n2jme86_9/U#,'cT\$>uWC]cR[SSRP(V+0##?j\(,RtRV,$*%Fe@3+;71M>HP?7YVMg=t8@rnmeT@JhJgZ-[Um`oNT+`Cn^T==(@gUc8--MY4<7Ah>Q%Q39o.PjL]oq\_eTBWn+Gs#gEDT+h#,($e%lM9%+`?0)*md]M<pfkDfZC0dR[BtX0>mb4sg-u&9eTKCp#'+(A>=RehXY*eh8@_K*Beb4=14Ge*.i)hq!$q.2f2HEK7@,1:Z%BJZ%qh3_cH7Fn+`+F5OTXnh;Bnp6k`aP%]Bh^fba^Mh5dr,gmIg7PL/?8!$B'jYk`S-U6Msc%"ZfYS8(S;5%<[CO_c!Bh1OgsNAn!Z>I%Ot6's]<m96YmD%+j<s\Ac(2V,1ZkFD?G'7"fA-&e;>eZrG;1.-s$_.Ff.$s,\ViKT4ET!,mufh74'mQsT5t1)BpW#0oQ:r'm(SaZ%ppEb+&]_jke#!*m:9BV>X3a3W>q#HOpKVLdo=2*#?7(nr@^6T6.buQ_do=,+WCgAh9KVSeM%#:N>m38$PN.hIK(VO`QXc_8U?bG_%1AG^khVp\#*pE@Lr@U0[lZIa2:sdjfZD"^5;eABC(MI&\ro.h:W63.I^0`$NXc.JYrKQ]F%a;jqYLH<]+L<PqWYA3jfnGF)-_$sC%JNZh3>6rEcUV-]"$4)XiY3[YoUO+X?1\8blfVQ5"<NE+m`G8!k(,CQ(@`D$QM1iOU*aF2Q#Ofd7Hb.?6&8tkB#3qLsj)6I`qabd\%iRbCs!87sSHi33Pa5<p2^/gE&3dYRR!2frr428>.3fr/`mDNA7eQ]1+AlFM99;&Homo[LW`E7su$SLB+4Rg&@E#2G[ftQKa!;/`i%TB`*;X\QUh0"!Uof*us'b/XOE@H7lA^Uu#!a*OK4S+?D#6ame%KO)md:Ji3sk(^KAqEo:PHc'.3;pDTDBd^lN52H"diSY&Y&#7Vo%s4N%h$Yp9"ZDnQf*sYVEWsk8)07C<n_OK(-kDJ$Yf7SqC>[]_m(Y1o'M<DbK<o8qhjX&Hd7hmcSFdO9h?FI^]#dBp!>-[h9S]2^%%dq]QE6s`HH@Sp]1a[KsLAp`^R^6BKnfN?I3HRr0'[SjZ8;\Ur\jNU!DQ*?GWnJ>komE-9cFd/9:fL7M'Gnk9p"$B,(9O0V=0!jH`%>N6VqcM4MiG4X6m9G'5FoiU7#S:'.&oJuD4'k,G1Al3ro-G2"JXGu*Z9a+7>kPRBbYA7C(;k-XKrhd>8?ME[,:8]&q#'J`H%*>,+%Pu..DW2"JLG"f)FqhjT5Wd]=C=*At6;P>9t/F;-9Q7hY"ZK$<'-N:D!C\q-c%8f97[\ViLIXh&$cLigc/#Vs/asm$gqC]A6WX:E"%o@:a,NK(T#GQjZ,*k)!kaNej+4^9=h`G*.MkBmG;(W"fiDe[pW\J`kq3BZl09jW/5(Op/Q77*o1=X1Z0`PpDJ]2ML>=sca>?,N;s%cWOLe>!bBB]fkPl8'kV3<h+Qjk9<$TO80T:I-ttO,OY-3j.q"27hO9#X;EV[q,1J6TfJWiXrcB:FaBU#c(16kH*2a1G`OAmZ(5LQ%L<]\,jXioD8iO''>aIq_]8ECeVXE\%[fl<c0%G<<_tSTi'DLY9k&`LMMliVpkF>%9ig_7!4'^3fY=n\AkY*b(2Kp@@?"DZbCPgAR%NP5VV60(0L^a0+fUE>n1;hj:)P31b&g=eH*W^4U:\L.Wn!]RHUf)&%@ndjt4i.LuNC)*i!<]7qJFnR,)S]87th2o2tXgcf[KW;Cg%e<%Q1oVTL'a\kq+MtL7`M-IQUc0ds!FJG2p<Hh#;>-:&TDGWV`nZV1'.8O`#5<:_]?s4Y=hElF`7!Y2M_lf"mnV,AiIB\][S6LOZ%]4_U&DLGb2$?2Bi'[?;m&oDGZ@d-8PHXIiEVj4lb%$kY3dWq-7\SbDtI31c`bEBGCXK0kQNQ#LDV=T`OWb0.]`ANipAp`Gif0`&j%L[tA[7W&_&YZ!*_F#do5ekL(<>r<:V_Ij*J-6.>(n>[2?#m>I1>u+b!)qe+h\(U;\oVOYo_NX4'oN(Z_8/=79XH2qI'N_u20Tt3H%@8Pjf.rdnXX#;$/?d-jbHRf9lm@Q2_]m`1g.H"EsP(pdO&PnEkXKI7<Bp!sU('uo=pP;s,\*/))([InP^JsH=`OaUjoX&)t#m<Ce%1-0IOb8%XMjUn2,@:+]^=&jcb[DUp.Bt[LIVQBlX5#ii1M;R0g(V1^!V^fJMJ$PsVYg)un<<\c4L5NSb3HZ'Eg)@bEGGN7F:ldR#%7HH"pY6%C%"5'HiW_4(7g)@b/)`^n5@+lO7"<1L(-TnHd0BMN[7^a?jj\**8COhcBFn[?oi_htdI=2(29DQGPlp#J=TBdNr/IJ;c%PV:MYrh_tdb/Y-?\X0>S/jkNESUYj5AZqHk`RQ9nTFu?Z*_i!-TfT[Z"`?%6^tDO]\,-'#P&"H<6hPi1?h1=JI:q<WHi<fa;bDD?%?ZO]Q@*XMDWk88VL?a5k?cr5f54A19d6l!?&W+WE\C[oiJJEGa\C\%Mk?bop/%GkKXm!IK0-X?V=82P;:T_h=Q)X6F9<PiF^^VE.%Y@$jR1+>aQc+SQT1/nKtY@$k&I[OG:3G5VkqB](D7iUp_?GC#:(Xg?QH*:Qt74E2VTC5I=?Mt8'Hi9++V_VtLVc)=9QR3*Os*O^%%M7<?SH6;&5$?.6Xj6QFhgPB)4@dctTnQruKFL!O^o;B@T00,[L]aB2Fl^)Fe+m0rc]mf?g7Gd;G;>9pfHi9,f1edfFhs6VF3DgcA%!;H?/j[o$FI_OJ#n*;%gP65)2h6OeBrHb4:?f1247C;QdI_WXYYEr0MP4%Arq];ebpK#$mX#]V(Hi7ET>T)(gHP6U&Y?u<Z/$@MI%me'4:cbjs2<Zh)4[?3WC<^2)Qd-pGr9>egH^Xk,1j;i_\EeCpS03P4AiBG!5*N%lCkjJ%K5>NdA[WJ^N2h^YmlZ*^^.JE9HWP.-R%QX">m2s(P,?G@?LP.1;\?^93=I_G%'a>Sj$rK>\N?Y+X-p\O\d4*7O\0CRreYmNG`5/+bE=l*B]qS&"D<>BClc;hfrI_R@eB:i*%%p\H2nl6grCqd.$40jEX/7t'7[Q^m:#Sd4$=]me(8HY:=o]@Y@fY0a;"^%a1Cme,ndY"X>K?NNTcaB,SI@R)eH$+Kbb:7M:F]mdr=%>Q$=f'WRj>CZFjU9.l$[PK:Gol^(j?QC-4U>=!)BXaY_[ipZ@/qje5Glb.bh\,,bo>oQ/'a!h@)g\I.`hWpLZ*&>&qnIRm9\-B1X%po83YgpeS&4'=KG&`MG,9lfWE8\Fe^/Wtmb)/s?@]KWEtgl%6[;.XP+&2Rg^92P+/bD`_!me'fgCf.9^>I)H*d@\G;_I43f]-$U/%bPPJD26ALTm%5B_Zai"fc]1_UAp4*#G<;j#m&h-P?R?PG1XiJ:ir85lQtU;`BVO`J^u?$PoCF95=Sg\_CY$A%=?A[V($jme'sTh\%Ar,9df`eY\n)d@bN4hB2K/Mah*.4iHLr7o8\iASp?5;Y\Pp::Z>^d>fj#]8@20Dc0[5Q0;XfqPAZh<uT\t$mMIO;d)^P4rg*\,m4%rBmu2g%!,WXVl12]=u%A;m#ujf_sCj_9(QXaBP_!**)[TNNoP?$%$?(jgJFLCMo-VCerlV`HEE_f[B_$UMR&lrdtY/2D[?EHRi`5%J'Y1+c+iR+V!^a7]r/S$>PS*TA;`,;[dOPo]MDEY*#GNMaqL>bU8<GVUW&thJ-h9oX7cC6B<G)f/Pb0fn?nXS&^A#,VH=geheISm%LNc]hg:k%8Y;ff>dp82*DG=T8nZU[C3d[Jek\rduB.E/-ccl$:Vf77<$0cA6F1a4FG9'r!cb"2Rr5$!"O6?YiCh`k;.%;ks%q1=^%$N;i<=))VabLOuJ>dbN_D=\/hdWBGI*V\&#CGY_BF*<[]7H\%8f=pBK%hC=Noht4UR9s-("q1(rXEdr.>m6Z\2GiEN5n3u$pXO5N%/Z0KHljJ;D,ni2&`nGq(nHQ`EoEF3M3_OS#1"Q;T`%E4+,_+Ap(&V3KIon9\%ZZio1hYP/_8en0mr_VBeJUO-*p1#CbNC8.#8?-g%#>"_.'3"=o\PhT&Lpsc0pHc.FH#Wb(1$:`&':fBbmM@5X37@s%SB8=g\RK4=]KIo+bFJm6:BPF8b&X2e\1-o(\=tn@]RIcEI21KX%#JTcra9K(f7B.([9(7o7#(Yg@b>!GqGR7bn'mbS:Z%8N/!]d[js4lSZ,ApPOh0Z3lrY7mP"YpERolumJP'X)VPHrs'bmO-</_HLT%H%/\9W'-Qnc%Qs\f_1D=],6_No38C!WtQE-WCh%gfOjkHVbqMbH3,qUq>J^_X4icFqD#`Ds)pqtV(S9u?SEfCDNFeB9s/&3J7s:5%)pth$4+4Hd6(2R3d`O)UFt1"(,qS7/OOkEM^)f<`dpK?W]Arh@_MP^SA:G"Y276,-a\BKp1l-0CqM=G.IK_kW$LFBJ7Lu0Zq)n\"%4]7bej4Nt2g)eQLFKe!q5'YSH%<W\Jpr&883>04NRHkZoco,9sbA\eU[TF70NFFl$NKZJDQn_u.58.#P^Q^;bB(mJdNp",_[l/fB%J,2-#f[ueb\4c_2+7b]_:J?1!#*WOic\q(4*dP]c[l[l+1RLIVs6h!:9U6$=3I#GffI$^XTAt.L1,*_2ZKJUlaD4CYn^?Q!ruQSi%fFdV^1f5N1%B=#M--@)-#dU]b:BY7iA8KKIm6`NB;"ooKk\q#'ZSU'!&+"UU).^i_NK>KJPkr&^1A'-s8f-'lMj:?9(g.(d`G/K#%o613FK]p.1RqDb.g'Y%CidTa=?$k@[Y;_iL.Z9?KY1Q34b+'<*6p1:?iulA^WThBrs&91uI"-7NYu^gMI'K=[IdX(u`M`51FS3.7%$C6%TlcLaCEn_V4ElN5,?aa@ADt`A$dE0k;Z8=Mk'G(*@(8Ff9M8Vca`ZV&?-s1_?_fYPn+W@=hidStIG/PuKEr&7R>MS>slL8hp%kVWoB8"5t'oe`n#<iYp6GQPKts)K*=_4>MWdX'epE!'Hg4mZ%>7ShMKO/g;__pi:rJaICY5JqS-Ek@1)dA;kXMeg0W&<JjQSTmN@%,7T318kVVNX3u`&gFtmmddAIq;QFg7r94KLYFKh]<ho%b5E4j'Z<*WuR.4q[p:2&RJAh:.4A[NA9F\SI(FQ!pn0e[kf_@5gqU[??%R-%tGoJK[4r+AQF2\brh<5cC`1&=LTpKGf7E?"9I*_uYm9"Po8nUsYAg5S1f$,ni@\m6ptgjr,2WEKB.LO/OASCZ),EO"@^_de%m%h*bIe4=?]I<Ac_e7<S3NaB]D(W%0X?)]gq\.Q=)`T05>ufnd22fSp/QK@F9r)o47DDW8mp`8p5Z]8<;9S`JuQ2fMOh'%oYc1@Y*i%l,NdF#rP"]S+SQHnca<*dTs,6`JeNj.:tMH$pNH2l`A`mJ&MJF\9/[AYe_+DgOlDNjlLi`\N7.[Mc\2?]k:hZ9LlUpTlsM@T!"C1%O)KG,MDN:cD9P%)o+&oiY)>p""Q.P]2rDsYDr8m-XM:+("5iEKa7$a72_Eq5-XU@fcTf,E?[>HZ6<SS]oBCUNmq_:bl-&hmg"5rf%S%n>kf(\cKaM0AU_o(?o2`JGQNGe04"1`^J%HQ[)2isLfh`u'CIsAprUm^p>>=>%!n5u\SH1lh^i%jSDCY=m)gru':DbmZmWJsbS%%%":foC&<E"O>8'9:m<(W;g^FLMHEJaSFS'5)%_aWg\BZ1#J2##ebaBC[4bhj*^X=_jZ#uNE#aeCKoZ2oWUQ"l>mrjZM.QPeT)`_%*(-`l+j^V+FhOe+Q(,+]4a.Sj)D.>a'-0@Mi>VRb3eXYnD^<DLC9@k>BR<7/X`lf*UZWi7jOFABCRbMNWNdI\<%1#SRl^[dD"[%d%1/>D1R&G3O.nLa^()K0Z[c.S9[e7,2?>WqaWTW.P==JXeaVKN0G#Wn(Y_18^@MkJM4!kFueQ;HlX:@ksc6mB"[d+3m"2Kj>3[Ge`%Zo)a/>mhbWLSkKTm`Qn1F>CQ$*V7pMgI"0PP4S'_e6%Z/kUsHImpP(FT&?,73ZAhU4So7GU7QNX\D8Q0m%1h,nHJ]gq;^#[VN5p=%`C44R(@'Jt1$pSF-#)*jQRf:Y9XP#0Xq4?eHMp0F_,1u5UP;nHrb#o>;[](&\kGn`K:FufNe$HA6Z6%-mu(_Db.4_g^9D[_:23kn%&Nt*!Ndib.3+#K8QbMbGK8.cIQdkrn;-g7c?`4qh@8%]5.TQMo1hW&9GT0.H*O#G_Y0CR!b3dX>AS6&Oe;bPaXR-6F[<:/3g\5fC%'W-6Ur55S^bLUA0/\ZfqNZ=RiZ;[?(%g!pRqOTI9(1t=#2q0%s?l%=2Vqd[JP/S$(I=Ql-]f>VYk1'7Rkp2#U/6MJuG:'4o*G/aL%\&1T.BEG92MWsu;6Z`=(C$1_$:>9H/pt5Dd_(%p/n,+nXVhTjdUL"[q-=Fe.0<V4g`YrdR:e\993elu./'ueGV;//Cc7>ahOh`-4%;2p3QaDXh0e]I.b^1'?;9q:*pU5`mqX2qQs`+mQ&Q,V)9]NX21RE'[3-o>E^q6i.dn8DffNZY09`(a3qdb'c8&+6PhU-5WZKW[p]%rtN27)damb7O,Rp/=nQh0TfEuc%ZSiY"BEsk67^S;7gL_STmPta9X`U*RXB-1ls$%KV_D'^61_]IJojKWJ-msolb//1@C7]])leH%S)*sZ9%OF5@C:,.W@Sk9qVB5e;OVi8"*o/rdRLQPKht#TRiPj8Q:C!f5`f7b2D"m'NNPK@_Vf#s]BC!%3b2%a*\_5A&QY\fO6?\p%\1<3&Ici7J=!^SCQS07Bqstc53cL,0*O*I(f@2>Dieht4<W\hloqf\HD8*8__CLTTi6M0#b!d?M\XlY+Y7$7BL.)R8@<FqSBSS@M%!`\tF740eTN1]N1H'lEK)0Y\RJHf$&_eXlqjU:3q+1P/ff?&OT?9WFJB(:uTK"T-Hm;^'^hS70p*Bf`tS*io0?"/$Aq:APJarHL6%g?eeMqi"e;`UF`;U:dmf&7-G4#AU=p;3]o`P&/-CR=CfXh3/Nldmg43Y,'h:@d^MghXM'h0_pSI&A>0*HQUdY2skNUh?Wr#?2Hq,%qquJj_;drK4=H7A5BV;*-qFlrg<d8)qF8m(qVjs*[f)lcIIJtB6+`,bZ[Y?(r(r^'209LJYZqDsG&rd]\%Q).QYnu$FQmY/gMD:+%*Lk/\3lcDt?b&%0fZpq@1<C;p2>uTJQ.qL$`H>HFMhklTcY+$]Z-,clQkSk@frKA:hofo?;0!![F-GTk`2B33(:GGf7"8G[@D7)5%U"S^=Re8Th>X&W)Yj1`0<,mDnA^9Z.)tVYV?(N?hiFFkt1&:UOit9#j+<!<&T%t\PoH4U)olPn2s,\s@Xe./NpJA!LDT^U,rFK?$%J,PmD0[FJJXtSmDlD&n>(u2pgaW*>l:+E&IWL#8RK"_EaEr!$dgBOqVjGrCkoo/'Ko'Tl^J_kRfhmDQe6CN,64k6eC39P&7%ci0;%R/QpbG9@.Ga4/;j*QS9U0ks=/3fsAc-3NJ2r398Bq,?,FH+@j1[f/JiIJZsc9P1<rbDNV*G5'j0h;@\Ws7^a9rV#FIrpBU/`1Q>m%DJa[P2X:%Gms"MU9!%6"[^RZ=]sJ*RW)./3oIeW8SAjZfiLT6!qL^c!#mH9qV.klbJD`n\FXilm='!_#h8Q!\p,i&_i]csfP_\ef%qL*/<Vbp]+405V<B6OGdIcKOenQA(j)G?LRr/rdsX3VQR:)C&ke6Qj4DRK[4Dp,:q.nqFq/J)h9PKEbdMWV=,dl>-?f3p9VFh>ds%2MYYJLGmf7L'P%%q7Xt;erQ-&j.F5kYc4H7V5`,SoeeBU?(BSo-c3qY$%XLMS72;Uq<dbbLCZD."kIj^I\N*mQ[etG+.%(;6/<"k%dEdY30#gdl$4&K6AJ8I2J%M/eZ7#;0%>=ulUGIN&Fc=hIh$:?n-`DI]%@YNm=$6T@OibXhpVE`TM:frnh;\(:-bSd0H*P@D6Kj+E%H2:iPY+T5Z%L2;<km.G8e:0^P?q6o_TOq`nkLNn9m7U'%!a(YN#INpf(C8bLh8Nt@e->d,KWX(aXE)Z(cc(I-q[,i=3R#!UWjO,t%.H&*S>KJkenQI:kIHC/h(k2T;<j,h*ND;UMNU8[&)Z%36_E]6De#=.&':[Pm(u\]$dpc:'*,nU-,3T;"Fgo?,MS8E0Mp8f;qn;js%SNOq0Ap'oZN.$c+9I@f3VXSUdljD!Qh%SB4T\%F87r]iu]`E2@dJi9!JC1c0JA4AB@(C:[(8J4;_Hu&'CRAYRJ)BM?K\Y;ESMGtH%1#WUk*k?:jk>U@=FeO&3\t7-!k<$r[i$,4-8p?8@[JlSh\TCV`EnO-U$Zp#;bUr/%9r?V^-*tg28tR2pd;1.SUjI6K<H0IJfAGY2%2t+dmoq3<UVu.*(_%E5l<5B(af.:]g\Q#AW&k2Ejf5jNppLG%2'hk(F+rPZCZ!N`_"9Gl1_5+?2[L]Sb;j!&O2>WD'i'/h\@^+94%@%kdX]GmRX8312P+<SZ`@F<;"!Uq"9goSeU<:u<@W38n.M_N``+i@LhX9X^'Il"15(MVbt&OZf9bdof-lApd:+<Sn$_`F51WnMVX%A'0frXua@s.L3C+j/N3?Wa[)1-E]DFW%')27`SL6(fdC6Q;lhUI\Ni)QcQ]%!2HQEa`2=N!Cg)b&r4Q<l2[TZ]nZZ='34]1[_-V1%?Qhd1<#,-RF\q_^;:RR[$--$N(f_#u!mb=VXO!gpiE12,Fb!?>%df&2WkCf#"&V6<^n!0Ma\;p:c_Z2%05_utIkD2[X7QASdQgt'%(VG1r#LYlll$m)(ro_]p&]`Zpd,1XM]';U]^8CY',0Bp,@#P%<q(jZ!'BNB;(l/MSG='OA;+9jp1S$hTpAWsCXjOSjs5f^5'tttg%R]D0LTM)CK5&jJ'RB5/m$Te=)d=G]j`YoFOjJtTS2X7Rq9^L/LE_D"!:>4fuU[Ecb4D>=7(HUg!!Ui%dp(cXBX4<5Wbi]dE'5_#\%nTqls6#oR!iPa.GLE`P&?7Rah?$,94OFEh*s..8*!bs><b%9W#cKc@kjDk7R^&S*-^__sQL&8p*Demu)F5P+gJ+u5/s5C_Yo1)[F%5H8/-%g/M@2jleAqaW+5=aS?Q0!"TGn+tqrn%\=0f<,)K1P)3oosOb[qO`U/r9blD48C67UCij^2EWI^473_NGaT.nk2Ce[s!K%%%a7/,=i5Z3&nIInbkE#UTrQj`=piD5Zm:6o8YLp9nZ:j\po=JfH>Q;$qa_qmmN3d:2-OrKVJ#_]T6q8DB9Y[`;n!Dr"mf/c+ms`$\%rl=t#RE<f(mP<psI,WE!@HIeqB)Vn*Ri*,S"VsO+9]JotCOTc3F//7q;rC`Z!"])kUT-f&Zo%Z@@T<i[:hbk\7CQ!n%9gq'RT6UL%@75ZG]qPj65nJEW3Jn'iDES'NC$G`=/9oD:h_R*c<A[3'iBnX*Y1mu%Wi]qTQstu2U6ucaFJ1BV[@If'Q;K32ib4Xo0[6E@"3e2r%3s=$^%S3kkMJ9[ElEGhsA\t*_[0*snc_*p0<BP1;7Rbj,SKNZ+?mR\.U724>"nU.V"2E=OMItNM;g$:]K1cP]<sYN;NWft-g=@,c%9V"Ar.um4pW`C)YVQ=JH92Q]2!,fW_23g*3+dQ`mpmGku%,9^L1fK1<@8BS;_7:tu4pJBiMMbnW$:/b;<Z`(f@('J\"B-!<(1!'G%"QL;u%b"GEMQNiH$M8,5VLmVQL`JGXeZ(#Y[&GHc`M@'smhJhY,Xamj_L[tkFR79Xdi9VF%h'duR+NWA$:q6XJ5!i@1$CSVgT&oC%U2<D^"sYK4TFCpD>TX#Lngi1RT;e8J$\^Q/a9DI9l0u@n])es+&Eo_d\rG2>!(U%2\\:DLXgXdXV<bX\$FGX/j9Sk-@FK*$'6Xu"%Etk+K^oEcZUC^+tR_uYpW&RJ<2h:oVYk4rP*<X7,9G>/Ce?Woec@j/h]i&rW'V4FQQnU#/J<!XG"*Y`?qD2Lg:&5@/&[qeFQ*q#C%Nf!(3^s!g-1;mf&0bkf<^gN[l&GWi9G?QaR)nn+:%1JH8;fGt143(VC(kW%iO#1D<Egd`d^deC0CdXJ'i)"ngm#$>l<uaJD)ct>d%1c69PJ(&qo*#g4u)[sUu)LdDhU78ZM2K#W$1am<o<K.nUE8[aj<eR<KoT!M9oUTGjCeNqk0p0$I%89:DW./*(JZ,g=N[bXYJgLN=%<7l?4<dD\G0H$_g>HYN=)b;>'I"s4BBSXY1Qj,p_)=IS*OLfs<.nK3?">C^f2jG>69ihb!.Y9Z;3tiRk[kpC,Nt@$0'Gud(&Db`r%LkuWbJNJB=5jHRJn2"<&6O4K;=A3s!DZ%]d1I7&&"^nd@qS1OB)AiMaN?G_;g_L>>QV?F^E@Rtsg,+$&_*7oD'[r<ELPLnK`)<!.%CDJ+j!t7l.F=@DnS9n(7gk&3;7mU6Q,m-$#'4;`7pr#I*BkM:Q'uC@aR5/_:^gE'D5`Q*NUi@q2+eUf'=bK?8Vh8aoA4=-s<<-BK%`$@];A5NW,$cHEq7cM)USUruN@@4'/oG5fbaq/7ScS<'9**Pds!,]Q-fTq%nVQg5o=?pp5!SYHBoa27g6Y'UuZ9VkX&5@g,Yo1Ok%7#HY,!-8`75@$6*)h7s'fE=!-<XFjO+9i,0(ktTnVCr&F;ZZa3cSXESj:O']"\)"`gJf&"WB*C3"T:X+U1ooGM-$(!K\7,^HiY4<%+M-^n!,sfpC"-$3-@,hbNh"ZgQ:n.^gquII1U.`0k:;YM&HLPD7DYff4od:cK)Iq?PI$+85h,8DAMQ,B/;VgYbXCh-@@DmT_a4.7%f)]?J-s6NO"DA@b&j!:6i)d]gq)dN7%WO1iVEtj0&KA.q@3DlKcBfXS6-KW?0cd.oj?PE4!bA)<9P>Qq&I+;IJnQ;9@?C+Lk(rj8%_?BEAL?Y#.BK)#g+[?^^\IkJ9"oK1M"=U';(s3M&I(HI7`'U.-&C@`DGE,8s'R?.In8<b?`e)DW\VC_-<WGEjF(@q:#1@]"]WQ6Y%2R,R[0UcK-JE/RQF:`:%Mc``i.d7QKkf_b3,n<1>Mmt=<4=FPJ*<ksXJdKsOZupJ"c`hXP/tRX*+j)To=G6X_L6bHh!GWO_k5[:h%dit(+6m\''5`d[MD@G91IU\^%4&@O=*AnSm-R<FX>[O22\CD-D5i6ZSZiUA`U.4%nW)I\?^lK2\8nm3!$YR6mbE=@Z0OiN;Jc3Wu%5di^3$X)D-#!lWLXLa!M@Nj\1%!2`!#rnB5hZJCj"X,#LFlFC6Dif!Pku.H]%c[h"4%kiB$p[):`U8rtEs3!Z=6do-knjO)>o&81%"U;(^lD_;T-8Jeb+eUM&\\YS7ii))13p<g?:ubD&;XHCSAP@OUm1X(3bYiP#M\m*o%#oKX1n[_K66[+1%+\NWCU0<flNV?Q(cXHk%(s"<<ZnX*5R'J@c<@='B[q2<e%hMie>OljRH%;9X=Q95f0I$!JTG7h^%dO<e&&%2BTR!#GiUILN:5AID!sQ9Pg)of%d^0!d)A^'k%'Z=qC$Ea](",b547qXC`@)0c.bY]p;$\Y`ZW$=-a+eV;>%'^46I]!LCOUen06#S2/!!$,W*rl:eim4D?5ZQC@$uVU1)l^G%dXtMN%L,>:%:g!$_9P+GHcJ?i.YW.H9#JYno=^8cWd=;:Xa3^4?^hdD7l:=5E23=[?-C!oMg_TEXKRe<4</.IZ!".u*#Z,&UC?HmI62C\S%+,E?/#jF/Od<(@>dkCnXMa5gS^XH0sJuF6fLa9KT2E%P/:2?nN`L2J]9_&o3l!6f7#>E-LH8QD4AC+4Jd[QApD%Lg)ZY3>-Oq'm^%j*%*_:'LkQQpF2sN`N^MOB(MM3^cClq>j'/&&.,_(*gU\rf=80nfe51PAg\5Nm9<dod#3@l)D#2C$Q0NP8ka#AM[*!kT%VgQtG>"%!!1W#>@NTn&5uZ`">_?Z"<(/I1^m?Kjb=7LXeCoR.R8s&Rm;9LR5gkiK*b(qDP0IMiW_86>&p9%h*R?*FOYURQ#4GW:oV5;=/6j)%:'_$i$BUXr`BZCu-s]+(d4JTN';Zlc$0W%ganD/L.EE[5R9;-#]`\/mf^*GthZ<c\(fo(+JQ`IKFQoJ!V+Vs30JF.$Jo/F!4"-b`%3P*J:OfYlHKA(ljBe2bOci=&6$/6-1L-HYC8DR=C(l&Q@:tHG`+TV5Q)o.+u!Hc]6:urs"O%0Z"`;PB)!2U6C(Q/te<cqgW/XuB$%PLi3"OOL1,pD&96#1cpCrCoSL-eLuk]Eg^=4[D/[EKAU<^]?_..p,oh=jbn&qs4jqW5sWlFH$RU5X:(f+R[XM5b^,m_8=A2=sP"q%Jm\U38C\4g"Ct?q7sbfdTBc"%2nKLugqLOP]`5Y#rV:cNrj`""qL3YWo,lO>+?]WcAr'2R90t\i!23^D?u$0L&A(J$RfNR<-P8X$%B'LM.M(#+U$8po1XTjtW_K#coI3>[5?tqMN>C%PG:j@P:d^T8lM-*"\&2lUb1c/0*;Dj,AgB7Sa:W9_1otqqS(okYJ*9^&EES(82%/Cfo4!+lGNV$2kc@5`sWKV/F*+QN^S>VuX-TV4sa!;tRq"j!ofS'h-l'W*Na"#SNM1]h@+)Pf$H\LkXrEId8A*e<a=&RmQ"P9)N5%l(eWZSP.bZ6CSOO)rcW"%p[R_6h3d;r)F"9\k8Je+\g\-5CaH/8J<8f!U<mL:@!`DMahK`ZZ'4qQ]=@jdulTr_eb$-=_h4H#!-0a%VZWYmD,nHg:ga`mZpKGM>d[DF"/>]0]u@,q$S=2pPS8cC4](b&:]^p/;h.uo@$.@c"OIT%08k95-V$bo&4F$'(f\g!OjU!t>)!?i%<(Sq_;BIbJ'Pdm^`@t8#<@/&IeBC_u<QXO3cnZhr`E&i^/KTR)]EooW6*u)[NHF55jM91]U7kIpU9fIF$07)_ndT_@pE^c,\Z!P`%!_j3X'EcTcK\5MC70j`pQILBfB\Nrjm=JL+W-&*UZ&hZ\6oG0'7CP/MR:5+5/@(<NHAf`k5ff?eau2;\&Ye#2haf'FR"AF-K5R(7%d5V]cnO?i(KU>(UpTU#qj<;`]5G\9T;JJm1Oq]HjQa)+Z.QGkEL%D[:%cupjC>!!`3@6Tin)u;>dHon5U4u,A'sJ%uYAFPgNG9C+%YG!^P,O&_eE[WEJ#K_Zm?@,Y='N:I)_N:9V-Zp4VA/8O^RKep&f[dL2nTV",ZA"@JNkt;hIYS\&/>>II&J.MWf/&B6i+:>2p&R7n%j*9Y#KG8`hNHp2MmZ%iTq3XB;[iWBp:$!N8\EtP4%7?=qbhrN+572U%l@U4]/KOpqRI#Z)Gpub<ZH3UY[]SV+XIgXE-r=qBjQ6`Q%D/.g;?OSr-Zo3TV/NS2Wq&-`7d'G3DM$:CBk^#!XNB&cH:^.5Me:DFJCo[,'JJ'Cl*GPR&s$;_)D$"=FOP`i&I0R1&5`6X?!lLZC%l-/Mo.mmJA/IoQ]Gu[F/J;%X87)B*J]7O:iQHjr"G4r4C$XpnOkq,p:!2Ab971bZ)-"O`UXh%8:7H;rj@Nr`6Q&h`6J`B/lX\">O%n.MDoKBQ$>mg=@I"kf!Y6VtE="En*!Lo![=U<V[sj1(8Pf^/E%#\hNhYmd,tPJOCc%*o4$e]9h+Y&$U,\KP?6W$gQtC:4i?AE"bk%rQVL,7u0pc7YGHP:(Y;e[]cB)UWMsEnj=Q/]iqA$Bprjo4N&^=W%@@3=*74eDe(5"RWRniNj"l+N_Z07'uccd%I'0RDGmhN82EUM%E]TIB7(EA,cOg/C`*nHonm,6iQSLD+8^P5qjQg]nk'GsJpEC7,Z=@"`.+&'NLn^T!P2'.CG"rTFP;J#E/>_g^R4B.3=<J:mOOsqS%V;[l9d_hQ+`fW]b6l!bhpar4RKIA1l`?:SBP4bj'Dt44p=2;q&88&a2q]$^gH$b[j\2X$]=VB_mNXS7iXtkr4:d\hi6jE^6a'a^!%1Sh1NWk8G&/_PZrlBFp+PU'm`2kq=!O`/#CD?,8h)l#/Lq>=e(!dU*.C!QbA!YGAb>5eKaBJo?J1n?LG!C;cu/08nHP:;6X77HKg%Y\,e5f7RfEEgX!uQssj!2`IglkoBil86d9)aRqA!ZIa'd_"`1F/QDZ\Z,u25V4*r]CE0</%GVkDKNVnW3C8P!gPQfPOV8RK]QTMt%LqMQP_sPep0SFUF6>BC]e-u^?F?`q6@)D0D#d;WGarMsh(U#,QijCHKcWb(X#`U"#Wu-NA'O_">XU&Vo_VC8>KD@re&@<3iMMHet%V5$OU1Yb9*\6<sYg;M>D_Ft>?VP]L)(]ai0AVelgR$3ABC.b:fh4q/CB7H;k3AbUp"$3@`[4F6DZ-;/\5&Ma%#1k96J_[rG`MQ@,%*E41USS?>:'9Zeb=Ca`BJcJ-EFH`4@3_gOn\66m''k5d$:`HN:G!1tnMRog>#m_;&0oOL)K_-(,@U:N<(NK_Sn""PX9pN^:H>P3u%4ia(CJ2DdO]c&o$/IE799][E?b`T*6YD[Wd3K>L;BTqb;*TO*m=lcgl1a&]mYW9"LVPu0'i1SQ)hIi!/BsBUTF@-]VFeBc\1J/?c%iY_R^?lq4(l@G>GjPV/7F9B<d&>5`0B#HXTBo=+)%<97)+F=6jNmdXfq&m,-5!&V%6m%R5@\)9K)F_D76j'5i$>%r>BBp+)k*-3G%5p)gr6MZq++qr@cJr2=g_F2g<@tb!0n1d@`dCqk.i0^E3<YAR?*!nN6XAg=K:c6**2HgfSSTaARZe:%i!@:-C7?dFqK"c"7UUX;6%DO#g3crSOsYskIo8Ke=e_a[FYMZ*_b0hKnram3h:<SLR%bCqFKc7cFTUuKgccA[cf`K4n<FbRKT/UiTl#3LuJaeRFFOZ/#GN0%^e%!X`=%)oci5jrGcQ,#Cie.Jc_/O":Q:%F*85Uk'5_?reBR&<V#I'=&Tl>EWb7)&7HeEG\:V6Uf!"ZV48S&;D*^/"Bi]8d6P_KbOW2%'TiHkU4+R853[V^5kIs/<Nk"J=@I;]0u"nKeFeFii,+37Jm#WN[LGP;;I`O92,sr[V#s*HI6n*s:^(uI*K^RMQpsUb0k_=2EHQ+D%'CJU4$N!h>;T]P;)ibICk<okU6<L/tN',>JXEWIffPgoun-;iB*/?aG\mPtM>.g5?K6@nn!7BG<ZQ5Je3_=GeZ8mraPI%*DRpa*r%D[?`T2>J9%NGRC9T5fko3p/=<'%!a1I;o=ZTErq&?2C'F7CJLjQs^FEKuOD8"s60b/Kr2:8\Ag+B8UduOe&jK0_ghV+*)gJ,QOBO%R`Z2e>lr#\\FpXU)WYNuIfYE_<$=8AUMW_uk=+l%6BFtO%34,qZi^jm3i-+"kjDHlA#Nn?'1)t-]d/B1P"tfb;Mdh?Fi`o-V-acW%Cuf*'#j2/l@0V_'0ZAI`KrEET"22[<&C[A]d[>Y19L^:LR3%(oG6F52o61l\jo0AI3l-J&_>O[5iM6YbNcAlf6J"KZ(gFuYK(0=]%:P"m(3,0'<>)A'MKOQbMJXfQD-QE_UN#RJ&9>TOb7!L0q_?pIW!eIRZ7'J3dTGEEq"i>9c$AIo"_7ccQ?ppM='MFAj3(?:^6]oQj%pguo.1__?tMP`k^>_@%LW9A(tN&M^]Nf"TB`0<Vtk?r*E\WEY/"IgAS)!#9>5AKUWIi.*A35B*68gIhq+%Gk/A1.O'32cgF[H2W!%8]HiT^4Z4p.Ym1]8ngTt-aSoc6q.^''Y1F2BI&CCbDZJU$aZ$O?o-P&R)/keo]9L7TLN]$0dYIGP9=OjR$qC8f%Bgf<$Q/_1RBQT%cK:K,X#D:SJ;n6ZPa86))J/NWDmDi7[6`P+BFe<rHe;h"LTTqlRlkAoLMcoZ%m\cC&Fq,8GoS%+&g>jqKR4s1!t"ir,.o@5T1dfi%'C!1:qfkGFTV/J:`hsOA4\8bk6P]<(7JOG\*jMs$/CM!Cp:uBqF>:MB.$%`:=-+-Kg0eCb*5)m2bc?C7X;GZ+.I@L7CZm;[;r;F=%qPA-e@;f#)Afid:(A+&P@T5Wo(1_WZ4qPOE_i3'b?>h-Z'Xhi4P`4&A3<dX&J6Riih.ED7@[M65-?i+[b+l&W;RmPnSEp!>M96)5%B8m*n95C>4W3R_ricTR&UX:L""ZcX"$K&p@A9:Gn\9(:eV%3Z6A-l]#MSbd`\fHusqER%U1:PcMaG2?g0/u@XR:.pqQ-pF-l^Yg9%\E]m-+oi9%=^E!67W>5l-#5dp75R<SWLU2J3J/6bV7YE9#3c6BZt!5o_os7$2<CM\1(B51Y1(KW[5EnnL(`3T1gs%BW(:MC64>f2%:r1;1n=njTP6[+XdUY]&8qA>)H&EBjQ2YIBQUA)Pf;6ebZ"0_^YW;F[&^0.g"K>!q1)$&7l8TgDo*Vg<8tBAH:H8WVK,tf!=?jkQ%NMHND%Z&6=[a@"*3$hJOAb;T3'gc_j@`4.gFBAt2E"9"1[NR#ea<VB8,ft4oD[IG8<7=,>R%2<mTc[*tH(-(b./'k'+AmA]ME&SP%&;Qrn?',0nn<g""Nlg:W1_iC\*&^==%F!5_F;W3,3'bWX!sBL%1p[YN?2,%fO"?RJ6`.P)EX_95#UA=/fd=$=D)B?pU;7/s_2Opg%-7Z,FSGEmm&?6?%J2,$!A!pj4l0d%p.72G[P'K_*>FYhjOtY$)?mMEO1BEjb##WfIKL-_'MRd3u5D]aNJYZgL:cRO"cnLefjYV78%ibo`I%<*d[ou]1aD$`YbRF:fZKuU-cr(_Gd'Qh8O7=Jla%bn^^Ll0=ja"gMG7&:M>Yam\#7jV]90?5@d=RW*/X?)QG,Uc[6VZ([X%L]YLKKd(A9LGfSnEf:jp3))\M!!]@HUMUOc:C[+&/6WkL:F<b$4UECLn2D/`Ql*%QJV>cs]rU4F5_4_T#oPlAW,&XcJNUJ66`Rsg%G&5p!fhR-)Fl]CY>UM#d+`Duc'7MKlU[4AU9\p1g/LEn^@8cH\dQ+XehU*U&J0O6<;c*1YL%_S>Dj[[>aTXdDXL2&_(olO!CBa#1%$EL626"_6-LCA:g,=?Jk:6ne^SqXqC#p9;M%30QU.+6/2P"R=Ba()HY7]W8Is1rj\fGaBo)\N(TRe2!,Y3Se1r1,#Kih.@o!*lsa%!9nnX<an_IXUmhPDN4u,j/!X/BRpP(RdFNE1@N@DV8!AKeR^Gki7YA"+'G",q9ZcNOp>0\!c#:F8;!s/#[(u3Tr2RmM_):U%]:cY%JoL:B9X5!qg2!+TG^MJ_*sh5>pIM]/7BRu;l3MAGb-m!V+Yk-*An"WcJ0U7j8B=Z6JLPXZ1s'KCW#pHVm(C0Q9O$Y\)&PE.[lE7K%2dJ,UAE(B-\b9Zj`OI*N6'L.UFGit%&4'!e4K%dV)b,O[bl8[.(fX4`P9a\=P#>.'Tjqn*B7uS(-Y"JKS$@DWdkB@7:*h9Bij(:I%nTU4$f3rJ`)EJD!]]^cZ<L;&i[jI(Y90=WB'kBPA#o]ZH=ThTU@ESRCKo0=kNaj8$cpD.nU.Lad.,Q$H)"&_Yi>N0AiojK+Qc)92%%ZOagEDo]<>)hiEYpICD_3IC[)/6:a#+1E@:"rP`+\e-7F**hG8\n-,^]gXbE)Hrk'/EY3&s?SKZuVspgG4#+H'JpB,)]Nh>_/i!%3,SDcW]Gl6,*Y<N4#5b`Vo1!HDUL16^2r-4R>m!t=/NoK704lE/X/sS'>4K.2kdUKW8*rB%%hJS:afBnPY`'VEtjn-'Tp*Dc>\Z`%K*l3`KbCD[Z`XA/=lJ_L@#e<JEkE)0R)Vi*V2qXtL(kEY#[j?B.;Wm3Dhq@B$S;P<#mbN15>Nu&UU2hN1A.(k1J,P0.S8Y-*U849%k42@S;^F#u`hob>dq8+tPJ[ZOOB0bqU7+uT6;8AHj9Un>`NernX6>UB=9fu9Km`$[CH+!Q'=_Nl_9oNP^.+J6q4,Hj$%D'I&.P`_%KWraSoL.jT+G_&fR!).QLMBIX3iW0JKpZl+Br[PQa/hRDB*]us6RGUTQ4Y+#o(mlM'SS('>j>2BA4OjA-?_g11;PN$nk'2*R-UEK%bTsk40oV2/@4#XW8VIlm1)-mIQQ[B"R'J,-PuZ6b%/4!Q/AQ9jiaCulA*G3tc<2As!HH5fUGQA3J-F*Kc)Q@8)o#lL<7mf&mf\,/%-QE[=Eiu5gf-HaLL`_=+,/[QI_:2)9&u2F8o4EU$[cf#-=69,_NAE=M*2p+s`u19lSPt&0n"B*E+EQ.[]m87f)iQR)b-:(,:KH:F%;[1bXJiqROH\qj*nTjb>KQ0^@L!V]'b93>h[<a#X.T3`8>"2ZpDP!?AhQYBf70.@meTKWB=Lnko=dS4+>``]infpkKo-[@b[H$J%%6#%+:ZR'P.[C+ft!Su]&366kjX0gJHEX%MnA$hE19TfR=bR>fGb2@^kff#@^)jRiN:@=*6!00Yb%OVpF'99tEal2=BE.W-b%D%j6%Qm1'gU2Ydi[6TEbVM+GWR;An%SY[UHI-4T5d`@4K<7`<_V_U\IYU-Gg7s,1qi@1OSV4lg6;i3!gbkF\:eS&tMB<j"38;LLPgLQk/%jg0Q\hE"#S7TK8T6sbXE$UG&:-^o@'8cT9ME<e?VPsbNVe$p#Y-S)>/5_gTs%m#DtmDhlE2'Yh;-HNW<P9I1'SA8SQWf45S\Open%N8oLGZglZ\S&pb,=V,%?KajKc.SDhX(-7>+B[#UIb2=E)f?2<]bqaph'[fB-D"P$nAkG6<.*#Y:*=!)OI<`Y@aoUUkfsK_d5S[0#%a)i>[fr6RU(.8^&]!4Rm<B4?W6a"L>%2uV5>'V"k1-+qr.XSa"d)&d@%H`WUO[t&.I8uX,![dMS;]abF<<\Ce5sWS(W6PC_)6QF7%(G#]i)JTtlB'Ftt,at<$AJu8oT852b:`4uETq\TV4D;an[MYVK_X)lUBC8R)'s@N9;dGS1EeBdBKkXYH4G(Q7#u`;ZLX@-M"6&^E%p>16+;l_`XD1["'k?tM%!rM$>UpDdT<K:@6#7/RC3/SAP,uVp>CIuCn-GbS()HF(6_:l&&EAOY7Pc1K'6onF$:.aM=(:iSk[6[a6%Z!>`X\MkP(A4a6DHL>;M(M0O:bF2*QL8Y_@BUG*DF\#>h.OW9IAAg45&e=N"89_A8^C!?!#(&Xt_'odiq&QRXo"Y`@DiJ=)W=Ds4%RLE$r%mg%):o.Sb,gBHA3\Xf#5.?6,:,)SW9(M%H+X2=KMPeB,ed\<rA./(VWg)J6P2T[op/X4Vk%/N:(?$YuD!>gXPg2dE?ugrJ%;2ctiAG2oEOUd^8<7&Qs&2&;:QUXEn:BcZX_M))hj]\@PY&N?$W'$#saCI-C@c!+V?-!U+RQNH"EFeU-oE4V$9laAB7]1?2DD^*+%j_4eg=Ji-l4H[QKWE#1^l,]GEp".2g-GcI>iFQ5[B-UNKYY7nDgQl3?YFacTW[]G_eR[T1k;#-+#:OVhEJ+U'gk)hC1q1U@,B'+F%Mk;HhKJ%Mhh1<QspYXrdg,#(Ld0-cYO,5uF"OV(u_[/>Dk%Knc3MuZoSXt@ZM#?[C*b\3,XZ41S-lB$s,0C81V2(`G`>ZeB%99R%%UGt$>LX4Pe.1=8C/Oa\i5$-"R5:>&&Rsl?FO<F[KJm'q)QqAhC[hi2aVoc:,E#Tf8s'PuMIbbGjKH4'V=j'35DMG2RK/K=sSXXDK%*Y6e0b=S$a&OgGEI,G@SA;t(nA/[O-T6-'(%bY$MFi%^sPk7c,dT61N!`eAhPBJK_g5[VL?WsIkH97ZsKD`o)/jn0*-9ma$e)YKu%W,pTHQ'+r1YW.0MMaC!D`->"")(FuCOj6I\if[Muh$1@$QDSaho>,Ig3&psD]N(4D+6CT8TfIKO%)R[^,@j;brNG7UMY*,'i@U?P%IVSeO/H\bZ-9Xa01JH)Uj^<Tf+U0%<LIK%:i;P]LN76cl0P-Y,3K%IA8iO:B_[XeWZ<W6RU?`:9Sjq?T*QrOue1H(r2p^E(DI+DR%HK?_=F4_Rk/<\OnU[8=3nM.m!Bd?Q-+rW,7/o<F=g?$Rp_oS+gag/LiSJhkm5.QRKaBYoWaeB9n:jL=5V/8g@J??nC"P:@<mdY$c%K[N"Pao`[!7*0?I!SpFZ2I`.nqQ"ME-ZCaEPUDk2bAd&/A:I\n-fqeVa"JS8dA=$9f;3TMe#b$sX%C^W]M1\i3Yr0K@-"%mJShaE%%Sn)5GCl#jCWon:Q^SDVVa]BnUAJU):b=gc7j;_j"N`b=;XO[SYfl$H<.f%BE7GB9A_H`'j6sp]AE[5pAL0B;):3Aa-6&D.l^`)*%;f4TO2XI'(Ob$MdCtkATo^L"e_OU=VQ'Qb@&mBuU@G=j^jbd8Q;UK1a.e?)dB1TmLU/GRr>DLU6hNr>Ul5%-$if$+^1U5"[,i@b^%6]7rrfINk'RP%I-&$/00dj7\o9m/Sgd7V?kAJh0_Ni0fZ/h4-jYY?<d)8;<T+;c^q%%[i'b=%sDi'1Tll4ei+ZO4S4)+:*C&3(RO%I!S-KN.i1@Z!]9/:q8]=+M-XpV@8n1mbUf8`@ZRObKm]:dVL!lJAk5$LL3a*Q49hSIAB8$fp#*!MkY\mQeFHr_UARJ<fS/Q9A4@D%Cr(.P6K@.,<1(TTh;kDsZ3B-Nk==1qn.0p$0Y)&?!@/`:4jega6Gftf5nJp#Yb!GQU_.fEl$nuB6'Z9A[/!NYQ9]hHXm$nrap3AT%E\hg/-=[]YcNVW)Nrh%YkspsG`lseILdIgq+]HG'5d"bSp$E'rY:P4No:a>5*t'N>2?K#Nige@,r>^Q&jNOu*6WOIrY$t&\&[i]O%2%VNshj4,,L<$=86j?000W2r76tiYZYQg'39H5Fh-"37d!k#P6NBX\FDSk2#ne4!*MdB;k.5i+V\J9aFVhR;8LU7'ZNK\GV*c`/:%'Jgt=@r?+ePE$YlWo[Sp%/!a3UU!'m"h*@V,]>.Qr^#fe,.h9okD1N!=-u:[B8gh(&[pc;FLVZ%]?Z-U,+BkbJC9(k>=:M&#$">7%%j5^+nQ9`_11I%AVM1$rAQ4jab:.ls>!o1'gQZnI0LME^U[.?<=Kt?QPUTJZGE`JY(I%=7F=9iHka38goEeG#74l`t+c%V=>?kfs%-b$@[,ktbY9Z4>DD,<bZ%.iiL82V)RL3l6:l.WLbnk_[)`hQA8`olJT;S]81`hP."Z94V:VmMUbKapRVSdHtO[E0.%#bf1DH:K=E%iEMPkO)B(`:D'CUAV/"\DThG(!0)-CX=52ZM9!i?8M&=>[?bp3>4U0,_bH:]m%JJmEOLT16E>3s,T\//87CrMMBe=RV3N15.Yl;'%<$Z&pPhTad0)$)c?d%?KPFWDjH)3<Q$sEDM#-=N1,"Za^*Npc%KXrjbbL0o48Ya4LS1c0FP*0Cdak+aM:jnu=3tYpp[EI"^4?`^a%7^Yq>O[l*DOb-(Nh8UG=j?JC`39I^t<M$Wk<YR-;l5lLW>i&igdtZ!MhqldoWZ77scuG<XQSd.sLl^T$RALCfg$G=bKId;#ZjMG$%8gp$ufaH(4CMQKt6<nM4$dfu/8l3Kb8L9EkLkp(NcTr*kJ*99nm]HXJkWiX28-q[F#=0njEYoh1aTpT6ros'@6KaQ$#02eh/5F1P%!-j`-,Dc8b1`QY^m/!VI&db5aId039*PL0=d(88;\JEf",/d;8VD-igK2-PZVB',*_Jm$[MQ</-B5;T;R*Ae+Zu-5_>]oV*8nLk3%Cmpk5N\Nh?Z0;IZ)u)m:\B3!me3^)Zgu2(b7eSoD)=U7uVEB-'6Of7tMU8;X8<_=*=s]S6W]<,`D.<M>SK\`R9g^[Z?/]O1HAd0b%mAs78BHO:9<M:sm$r-htZUh&bb,"X#\3DmR][Odie7@5TKu.pGm5bV!pd/Bp.gZup/pG>g+f[c&@OJRii[Ptq:BNO%n'a:8)Mc-+%d,Etl3e#V&_^7;/SX]G3#:ZY?-:mla9EdZePu:/b<bI4<O"YIkL_j[ml)SYZK<@6[!'i?Q`h0g0-]=>:kbPUaBH7+j56,MOm#=dY%7DAko40#bq$CKOV.p`LYJ=>nMD&AfY:+a!l!c-"^s.r7=A':'XYtiN**/ogUYr9dKrC7^-70k<%Or7sPDZ]dKAQuGE%J,3/2d$R^%>90-89^SKVk1fo?h7)cDP$HUe62a0c&0MG:b.)&:rBq[LJ:IaFJ8JJ;1'WLiPi+Ph@78Pphn.HNB4Y(RbP%#N!^X,=G@jl^ij(4Q%Y=2.g3QTiDoJV87gKdYr:DUgU"n&3=bQ#tOY!GK>gm*H1(=MNS`+W%R"CkI'P8G9CN;6@.NRkM=(e:eh4rXSJ(+)!5f<JhA6-o'r%'SGkKYP[8;TU6OHfZ&-GLUT/E-,lUQlnp8f]D>11Y^+,4M',jCfn]//KNF@5feh"K.8mg<\.'aR.C]tLWi1P)rk^blp(`%nQ,[cO%4++g(7!rQ@r8[1%?ZG%4>aQF`9m92?3T:fEF^'CiP@\f)H3C&B83iC$P*Qsh21>gS2?b[=aEl't[B>BLA3G*V#fnb&GYVqEQIchU%^M03hIW1;lZ*[M0"RJ-VA9\DIa=#H&TSK2<^f+W@"p[hY*X;WaJG%Z9WZ[K*78ngu!h?!L3TJfO#Fj8nLn6.Geou%D9Ffr3i^LlZ%M/dc.12'(IlAOE-A9$qR':*%I-@KB`(TI$J2Sl+LN9q>`aJg!?Sa3P!Y]\i-,tiAAb44'&2%/eaeb`=dX3l2b=S-oc$"STW:rjOU%T")<)Ek%kTqr7$%DG`r7L#S!BVIEfS=Rhpai*Ttt3tP/):?8e=e`o_PEH^m_>NR8>)ubIR>ZPDAF+7:f@EK#r:2[n2Mqk]P>u&M@%/2RORV7Cr'=;=(f_;%,@Q10?IRbX_kf%&U@IrqW`_#UA^+<Xbb@s=\4**l<E=IDeIS%'TZ>9:IT=hu>1L$6f[C)59Ml_lZLfX.C)%SWq+F&6#?E2c>3ZQ*V9Q%^UK.Z0[2t#hM-t0rE>pNK#13*&Zr!^aEY799Ihigf+Sn40sb\4jE@GG*u4'*Ek"qKl@ru_bPP;TocFa%ab?5J[YI<=-Jdr,3fcG!g_CYt!:;CgBdf`LHM(a6B$)&E/0/I-fYk8R4a]i@b1;j?'fm@`fk=/Y1(f`U71Co15*GNH,jBGB<0QH)%Tt/Y)++2C&&@W>?e7La=!0_Z5pcR#UAoUYA9@ojtO@oGam'2H-&V*l"j;d$W.namfJMM*q0mS<S!&nW.A2BpOY;f9dP8,XDcH+"f%Q2U3=Z5iZNp)U^/</"'.H1GZQI"bL[;2mK3C2/'\Jb4$C,uQqAb&S12?,:"YPNr4.DL+<@h-KI3b+JTT]4P2pAR^+^COWm-Ff'#6%erSadO0YA32.mUlO<W;GJkb*(&T[lm;H[DiH,`cR"9qj#C*CRa`bYWo[]5!L96WsgMudS])pbPi>8j;.oQ.-^3Clru9B`C76%8$&%S;&&-/u8=,CWdW,YT0Y*0f48u9\B^(C!lWhR@fa&qsBQqm?7;t7rEYeI2FO^W]oq8BjpqX7cEX@@-9b_K*`IKhJGKRG%Hl1=?$2=%Cdl__rNJW:!B#usV<>odTU<!`0Cj_u?VUr-kE9loV]d%G6h7Ds&X2HAl&)-JNK-:_+9F'>k29p=q</@7B&&Rch."3ZHpkTsLn@qS%lA"'cie]$`jP3E@rHKti(f8X.7&$3)3,^oTb6t_,fZ2^IBq`K+=,7rmliC>M`M"h[njs]#"&6WK5S/bs"E<npadlO20s$lAU=4gb%`7sZOF(3[rGZCro&n/b@@=f&RfJ28BSa8d`,g-MHkM_P;8`D!>J%g3\IG0dOfrD<NdpA;!<jds'9oo;j/W`t"A5sONe4:A"OuGFB%K6[O2:*u]#VjKn\DWNllXKf\Ql(6-+Q-IuI]M<bbE"a+h[.tge1b1f!k:K3"^uuHpPrd_YbZrk`VAm!n#0HYRm.WN1:PW3,E;1Wj%QhqL*)(^m22+:>:Jg6LI/7?'N\jU!Kncs<$K4'+j+]OEG99Kg9mLbt+FO=g=fUN$+/%=ls3)3Cn1O4na:)b+g'4#iScAi$?cleG0%X`3ZYM*:8qZoi`#XJep76(?kVo-Xf\VOEkf8VW_m1nkiW1$,;C25]]':BI.BI(0q8K>dsYZU!EJMPF_0Wh$K]lTD6;]J5-m4aG\"%c)g$S*3TEO-1R.1oe,s4>2=jlLAf1cBFVku=Z]s.Js7j5Pn[D5LL.rV'[&!9d7aUq`:4Cq!8=Ns(J3)$m@ijI;MFtO+TOb[9GBgh%]2SqlA&;LfEZ*-`K;SQ+@1?D,Oq&*Q'GDZb4\=?1Ur<!D*C:L^QE`l=r4E958i'/fGCBY@4R?+jA*]Q55J$<_C.=A'Ku`t"neQBh%Q'p6N**&a"EEJ=5*tQLcgVaZG.hs@2'PV#'1U`$9TF"4Nj/E+DY'pl/Xm,R2>dMJW'[ajuY[s,]C=j-A1Xe!:n+mA8/AMW73=8`O%&h?HCZ,kk\A%D]YTL^]7#ZLXe3??X46dq.XLJfYF6C>LPAnd(78o$$4>?:l3X,PX[osG-YXg2An[+HQfp;U:uA59295E,CE&hV(t%0U<s/!-b+#MF%Mq3(g?N3(U5R_0>@n+Msl@&c,A9;@slMY"'3C8lcl`"'c$IqHCI'4K+#ud7a,5piO#DeV+\TZ0&"%,'s9c+GGUp%.ce/*#2".<>O#6[14phM-u%_825Re_,9NZfNQ-j/7U-OFf7saO75i]6HK8Wk/s?W;o%U]9.4QJ/7af9Mk[4)$>"rB%,!#C@]99!p%V<_FkmbVg_aDoY%Jhe).BlWE1rt<eu$msY+'S6lqg#T<@1KR_lT`nW+IZ`T9]3U9dXb)!TWdeqoOTp1K&H%fRRT<Z*KGp3*'3j\l%5d8Yp0HP0mn>)[1!odDM$W]Wo.s"1!KsU>mGS\7#fruU[8NC('EM[BAO8Km-;r0p+X1TCsj)%Pl![BM>R`;)&pia8I?X+<aYB1`d%^tR&\$B(#ma`.]6HZnN#\gS&>8Cf`>I<+Wn-/]luMoZ1bg"d90mK'NEEC;PcO\3@$"MN1\D.Ef*/Sh=)`FuAk:bO@ika":j]!JF`%@F8:VY!-YGpCb=V),[7L@F71#DL'%Pbg0;9Oo3Y>U"%SI<t]N,rrs`QeT.JIKPMMen/b+:;5-$"e&fBd]^ahVX!(%pZ<%W)=/MQb%!uQ0@9VL`f^K0R(i\r1'3b6G94.`1\39X2sh;oFe%c:o^XUlL1JlK=*;r*S`BpXNHc't)e"4K*kU#L^QX$ZmCN7L3[be*K#4:\_K%*qdt_Pb3#T9$kuF*-C"l:Lj8)1="D_DV>.GT_+h--k`:-.EY*^JRE#U!h;VK?tSMn[7W)UXDbQu`R\&>oh,+(<JXp\A7)`V5HY0(%T2fZVIB@BKPIDmk#^;ZXfqPfa,N97c3mH)5gZ(/UkIX@3G(@>0BX]8@QT%+#mh95)S@$2='!`M\?U<m\'b]]VoR+(^CWkRQ+ANU4%I%gk,K+&#Aom]ZJNTj6]PUi>Zffsj\qCj]oB#A?+2n^[!!`R/FQ%ss1$!HpVFeNM=.nC#2,oF`=#+cJWQsI0m8e+taPdH2eE\iUT%49.A6GCtU0]*K)&m'G7*4?/d_S<m\WK"XTfL>7dFS0SVdBs^a3NgHbH!b301DlEmcQ&4MRJrf]C1Go]_?=_=&ZL.WV<)gC1JChKG%0qLIWmdeaDc`5ATqQblHoGf2%-ToPBBjb(&-FBP;)GIBgBKO4KBY3#CA(J^tUc(HFcQfEe0#fI$C4b$`Kamn2bn_YKhC,lcrc\@E%p?&-%h-%B:)qHmu_MS3@c`'Q[GBhD^aLs*XR'C8n2FWA)WRLBsdb3X45-Wge#K%VT`a0h$Vf(Qb(EF*)fe>=h&Y]er*FA]o_,jr%%Tc'pm9\/SP;6A!(G:\^j#.#fJfZ>cQ;\]NP;WQIbB!]VlHsq&OONcU9]AkfMH_[jBDjWF&.otC?^gkdLIf#!tpT)<CH4<T*:^hhW%FN/gLUW+jRNnVohTdN6(Siqt0gWj?EU'=]6)i`fQ$k:Qu4K=oa&1t5`'ie!83UmmY8>L"aD<<q<c_6'e<CQlRFsXPF---!9gAZ76%HH>N;_],WG@alnp-_c6[I*_Z1i[NN[]A:#sAh26/9AMq#Y_Z-9e2+cqo3RVtLI\`c<J;j'Rjh8qBuT5KYph)5,hn-%n8'ClC2LdN%L4WGRaubg9GurOHomU$2$bTj_%HRgsbR:$f/^'opdBli8pYDq-KI;C:@QXEAfjIg.T8E0">k'r=@-f*;d+1Xol8FIS01A8?ls.\\%!uj&@.-(B0Tm(3'PWaBH-p_lR"<68K's'8t'\T)5gn176[2-F"eKntHD;0\"N?J^#Qmd6[-Kk\9)tQ'iH.Z:IS"Sl]DQo&1\fm'P%?eo>UYX?oq54o@5;E$fc8hOr)_@/!Y[<O-;F'BCepj@/Bdm"l`m@6XiOU4u/TP#ET=;$D*PZ(:iEdZUugfMKr+an9-2`3H`Z]eZ(%dQsb;mG=r?/k%"k@;@ZYbi!Y"Jf1U;7"f,q;9i>Gd-:n*PPaYq]X19#d"oX]i:sPZ?G]q#%?M<#!JYL]r@j#KJK%]ue&Z$**0!91%K>ArVL,LdbMRRH#j(YZb%AfPp&=..NAj]ZLMj4?I.Je'b]MM9sJ1b=>`[1E2)o#slO9lm[l#FW'-*13cE%=59ifjh+Hqk:8D7diT%WE)jK*m)mHcIdQ/epa%rb@$$&/)S\Xk7*q3hfRkJhj8,IOr6&*'=<n2#O1X#j&t\Q'Pq.p2(R24eR+.leYSpH6j\XKkU;AC_(dX>%Rt?#!d-LHir:KE_S^t>c_?d6r5[Ans@:MNHGK*Ad%SROVWuPSVQKJ:6*=*b7U(*20?(.l?QLQLqF'-@$d'GVc:6q;i9SnH=/[TX"%ZF3L<NM+O,k]sIMW_^Cc*k#Z%O`t,iCr`VOABj)Q#%+6qV_0i!O)!:trJ'e<W\VR'oP&^9'R+7Yh%![i3+4#sntoX;d:1HcM7"8/%VCE59E1`6r2\?WEHmqs1jS2<D-=gG@j;urSSbJuHr^I5+\R2Jl9a"+ENp>c%9L0>I<*.e+b<r'h8Fqbe#(3_uj/d.(fMOQR:cp%u%\cQ:q`<&uHkRCIX6R3pKXJ"[&T4o5l)sL<[HVs,Q,r*X3N/HA=@.S\SW&lSZ-lNdYC9$63DG_+CNQWLZ6qnp_p)l9^'O^+_C5sYW%s0T.lWofq7$?ACDpNbpf$\Di(B@dH+'$Y.AfYq&Ch"FRdaVI;[nI:Y5`Fj&[(6CT<P'aYpZG<lF%L=i-&2W1sj/lk\B./Q9Y(:@a%L+k4Q_*f?RBKjg-R$,-q,ZHM-Bd):IP.-sU#A6l/rP]TuC:7_"K_VF=#/La*,MBXY<D&S-2_pYTn;3RUVPCMN@]iF?)8V/LePcGq%R)FW/.8!U8*)%M,W*fcqopu#6c$c`=lr0F*%nc:+J.48o+lg*.]NW!j;R0$[kp9_UfZ6gCLf3IUC"ses54*&DD+sbtoJBqfo.)"f%O?%h0Nke`7TB6Ue'jYrYbl1tl3E>+TprrgX&@:iif;;UpFqp."E'EKGR(=DESLF-!.F7f8;qn.c_-f.=(-jl$n<%APN3)g=a$`8J%&"Z#(\4Q"g$"Q!D)KN6V#AYWpH'R6LFAf*_7;tP\?WK`;&Yk6_BN*'6r56dY)Q#F-Wl@C2(q5NeOVU/R-FMtD9lm7A&NiKI"-NoQ%kPg^j]c`8J#cJjuiTSmdV:>+'H*S0.g(9)!ILU9Wn/+*l9P*eaCVjdd2^T*biF%jL7KL)t'4!4s60gl9)G+*a&%i1JoPB[?.5ILL%JN#6O_;3`uM0$khIHTBQZd;p2aep79,OrAYh$L'rDCYG+5r"d*0^t!/R1*m6;!#W]\s+o@E`BYQe:W:Gd%`(rkqo;dZb*A[RXI3T%POegIXm-c:5">opk$/LpER!.t3sp3A^;[WGpE+rB?[%%#4Q[I,5LD`obQKa6C9X'7,mJl)l:0`RduiX@5gp$H"\073UMNo\_[6%Q%PZ>B>c!Agk#]cYPXUjQ,j\Z(N@;&]TK745'.LkJA@=!72@3ud5^'(SWd<,G&m*I[faV<L43-'_HCRRe)9quHSrBuQ4bik\?7r#0)%ptO'+SOulRONH"2_RPb;QiNj'UUf(@DM0+naNfF]K`(5j+p)_.Vi#'IW#;84gGE,>="")DaWY%pK5lu$e/1><8YPOFm>iZJa!_UM%RcZV\h'AX?%[J3gWhRHD8eNfD`a^#6Bom-;GUt_?%Wc87lO_#H:jZ9=C!gpm[&NR-hK35MAhkZ"&kIOd%Kb/=SQ1q&cn$#jGif$'%5;1$3M[p%-DC1n4/=BfHV=hX8&&RD[L=hJ3CT`V3H,P0DD7b9m#[?Bgfu(\drcFkDoJ`\F]:u/ti<J'V=L@6U)Gfi4\/GD_0O/g<%SXdL&D+->qgp-B()>pW%,k%D:T3Ua1Ph]`O#dXBn:-<jXWat>sg.4EII:9'Tqbf`kU7ba#L",T<7aM'P'#K[e^?jjpB!9RH]&p9F%`hU((.go%c8LnBdN=>c_k5KX,0P/Ao?0Ga,C'SXi#[YOInVG\)S9NJ*LM0Y@RWG3#^j5d#9ogZ47Q%"U/j7]n+XE!+b&!/oBWZSX%j3fua.?FW266J,Zn9slipV=Vmp3tKX)a^?,5Bcf+!0Yu!363(?N5s`63s4(n"g*'Jc/>h*L,]AILNZ=R]-t[gY^Gq@KdM9hQ(mV/%]tBmfm#TM=7r^`!R_gUj4[&H6)YA&bo[=N5M*>WP,;m@c05Y,?n\"-f]A6VBS3!Y9>`5UBQ3`I76FfrNO.nGpVEY?c&ipCY,-YK9%3oEFbEqF32Q:ef`C&1RJ3S8XeU0Dcep7jZl3q'#$FfCA"R(%bs2<BP%2m`f3#4#eecQX3fdLu!9(nM#RljdhaQ]\5m(JiAWnm%%+%XB)[FKJ,YioI/NrBd0KO<lYJk7`;^8Cj&WS1%r99j9_8,!nj+)lYXuGV8DX/(!"g._U%O#5qrIa;ZKMYebV"oI/B"'X=-[]XGD62%5MPAE#7,DZrInj5<RC%MGM.U2Tnqf1^LsPL@*G(qYj'[;:(i4k1inWETqTR"!Clk0KhVa/TGDOb)"D66Ii='RB9VbJ=>ZP8'PcMu%B&RB3=/4/c6e$1Q2A&R1(mSP]FE^Y,=p3Kr#cqU!60/?ga:)Iug^UB#k8!S^2$h?d&U(T$Th&Dp.LC^;7=Po<AHH-UKTtPk'QU.>%PY<?OfP-4Gghdr")>.Ln;45ccQ'<2hnO@aL2OYP\3`6OWppAjn)%7ODJ[38IPt\%tlt`6rN$2itXMP*\V:a5.Q\\$N$60.NKo_^L%ri2[ZGt'm)60-_EdX_h`nf3DRBg*bY0[6Ja31b[%bbc(nO4U8^m.99sDakGYnJ4%:dW:j6^(U%.DdjE$d$hqsP8m>+nZSgu1Vs/`%<&)7o;PM]BXo'G^MK43QN/>o,goJu+7:J2Sfr26>1+#q[#:WQ,46&iH>_PrsgmON.CAIKbqUi'r(GgE/B,plpOh;G@4'/C[#&Wqh%L<I\P/[I3!FgkR'I]BQe[Y,0BP,\m/6=F_k74CGdI+,&<-r>geMlCR6fMW\'`?qjP:4krY;u(h1/?L\'`AVA,d#T?^6<^m-NJc_-%T7)#VPA:X=8Xu$[&&m&fCdo'b1M4JAVknR7hT'N";H:<K(/1#gDd.02JMtmY7U!"S+GaB_ij]8FWbu-jT.)`MGHkr#@M26JWcXNh%DoOFj9.2,p<8@5g:YI)fcn45Z36=qXkQ;D#`mpTOG6<Xd8oV<[\-a(1G/LIl">!c!3Y&J/bWt61P%K8Me/0AJYY&kn@6Wc<km#1q%csbP;%ZB-P9N"P'*4$Nq2VhY"7M,J+$cS,AUfl1"J8l-<D?kc?*#+VdE.0/=9!tLU'6,=B6m9ct/]0o?j#Uf$dQ0;s3]d_6)Rr4"%&sV!;d7ksg1^S.VH?f>Y:b`.HCs\/u?3k3i`VE&l%K`29Ya0:&(Hff%ZcI;#iNEa-48SumEJ`!Cp&5SBdS4]61hi_3f1&V8(r'\F%.o(E60F.8f'1s";ae:"V-_ZB9/'VZe"E;Ag;p;MhM9sLWe'&sAqVH#qaK6GD2"gF&'sHjnWXH3rAABlkPZ<8j@:CXDS7WrIP%,Ll%.i<dYJAmRVebH,[lt4W0/gh)'+O4KGiF?&QF\RGON(G)<3Y5f\g^'h`m[GV*q%M3fV]=69i;<!m"oI8OTHW(,GOib/o0tN0#rf=`%F0Sn*VO:o*44lYoKdMb]R!FoOG=1(sNbTOfo#b65[L(#*h=Tu)#gEOEH5900T3%8/9inBSG/)-qhM=cnSA;BUUF1]ZCkfM9pGJT+%+u?/kN.61\q61o,KgN?bdRO22`<D;!lI74-0J0rg\tX7\I]/db'Y[0i6kV7Oa[D.fg(g*/H"L2.bb9X6/nl(/C61Ot@4Ba.ddHH_%4I%X;W:Fm4b+"\D3N?8(8C:s;l%7hlb,75GF%eso'\16`c%]KG2J[Qs763!JJe*O0Q$osC6A/f3oRHAU=o"p_:f=qnOVOFbE^CH(%2t(H?:/D6>DkSe.Wb-(%\+MAP.4n7U"S'a$F:#=B3>nV%@skVY:nTQW=sTmGiuLR^jS1_tnSg+JFaY[8Z`MH^cDicPBd'Xa$5`+R%?Fe7[n6DN"[rfIX#ihjNiG4qk31mQL-\09VM@2;B(EdUK6Nr;f8^n:RSFqW;A^pjV73Nb5fC18h$l-`U6=co$jY%P;&.jO;Y(gN$%]je5]'LfJkI@brrKJ$g$"RV<nU]LrU%P:6AUXLJ]!*`pSW5N56`YQ@Q>[?ISo6K)H\oWuF<-']'#tA@M?t$^7ip!8WJ2p"k!\Di>%i2kXShpkF&;:j.!!"iSClQ@buYRns=Mrj,0;0i.WP4U&cP&s?.l3h:TZ$T@+("f7cQ;BbJG%F@*`aL9o2&#NU]]:H^_bsn<#X@s_%0'U\Lpla(p:2;Ra!m;?U#BE+-*/sZl7YVkq8^s-_loQLhQ9BP&Trq\H?@U]8E^4Acm7pmrjH3lupjrZCSs1:cmdFO6XNm$B@)T(P%jNYe@GTs@_32[4*_s0@XA5S.)PiBh?o7kb/WBI,URNZFL%niI)k5cu9Ng\ao?gM&BB#Ah'6=d6S]?dcl)44oXc#Z0BYgau.+1o:?%CLhH10g#JC41S24?<H'-EcR9pSR2_2']JUFWWjm)FCSE*%O%6M@;ET'[g3%mkJI+Y]XLNi9kn`t=17+J-$J<PX`;/!r:I9dp!7am%qiK[GjLI4mF"a9:T<_I@>Vk?a&fTf2AuW^!p$\M"D>qHOLAp=Y?fV,G)>>M@G0r%3`,S^aSe_W+C_A.m,reu.i47QPfh[o@kpQ_F%S$eN&G)$OMKem(n^u*$g][ltM^]2W.=o\;IroJY+YCH/9rp!.-ZG>3JAGtDM/Y+GL%]+#+WJr<57-tAMFoB6q(\,?6_CBL;RQC;M%_[0gIf5+V'CR<r#mNA6'Ls$Z'W<^<GPLVK.3hmsm;q*C=s+<#JM(36/HoH1acD8Z)rgu&07)rN=08R9U]1WR,*-h`O\S+JF15H-\%RNrL(&Cjh&BAN6n,^rbe<%\#XWZ@;VGZMQr,.OsS\Ph4[edS9kfZsb+T;m#S<t^iD3a8rJGVGW=h&T*4#b=9;a<4uGqF"'GpHhMJ%ks8Ds@M&`..<p>%d.nI0Mr2d`3DQA\W$G23B+#1D&as:#[D'.'4P\c^6.-D-E%tO80,`S%*ZFc)l[C\GA0uc)ZQdO^fU.?O\AP0M%$bOl%.5E0@[1V#:T<F90d4WGoBT?U2g.C89>tfuG&sXuMPug_H+Ll\?]m8_ZH,!VskZj8:4B(ctgr,Ao:qB;KNY^$ooVc35.[>M=%Y4Tq>c1;`[oFE\-8Z./ccmcsq1"2aH:BYqb[gO+f$`^mA6GALRg:gX/^L(>g!+&P,^/><PIt\j9Psb<E.nmS$I(XsA?'+c_]Y;_I%^E5DrgTr\#@KQ?Lp+//R54_XPVY.f0IDKaub('A`p1S"fZ>65r_V:V!E.n3aZ`hhaanQ[drbGF3=6ffc*oK@Q?r7iP'I.jg/C8+2%TWqA*BX6JBK$qks2mCBU\:F,oG-_P8]ZTAagn\I\FVJngqT%jUkm5SS-`%sIHXHDu<m@=,RHT9K/T[9gBp^YGkMI;=;T<SYWa.bG%DcDp85p)N*V_)(PJ%T&8>-4f+QeGQBK%?s-FXb;;l?04t?I-c$3mVhfLB&;2SumY+?Goq(\<#Ao0)$h[[u/\7Tu?fc6`[acnICC?%i.Moo56:ajPQ;Tj^dV^/^im3(FQ1W&_j3uE(JI0ZBl=V`L)0d>niLS==>W/?Ge6lM>h)*C1deI279B00.uhtWan/U#oL]d><DHiM%<M(".Q.-`$.]pB^aqbrBY%*n'1LKct5Ah:3]W6#?,4DT%854Q<aYOj"epEO@h(!L5f_.`BHdU$N(=dk2hHn13Y9gh_U$kDXHkd&s%A]8#Aa04RG01F)dU%;7oIF1_qA^t/,f09Dc%:sb/BNUG)4ra6T9Th*kr##h"XQJF[ZNnc./5#65@uA#:Xe;n#0YC5R:c><(n"DFp%MA=ub_,RnI7_BF1)dW`[]+aC'GrcW+%!!sBOX/>=_(mJdn44j*UtRQ[aZ+fU(20T_B;:D?X3OAXr54X%+:&b)B@DG8)_;?>HE='T%\iqH@#;P;_mMsku)LdP45)<GB/OSS2.!nc<I**0$Aj\t<rBWWDU@0D)>rV:8Nac^X&6@fu_ueU6Cf!KlCL)<dejC8liq8("pf%ND%]h@/[+)_,D&-(5]pE&.R0Hqn+=1GtndRL5E/6?r2`BD&u\Z'LDHqf=S[I?P=r<8kefTsu+&>["LJ#LH+A,I4!O.5X7j)b\;"e5.%%NJ0JG^qQjmG1^g`3<Fnf4='HnNb%ROj*Xs.lGl^_*AljaF4-8+D'[X\PlWYsV9'ZdC9E@R!JU'\*"_TW]3JgB/(@HOjMb!<nZWl'%1]$nqPR9ZD_^&SDr(e(jEA^q`Y_>2>'=7\u7F@*rm9u.K2b"kOUT-qTCnp510-m5"2R3-)$YPZR`P_CuZGfpk^DK2m.rU.#LGBTf%5aEA)dIMRgV'bo"G82qR)f%'BEUN_CocCleY/%tmGKSn>4PA)JL'%5GoWZuVG1bYI[PS0Z453@?'^Yd?]dm=bY3u[b]C!f!roVeH%r;7@<rq=+aB-]9G:?MLN]#gN4&]ENS%"49s8@8:3BZL9HA5dSoR@VHA"BdZp2ERGJY`N$ZPL29FJVU/JfSH>nk&M8#-7j2o>Br8E%C_#6A!3#tC+;#B5C@Nai`D9g4,")T",A\:NO/iN8K&JI`PkuV@b3`Yb3iX*Y6?Z>o*SODCjQ0fBk+[G#*U-'s>,k@ODj,G,LU`e/%;TbIX3It9UbW'P'5X$`57Xt'P2N4%.&JQIW1e]QSpa@Bd%#Z0&KP6FA]%($5OAhg+CAR\K$j](\3sL(%Ck;&aA*Vq2-';R`H\\FL%;9DcY?5TKBkh_$W3fY+%[?eD"f!l>*(W1)T4E]S6,3Ku(Y7,C=QJr,`hreF8#9cL&1<=$o^e/JIJc@/!iTk;fL6`N=jR9LXk,5/8%pc'Oqp$Tb%4!kDfXG=X,Vd#f#:2ph98X^&pO,47eojS;"W4b\lb)0K1Sio2o\REWChV0_(qt,'JL-r&jERYE84lQSg6:n5Ao\oK^%-jEOsiTH_:)kg"2#J\nh3^;d].2jXVRe))p!W]T\\iO73\:kd#a$E6.^_KL@!5XF:ArpANCrPX]UeN^RWk/MWl[tHG/AbEnq#*0e%]$hp+n\"AM#h-n]]_+prnnJH;H[dpg]bV.j&\#ngeAr)-3KHT2g"$%HAJs<S[DtR-E2),0UYpF=&a>"^$8[X.*M#80<DrT45XQBY%$e=.!1#P91cd[j(76CO_:mh04YQ6-OrCp:+Y*I([<?8Q\QD3*"Cr;o[<0!*bq4==FPo32iH9kj6^#edIcFlGq/>DTj7I>FfM4(ci%YBKX_H.$3\M$&gk74p>o,t$LDd^"-sV_7MJUjL!SLhu^eKYaLkR\lB34hXCh!3qp-$,B5UEds.!Zc9jrVs%q_@JZU6P*S-ERj,Y7%W^0=Nhd;uC6I]j?UYMC`]oC#W16<j(PO"Xd&suq@V,O@gG"E)*c?_$m"9a3MRg?$%A)RG/*(4Ke97?i&7gTt!6)5%,PhsL`H5)Ar%]CWTgVCZ_j/]<l51=@cXjfd5YqL0Nq5PlOPn]N#(ru_7>j7e'']-"c_nXmPn]=[=jKNW0?VVA'a4%K1eQbW;K^]3imJ,&DtTE""[%rpo+0&"im`n%Sb_a'X5ifCr5CrVaKOl*0;N/\XX1J"CL[KuA0^Usr_"C%FOcIQmMC(+Z`:<B^-*((X(Y)#^??'.2J@Eu/IqgAGLM%(JfB;GLKk=4S7JTa,hW&:[#<oi9cYN&J<VTmrIJK:3dZ+&C5V<e_JJr(EkN)o.Hg"p7-==(?1j/l,b..8)a^9-*(qFb\$_aX<]b4%fDrY+e6\>@C2AAFYqQX3NH6AMau"#-Oi5sIW,j5hE_.oUXJ_E\W&LW$3)2SmqWC]kbk1FH0s_13"cOj,@[FTk^mIeoDk8('@Ncrb%`GgqE6U>*iWk56+!1LsSYmD<aVJgEPgD%fkq)3q)15Z=pT>\l8:&G!A#kcFRTtF1=Lmha?]tIm7eq;N]4oJR>6D?OTYaJ8h=_ufN%5>&a4Sc_M/PT0-Ga*SB?R2?f)[$_k.0H+q2"P?2j*bCP]O;oPhc`iu']6s4`5=9WYDdNP?X<=/dW).@b%irS73PObnk3!HqFFbEX%_&*&h>B)p#IhE6)4_h[Y/+2VV'Bgah6(b@ETPARFnkkX"r>I_1`=Q>5N*ak%5MR$=f]ObWb[9mn&h@ffM0T.U:pLgRp4>lb/NgrF%56!J7hK%+lV,t1"mc#+TkOi6%n?"[b$S^LY=tG4VR2Nls*7q.'"o<Fo%Xc)(C+)4I^HN,)1A_>C"U'9sj1b5jikAa'@4Q_A"dsX3%\F0\)7qI7Hf(nn4-fO4=UXgs/c;-+!:FepdZ9JLE\/od8V:V!t]A#A^5@6-nqu72(D`qi(#JR>RhqaT4qtUTe/-52:npeW%^>M4W%K]pS\Tq?fUoUgUGP]]-&^!OqBdnMqX)kX=4hm/o(e(7I3$T**^&&58Fh`ZSt;&"&K;:2ED8Quji&Tq%74bHK8rJ+Vd$7aqN#%l2q%8ku:ZW_-$':[ZOtXU^XZh%%]eHb6eCG>IODo_rDSNdjeojmAs+.W7Q!;>H5P7ocqtIKqLmPIASJFJqa8b#h@QOmB/GrqnMDJY,1'%]BYSj4l_r97Ej62Ms?hYpRjTpV(qhRbtB4B[^+Debb.2+KFbEI+1JEo[9i*_2X/cc*q/HP.I#=M1&2]mMmX''J3$cX8NrsnqTF3:%eNd']7;]JToBfGBala[7l&4IlbuYgl4PqOV`II[ZGl@Z\`5f*/)4MG[pM,fi"Q99'?XG./>)1#,-sS;CJ"Ah4-4qkO1Y\82q!0#N%s5iFYr9L_<q=re/5Q'p[5Q'Ze5Q9Its7#EBcen]`gJ^/q?gLDV_k1qFq=kW30%eBt+kBIn\kr3H06Go'Can^&bu@=l\]*2tnA\Y0%juX\hc&D?WgOAFfn1Qk(pqsA9Y7qhG[qh^sPt^5'E+:3U\0C?Ckri&[O:.YA$SIPX^6+,3jI3O<Q/#mr5e3U\=ijWD_NdbpQBf&C%Q/:V["QkRkk(6@jJokV$VR`A'=\*F:M/ZLqS1?ps$eCl6R-0b(jGF^aV,$gn_9*,pb8"%#/"t.1\!<-7o6*i5n4IP:_1(mtOKalr%>Z*.Y&Mh"^2I''?>k1*1$k]["&sm,B$Qm>&BuLId`CbTadOe^f19AD'$b+$jrpWMkZ-l1!'^f,"mIPKIjgN=F?&?G#dW)>#gm&0$%.TL[=B6PYJ[n>\_np17oaPKLGn#LJW-W.WIqJVW(r/-<gZdN5c`!A"B$WgcS7JlRH+E<ZD>br4>";r$+`^SPM9)]F8HW#UAB""ei%lkV1"3P(OKH]e82PlXtb_!c.k1Yq6]R_Nb%\6GBj<kc53;t#<_De8*9#lLi-r`1YePqVWa<UblmE9/I[@PM,u%U\uB^VZH7_QA(!%^Nd`GGfAch_=r2j$Mhgb\^3uUF&4JWPq/3_.m;f*M;Uu_GXY-4E#,U`L0*Gk<tpKANT)JAichk3hsg5\+bI5h,[RH!Y*t9L0&r4C%j/VXZl9J[V7D;;bY,[[eg6AXijf3?HV1j1<R!GO-q'*J^WcP<MSl[tF@.\3>m:?XmS#J!rML3#h1aZ9Eb!iB%6IGA9gIfT\H+P9g%\g$lP.DSuYYa%oKJoPV'-$s2U]:q6r+@04gd]Vf`<mnC@R-fdFD;f_DC#H/8i`8[^/)%O,Ek3%o]9VOHJdZK?bZd[3/ueTJ#l:,A%r2sc5?HE0`^;+M^_,op<Q(IK&`,K-G]\l,hi(I<H'j'D6Kq34[E*QKd?YSc-W9[K1]9NNf42PX,L5j<1enj<4m?pHh2RHK;]+">t%Tpj-3%mM=NNjYGIrH@"=ptD,1g:m>/R-h*r/GhdO-4iFh[-m<9n'Fnp^2"(`cK:$3pEL0W1UA(14L/;3X/<#o2.)#T=)H`."l1?(%jmI"f5_Q\'Je4omlXj#2?1i5>:#/fppH)*)]f6']$L:W=UUtM>g-<q*]:0I5)Pd??<KhE*QbWZ*C;Qg'jW9#VBI'H!%==DcfsXUd%FnUI./I<jtpbj4V@X:V,@q!W-ci@J7B!+R$UdSJ43>rBQ]fcu6j2`\9/Ng[;W#.aCLb31^71tjk_`XUORBAcM$FehSXs-$$d?H`*%n`/6W?G?`]!:DSR;c7KrSqK*T$nes+DMhm[L.cQ&8!f2(EE'5:IC=6?=`I[WpL'2FJhp&*lq+_.6a[bXEi`0T6m"#\<"\9P\m&?p%h7]OrgZ5ZQ#u*$I\.gX@h#S?Vk&d)_qp<gNiA-bIF]89&KR$o$a6jF1D7`ohh:o\GF3e?LFgKQa*!FdMEeD/9U#_2fR$aa2b*@PB%gcmMD2RgJ=Oc//Ao2*h$d*r*=ES/L+8!'t;ol-3E7%g$<PiRMm-rId"?/0OQ?qR'sWh5Jql5mJn]E8Aapt!>GXD45TV0O97=Nn@&%)^K"W`PQt#M(-F3j6HH?,Y%FkC;LJZ?HEE=c/$f``+d4Tit3[O<kLjI='G*OZtOT#8p^?A`9KqZE2AKdpmtY29GSL<,.rQdL(s"S%Z-JTt@P@/<J57k>FMCHuJ-(*Fqt%ialC=p%YkfBFnSd4IbohgIUT#19`TJqti]N;Abl)Vo-K'3O]Q/;ZHuOa49p4Z\ICm<KSbuRF%rm.)73mU2#/`+<U2GOaNcrl;n:;mimY2'u1Spch>Lh\B#APZ.t'cT.KY)NT\.R4K%Z]a\fJE>U?#g-(#64:n6'+O[!D8=jsnR&@H%<f?YA](lef+gLE#T.l"rA+Ji4U[i='6o>BX]U>[f2/,O^j2o;\NJ&bh@onVbU%!VI,E4eXM,78YY=89(mej'X50"KP%IkiH(5dD=%MlBX:HB,OL9+A-T[lc1=;7>KU2Wo$OW(**4\jIK]S8.8!1s(QR6SX;7Ft%SM)eUB8\7V<@-cGI0[dWaXXPDU*CC7V'XM@-e1?@;6%-ujRJ>&b.d`(Y64W1,1K(6s+;-s_Y07%\Ph24TQ'-sjhU\?r1jLLf[-KUnq]Z,`[Pb8sQEifja9f1i!1MC+79,^$n%7P^mB@_Fs8%M*b\,,U$)s4.n#G>:]_jo.n,.&n@Eq)!kSo42S,L*,A5Gd43iBO\@QcG4s,<>l7ucBW!cs:Lu:g-fCKI`*,,t9EOFj<kWH-gFnP1%S]8h.8q>ogs-4mA,uT#c>L@.#WR$al;r5JE1=BguPq:![LAJa]V46;)&`:qT0P\g;Q5PN9]LkV?hGudr[Ra0#=(-uqgF?V$I_1cR%=J[]X"Z,!fKJhV)f=DWr2T7nU?uaW*Gh'Z5'f3QK&Q>ri8#ZEb\=&^E+cd,)UMTA+fe#8r=tA&NJV00f!KWD]@:p%8U]/_cbVi_<%`H&>Dl"W9X67rMOCn3-,dFN#<rhq.-o4!c(0DophPOWM\cTTZL]mYTpC01dW[sXdSZ/!mF,!K"o@Wi3IcLM7m/;ja"\kH:.qI[RH%V\cGIHOXGW9d51][&H/Z>?,K`]]>'U%q@1odqUkSJ:p2q&_PfZT"U4;8i#4Z$a+"!0h-9,euN\M"Y?5?*%XZtoYHeZ+)/2F;fcZ$%=&d,f7h,1NidAFEhpXUs>DeZFdu22FjFfWg"gJCm6/o\hS'ms.8]\!ua6D;egI;\BW%,ikL%!3]V(/uT?4'KO,n7\mMRZS(n;#M9%`)AjjF(-%<lWo[[Nmh7nB02K]OfYGV'l86JF;:>j(#t3-<6pe/GWq*$F':/S=3m[EDdI3![d@WS?)2lhQHdB:AaUGiBgY0ePZ6+N%/2uaBQ%=u.\;j.@e5?aX@+Bh$)erpN#A,$LLN7]InZ:AC>_g,\P0>hpgJjHl.Bs,1PD-o<XFq,1oY7uU99#P_VSIr*kToh-06bNl%59mY8`$:IeT:E,<(@D6m;DrCe94qjd0k33u0L?bsheeN8UM;?l<gc$*pI(QYINgpHG=lYFMESI1X0Edp;''p_0L`r<<kqfjgPX<m%c?!_0l+s?E+4m'-/_;R0Ip.f\2+iSOY(fsDj3<8:f.8-soB-iMkVK9;c?$[@%r0#<I?Z!bX^@AIT[-N\>6q^E$h")TJ8TDn68kk!%6;Xk=0HLG5`>=/[/Xt<4K\Moe1D42gRZBh%h$$8G^[!]mM5l[ki-n_;WS.m%cY[9H:.)Psgf,CWkgsIe4Ur!;;HL0F,EX"Mb/*6C%T&M%gr2-'KgHiH,"p0rd_?Fe3WC2>.e1isG5O>jq3e$$rI(NcheYSM265L1pJ"9rDs6":e_t>@?rmSP>2=@GtI`g3-S%!cB/KM#-%I@n!P#l-&]Iohe`X)QuH/pJ[.paT7QMA]_K*j2f)0>`QIiejc<j-<0qQ'C;Yppc2J?:dZ$$;@THP[BQQHkE_j75(j?0e_TD?N`9j%A2pd23aW%RY@Tq"ER7bfd4:X4$SBe,Y4P'0F;6uF`DK\CeQ$;U8rWF8ZLpZ=FVTD>P_`V!A66%h.nSGp\FrhUG#c>kP0%"*F>!fA%?Y+L!jka'Ac"ljo<M4D5nbdE*q-6?R=/jRDl;U+P#H_-J><ch#.M.UD(_FO1.OVc$f3%L-UK2\jUHoA`/07RHQ^e"5\ma]2P[VL@%1W;=K6:!Q!=Acr/7=`3+(-*YEXFKH0+*cDEiro0WfcuTKkb8q?XgO3E<&`9O3N@UoLZZQ7#Is>4b3h,%%jIQfgj67=7OhZI7pK^U%P=/&fQ_(J@YUQaX0G`\En@H$$fTmP!YUH6?YkZ5I!p[2Ug8)$"p]P,g`Hd,ki%m5H\<Hpc6_?/Qp+<fqeFXkh'?Nqmp<ndUl#a9^%E'u`X"2$rua^o@paOV=QD\qEVVf>J@OCbC?&dZC8a"kNqrRBe.)C'E<2_.FuS[ZC!ig&(Xp4Qj0U"Tquj1*ZT:qJl#m,/%g^IBLN%o1Y+[fVFe]n\D3Mq9%MR@Mf4ihSl#k:2KB:]1S/EXi<+S`$,2e@X_.Tm+(IAN@B,uBp8%;LQ-W^m\Elrl:?Y=M\rNtT;o_I>ZJX4%Y0c4^[,5Ca9R%p)GW_kMj/tO;9jgWP4$gQf3cdq6DJ_j.+d?p!!GZt#odV[tO-3+Xh>D(tP0!AH>;Q9aY,%t0lF;Hm*u,bgE5>R[%Amn&?D3';=?9+ekRcH)GcJ.a>[eV&nnoc7rc^"iQ@4To",(uT'5>C4S-jO*Fq$/Udaq(LB/SJ'q-O.:$jQUNVLAV[jQD8_O==5Zj%=>_&4Mr@=%:H`aJpXs43/_Kit.!gEs6pg7eQt`"]p8K+f9b"kJPP\F&<eYGXAH[5-"#/@;[WLC&0K+L+\X:@i9q,(DI$CW]"XDt(%VM#6ue.F3."a87h"2P?72XSp(e>!oB+9uKUm$XbPL@-<B50K<HO2l:sBeuk:qK7@A9@S4!Dm"5$>\O%N6gkid7$51Ti.\8]PY^)#%"X&8e(m,6Ch?Q^Ag-AXeWPQDm^<?=j6XD5O?X,S9Atj'K=oHqJbQ4b,Hk+kDfrPXNPm0=#QDXl3B(@aNdfSkbnpOW=VtOYhU:$lC%l)R,pbW;L,"AQt.n'[?V!'IG%QYVuIFK5[dUoIa2HfAA$XGiGTg."=\LY!F>OG%b&.8!#?3nNB^Z-pLt]6Z%W:H&(^l]P8pcY%k'%\$$FT2_gsA!>^4!CBbc88-ue(k-'VAF,k0[qZtaS2O*]hgY!rShn"q=^?A\M.U8$1g:S[i"f#$h(rgYC3P3>+R5HleFC'+[F-8Dh%<24/144rX;$>G@g2J$GmTI<t'`RD^R,c;_j%G-l.mJcNBR9KiQcLh3R4m`k4\!iSc53WT>ot'qmH6=(RWB_hr/i[lsR8,0g`hpDP%Ba^1-J*5lB0:kt)mq`gZg;GmTBGbqq\s]sn3S``*D;"U>9qho?+;j'@:&CDd3(J@MnIV?,GbuHhjrT(9Cb>9(8S83b`iSZa<>KI4%k8<--jp"qJ=6`s$</lKrfW6?BIkL/.A\*a%r:q\[d1GSXCiGg1'L6QW-1ire%aPn5:?9Y?#)M3YH!-3*Ua2mip&JfU-%i)!Fk!Q*%9=U3i]JBY'Bgk[>6]*$G+agi>.Lt03Qbg7M\0+uD]b0^&%3SRUQ<(0;NWe_YFb:I^B=2`MXF!?N)[5Icqiq(N``^,USc7OsXZaHW%=HI-:mhA[_KJT^Y*()*id6HuYg*SXph'8pld`[;4aBd<#C@sY+JP]t\PhYHj`a^<>iSS_Gp(Eg6N!"m.mT"$,5PZ)^Ebn4]W2SRe%HP).J"FqF9N%Q&#`OdK`Rl\Q^j^VgBqd:6;&hHL:mNO%?4V]KCL.b]^[#=<`6`^O@!'I5ZK2+GpDDDjF1tk0L;'BM>qX&6mnU&DL%.Yd$1nS`l*:l5Y^f''h]>$*ELmZ+4?-*;nnBFdR.]@I>.a#*jsfRh%[:+(t=R6AulQk]W6;>-j1&4cd7Bo*Yj;VHPDP#i[-<pls[%$2=NfC>f`C),W_WkQ[?7G$q"=H7>=+T8D'h13MPBR66\PXL*T#/i"q@D\Zbb"C%Hs?$)MP(O67T6Jir;;P<r8hc=4>'l!!u%*dP?%`\dcfS![#sJAQkPq)T!N^"m;;9YBh"kc^S8;@rtaPNat[Q,h48$n5]?r,?_.d4(P)B%=qF[sr,>'7e:8$FojP6G&Gk#RmPD:s;%f%=QLna]!<RU;Ct?^`!YQ(@6\0NINRim_pDs2@PMnR@3S59rfFjj[Z'o1a$WGoGA?[/WR7h;`=`p/h#st9*k,a[f0+<!gd;gl'3dCq%Ao]I>HYN%_XQZQDH!@<C6>@W#Q(;[*maMcm_Ge[9?C5(`3C#Y6p5@:ZC0IYXdApg*X0@`4'7?Q*8CQ)uW,%>S?oa=hOYs/4J(osb%.b0-sK_b9oX66?:=g`?+$:^S6e$V='>f+k;@^]tr<`hIM\/4@Sb/(gJ[#Hus[&2>^:`V%3!,D&X`Q(BE@#YKrY!m;5XWB*n1FX(/%EgrkS9.=snh$*O%Rs=XgO9G:d/=^G<0*/!eQMX_1?'5uL@S3=QHbULn=tlYZ%5/9`Ll"gdBLcqiRi@j9UWD-@R`7Cb8^pJlos4@>%C4bojHO0Q,<(WZQF7QJPB)X0**>XJ@U.Qg_ADD_BonE`Q@1i/;p13!'4])teedo3ADX9?_:^;Zf9.R:fEjnXNP#f;$[#Hl"(0-bB%o"ZFRcX%Z2--0#rEOL*10aQd;Sh035oohg_;tPTV6*Rd_U<lM.(6hAB_n$hfUc)W53_<l7'Z.ISVNnuZQ"3MpWerFn1jt-aRfN(S%bjhfJ[uX^2(9p<W(I%7#[AE(Y-(u8gCUtILQth._lY^oh.g'o+k,r$oI1Nk-rEcaH%`V!,$6:^E8DDE:T.Jl<*W*UWlKtoCjlc#'%`c@?U]Fr.fAMY-6bq&V7<MX[No"8R_PJtIZ.s9WC?m4;))6Ui1dI;b\nB]#QpJVqJIk'():L`,d8i7D9(.P_&F^a-\QZ;,)r%i>j%r@+7!$^KF<\+]"EEkE$@^(QQ7V5@<[l7:9I=&mm'mFYEGp+%W"03YcaT'`P(MkpV=&\Df8N7pL7LM@H`(tACJ8TuZ^B>H)3qH$\m%h?buhBiL;%C`C,248YOP*E5j*[.a@;dlT]i_`BC$P+=HVjY9A9.UXMJ,VtADY)`/"a2;q,aDFP6C)N=i3rdnd<_B)'RSVDYB<_CH%>:`dg<BB-HPnBd&S1jjY^aNT;Tk2&05:=En;E9\4L5Bpp!`iEDF.l>h+:a#UqPNf$r1)$tBV%pB`aa`[d'eks$0A*b]`)(79?bU^%7k#VmW"VBT<]YAGnT0jo)3Y=p7t--Ia9i54/H\GZ#PII4mD+Y[j;st\[8UVQg@E_&2QHfI4K2/.)nbC(-@gLZ9f#]0^5reBk^<Z/%,U722K(isRW1Ai526/HXRCb;Km;-/l@4Mh(I;TP_8((%r@N9o`A(+'dh)@YC8-DOrX@pTor>D+G(3MuYIsOp_Iuq>:fgA<R$ThIK%#.f1+Fs[p:otItF2")kWNH>ek@%6qA2([O+@;40G_Fi";7=N#ni>#r$1+G<hgp>HK:GS]sA[eU@VMfA;A*(:(]eeU&AShO@r'N.P%1\Q"T79JF+N_4cnI1(6"Y,3qBh=>+G(Nq`icqC+&_,7EY,;04AH.)7nFmqa2@%JAJp?X^9gp;sqg[/22DAC*:QHdn*['j?82bt&=%9PRR4kCFhHh(jO/57Y-]9G`86ZpY#9TF02dOP2#l2b`sKO1ZMBHgm3'mL%.5;i:LRRRT)u>cJ]IoQig[^1SbUaQ+X.p\=q#ThaQY%l6on0L?X\SgE%m[;^AFnB]/dU%WK)s82jAURYZ(LZ)+.r"Cp;oI5#XI`i.dPV6Ru3K40K,i`-'Mm<5=i\8!HVlRhC]a?.1?`FjIh%(.uL610eU75KSsE69I%QV8UtTT,%#HY-lI)rbus0:PYd;4rrI:jdl>k6W&j,icZ]cC"]PF'jG\QYSY3Dkn,);aa4_N[g4p*;ni\R%9-4S_4Fc#haT-R!Veg$sJYDGVgN"bSD]u%*k#?l`'Za0+:Ac'(HIIO:a>epo(NC=sN&l'W:#DpPe::XiKdf-a.nQ6<"'Oc?A0EEu%Q=o&5g0E[*,O=<!f[]ga__C<mEHDOEV9Fdjf\!#LlBsCRN"3\0[KT8UM^K3"UQSX0XRM%-[C[5oj'Iqj*hW[YY:8JpjH_$f=Vq[1%Y)0u<FaPGd]Z_\j&YEeV&iekFq\ZDY[o]cbii""S8P<!NR+*UK<DDn!jMnV6XhJ(sZ+^RRrq^dal[#9&qCE/XJ6>/T%]WG_G$V.b%<tU%MmPa9Gb8Rp9?Z+$JEktSEIQKtK>5ba%0KCK%ER?e":6,]RaM!o0W=buW&8GZ;J.*oT:m/!'"i'N*d_f!OK2FS6r#%M@B3u=c%N*ba-qHif51cM?[XDKN16LbV(D;+E^AoC+X[UYT&raTi8`FL\p$!#-.9[8tK/d7)^%"TsdG2Os?J'W(U/C?9/h0kbrU;rB^Rbf6q%bQ-ODs*$,lndl]78JX]&S+(R4oktl!mII0^7u5J,8[O_Yr$Y>Elj(=AE^NY9YGl(2`nOH<f".;Y1Bi8epI];S-K-c_QMpTdbrACV%40$9qEKqBX]:9K$$mgW>kgumqJaJ_Kj23iXOfuKZ0X2K?N+a[Z0EER[@mpSep$aSaT\N4IYjY:K`O22*`X(KrN26/08[kRa%Fuq\%77dTmd4D%hQBk6d[-]oX8gtOu>#]Q;+`P&M3o]NMB8bUkHJc6BSEAY\'jPDja#<&1hX>H"`[%l@!LB;sRZT<<c^&`5/EX)!fcgTW%<LHM.nWkT:hPHgU0m1ZO+JiK8Ic\Bh"c==]Dg^1.ZC&Z+ZqnFO&W5NqV*$001j/Kg44JP.;(VeMm[$soO/?M#SFW6G:t!69R-i!N%"l>HfmBu<Ijj3Hcm9-fW]QQ5h`oAmk:D^9%n[)_aq6j@-*',tICZrFah0)T9C).G6ScB-$221cICQP!sCdSpRIg#')#q!]qhF3@t%m<5I1r$lFY.X\<n5*Ko8Ri2*\>#[/e?IE5_!KmK(>C:G)3;EbenK-%Jorq1PHJafO*cB;@T`"ba9mHha*I#m2Dqt+Z]0Krf(2d/Q%p=_pQ>[1-P"c3qS@O-g29>d[\@A1$liC\6'j*9dJPTDHVHPBj*X;PE)3V->G:rV:erQ(bp%Lp$WV8l'1lONQ6<KiQf>kkqF0XDu$%<b+:@>./D5MEBe<Tp8f7c)/1>$3R;CV0`m@>Dh+->n?D;GVX;c!YLMcl\riAWhkphhjTL-I]uiFXAA-*OC=]J[6I\1d-rBmGZ4r-%'=t3(_#^mQFX%]*li:64o$+Lc5M&+r7T@Y5];B5"-@ZP0$8S_FiK:Yn,1G`1TCT5p(US'X_[[44P!5*`]rUf>T@Z_jb-,a]ihF75%DkrHQ0$':fqdPCQNU(hIJYIQ)Y%=A!_s[(2Rh%MY?RN^Gof"fA>Zeu5o-TmL>rI.lJc)>n<@>D-#Ej[-og_ns^/;=[Peb@LqVj?j%"Ibfj@1eg`53uksJSR+pi>t>3,H)+G?*G,93!p8+',^Hep#,(uf]bC-+#H8"`$dX?M\MJO3q_tCCq-BN\=Yo=OYCsrK#5B'U7W@4%XJ9%AhA)k`<a:o$k?6\e?4/:fA[Ytq^,U=h?W4*_S(288IXAF%Ymi#$n6-@0"Z7%eW^YB-A_TrJ>1=@mYdP"!5QTo=N`dZ09cM1/%BMn*fDLU>O6u\Yi<"5!O:^6J=O9HUBX@OQ)%s(2g#X1hmq?\:ePZpST`Wn/nXc!=>fgj;[MWEgA89f9p,O]\`gT7!%,V9'e=R:TO%.FH!fMS$GHqtXo?;630GQ5AGRJ!%FHbL;;tE'E2UN2":<-B?dKVF=3qmRn-sK7$@?hOD$J50Q$!KfU\Co0ZM:Sg6$TRBMHQ(a^(<%%n;*gUhXYI@h-"a%#B9='t@P?'&[P?Y$9<P,2[HaZS$$-,(+Q.N;L$.gP<<TWr.bWh3EW5me*ul<FV8eaF?#X6I%Z#`ZdpB,d`iS%`t^O-BO42!\meanL@U/4nT$Dh4\2r!9XF51GKYG31A65hMZ4Ke]ZIBmd??hW2EPhM"Q,[_G\rTT.F`75ktTTDmFanWS&bT+RldBd%rtrem73+4d1C''fX.ApC&%=DX#UC:\=Q_BpT:MLVR*_M+@/<0Wb8`q)9s5%dVb'Vk8U9I\AjLZ,mWKZWEu4O%grftkE(9ecl]Sj-%89,tR,tJ$*r^q!2&CsRl@9uO4%4mB>N_J%Y]"=F;T>Er:lZCV.UtW&'10*b6:(pY=?5-Q*`kgl#c,G:t-miY#]9h[U5U)>!Q<uDd%DMc>]9Ogf.)(%Qn>V+eaC+\9kJj`'j"f"SGiRF7AQBSsc$NQ-6MSOPJCud/f#K'g_nks7@%RM1f478$9FYcI_4\iXkCjGP;*IM!V%\rMCs.tpN@23)n<%YF/sJph:Cm1Nc1/.!`\i!!TB#bAI5/Y]4S[XU-FAIgD9.I?&bKLP*Ac9\j-c=C=GaD3U;e4<#-1+n(X+.2-J%L72U]FF#5pO0\7F2rX-lRbfS0JHhZafW3K^"[>+:VimQGfKs3bYt8CR$DL,'&fjsY9:?GXOo2NL8p`>-3=)]58YtM^X.O5u6(E4G%TD-"hag!<]3:"RZ3E@("rkQ9b]igJ&bH6'okTLhj]UOShR_=]Ncuc?mFEa_5&-eo42fT;@Bt11$1n"1Wj)oRlZ^8(7=`882$:_p;%$Cq@3gos<ZUM+_eV7/_feib@8qimRImA$-5r92EDVs\XRR6L83Ldo;F@i5WVAWU*?h9KU==UQtjb6)e"D%)(p%&]r91=uA34m^Vt%)X&VhpX(+Ir$]s5]SA._FK=k>62dIf]R/?U:X"MDRp)8.B7*K8GaC>=??BLs-\;%L8'#VTNrY*`88a\^;IUGhgIO%-5Qcr+@O1En%h8H9jOEb[/JNC\f-BeHL/^<ZJ_Lf\"6.hIDI,eLM+lkrD]A@LG,LFI!+N5)Eg@8C$i/*r0nNkjpd`Z,k(IQ=No&YHnLBXHu`&OLp%;-T(B/J*_Sj/9P;%MG9WZ?s8le#=XgTgqrX!Poq9MX8TWG`h#Ki@a)M&I^b,.3qIWlu>ku5s-Ia-Jh+s(CWOQh89lZJ*p&"l$;PM%&[CGRjLU_K5A?>$:=s5g9gT>"U;_`2]-J%RF=l'T_N1UkgHSX@JsJ7\s/Ua^A])phiPNEs?#D%[C"@PrXT2WYIe(.J.!uK3f"g8r%fl4oP9C[BsXP5e>p3enq5o+K6ehH)hm5iQbQ!KA:+9"FD+B>RnNZ@6H9g-6eAmRD=H9uWn\[,)c>SB!,HJX/T0_'\9*#j'=2mTYN%!I%D3Fi0Z&N<GR37R[r!j:0e@c$ND%n;9,N]aXuC/P=N:k;?pu<nt6(#_#1cE#/8Y*r&Em6/N[h=1gJ/[lA5S'ZL;Rh4at/j<TpW%)uDV<QW"t,Cecr5NIo[12@LfVTdmA6)nWVpL`BB$F@<hW+Xlmg)iuEO0FZj6J#nN)p5M<!/8$6C[lr0e:%SIjgt)m7Q,$Ju`cpFL%DA*a0/D]_F>B4+"e_W)@<P?QP"B=nl#dLKL!)1[+I?Rp+N[I^q+2"hb\-Hnr"&WLYZR!7VW&L+g1lIB`ZV%e%WXLao:?S3C29mU,%q5*/OMUJprdYW2"-ZLc;Skkaq,UP5Z=pXjNS%*$>E#oNk/1X86p7_T%#Ol6LHh+Z\4:Hp`U6<"JM*]SBb]fJEH"EJt'Oc'FY`S%&%j-47$A2B"T89"mq<!tKuP#<Puk0Wkr9*3*JAbdnb6_pZVe&%l9NQ".OE!4?R%u`C9>p%i>eg+65rLT3^a_A&?PdQr0A8K'1mV/#S%n,<FA*nV[r`UK0;T?8i\n$9^PeJbtd]F5mYl7/>D?q3/_c4?2_",a?,A@>k\);4L:>q40d=kf+EUHOH_6OWYeF\^W^p2Uj>mX>:s%f2s6Q5/oJVbsQ&'%E^0[<W`)Z>esTE9Wb)>Ki,E(FM'=@!l.E^.ZP<4;[!]O]#MBu)b9l'Yd#5:Idc`<S%TriFQEP/1-Sqd"G=q8%Isc52fr>34]8dg"-*jeigC+3&@),K8'XW-L:Klal;h:P<0Z5\^B\73O%t!n^.KZhRMK0.YUd9ZM1'\`WW[@aXDmaoEEiumM5m7eS%P:M[[d_kQNFchoR3>N_H[308F5[t**Y[(]J@7eHYRM\EhP+g?(4lc+!XLsNB%2V9ilc:@9bB+s#gCUtEkD4Z,%)B8?4:_Rk"4>b_%<EVYUnjubk'0U@OFEM44_?BZHEd5LKh5@W(7p%,X>nUD@"E/Q;(oq_%%6Z7\\q=N+A+hY&rK6!oQ0/8FM<XCp'k3ohU3g<B8_HA&%qfWc9@*+"%<;D:F3EKL;KUL2AjY,<g;*Pj+7Gn=U_9ILZU+OGCBQK54()Z%$ne4OiR!MhTO,=PK.1MoIYn*agKKHM1I;Lnh_X'a<%_L48Ch#s+k&dY5]Qp$tDds6hYUD6Vg[2f!9oQft!`GQQEF0P"aku+cPWM>;7m]%%A7\=%Gg9k7BO2b-fEC'D+Aof]*RXo`ThU;(c%boK&O5ll"\jh@:b9%?A^3jF`KA!&VehWT&Z5g39L0KZ0Kp1TpUI6_3EOd7D($#E/iSN[pB/4Y#RhCt+n_1j!0Z+&dg*kKqcb_?5b%+3\o^%X-;.@=?_T"eRGn.kc&opWZ_//`?<+&CCL$Am]PElkfBuRlZr8jgq8?-22*i`1R+]*9F+9H8==+KhVM#O"qIS^&apBVNd)5%2@UHBE`DNC*XH"/!TTqVj)9R=D'H52PPEnp+eso=`RH<gf_*c:Xdg45c'`)s!alkLgP=Dbhn\'U2L(pl''"?ue6ICGZPs%pjd>O(%6BI_W8qR5IUGfF.c"8%.i;k#1iWBN(\>AGk1+YX^-ikC7Tg1@.&e\&`TNUJTi<kG5RA8f8.^^g*m1clf'#`T7$uaA9D*a+M*%eI@%;mN7QKQ?Z\%0[qPjgDWZ]3\505E7)S'(PMuMs5PQ=WMLRpth-*hp']kL&bDqMO%3a<sJZ<AZ43f>`JIs33lW(/)s3'^PF3FAKO?M%N75kpJaB.p5_gWj77gBWjc'AD1=m52mdD3=[Y\I+<ho$>&>1I[?(jF`@A!q\eX7P5_-f75Ru<7AG+$05#GC_AeTqoK=n*j^L,rC+%\^t-)4#$60m+g<Gl4@YUCi`6Q:g)l%"Uqi"AW/G`Jb,fAl/92d83T]q1sW>_fk?J3MU']*_EBc/P"*7S5hXV/)B682VdVB-af>M+%G-Tu4)4Q&\T2Ga<[?E::kL#9#kB)Pf@uD430YnVo.g.e@_Mnb/'>7[d*9pfJ,(gRQli#VIVN5alr9;ZR;tJmao?5I0n`=]hqrpn+%J<Kd&"oh/$r[4]08Ua07DBX!,\O,^kK6Z?\c3hZ3pq#9F!!atPrZO%@e>F@CKHUMH^]m^%V0"m-o<,^9LXfeto3$'f%H:gk\>a.]%+3_b[<0=\?9P/R*0^IdI__RI&&Fdlm"fZqu7m:JbY"ZcH<=9I:g>^8>Pi-l&.1X%0jd>$>cnRD7St"!$(6ZRgiSu7IA1`jPY`R^s%eDoNdG<sGq"q3b%n`*PIiVpFHP%g>T.^Fffj!J&aqqW=6m*`EIQe:fbq)C)/hUXFO]i<qY",EHhEhLMNpJ&QE-MDkG5'E=Dm)k"$%nOCn2B_%nYEb3t3<kL5Hcdhj.KP_GQN73Vb-D]V0m[G=n`g+XVoY*NLl1"eT5jaTm6^ae00G+mcq;F$G)b31"Hs`eT!k5Fno.a[0%X+VXFl#]gaB'7&C,:J$*1s1h?NaiPd>ikXHke_fE&)(7gQ8q*ER.dIb9m?OXoDX!ea4c',*8#HWa)"Z0HX+OEo>?=IriPpj@NVe*%l+tX2GZYpGDt.]da2B2B=*](gO5nu4pIAha(XW>uhlSm$8sZq?I=F"0_>E)7,'.r=';66k8R7a3XnVK):P5c/VC>5RPY[e:f*]u8%W.b`8Y9/NVPS)!>jNE58=!VUU_\/j@0ND@+A%d>@*#1^3^>@<&DS`XZCsqQc_fYmGSQsPi965!LDJCAXWBlL5_K7uH.cYqc3o+dc%NB!J'eU@ltO\uN"TN2l+o8,,]G^=[00.cn;+l"GJrQ/If->O+K?f#b2#,L]QQ[n8#niPN9gr<cKJ!f.hkW3VGJ?-&4Mhiip(pI"N%Wf'(O.:PXf4kBGt;sDPfgL2;r.(Lh=FFh8L.'EP'\23@/p+X_r2P-@rpoLJ9Qm+Brg;bU?rA]N5KD1S<#FL^:,1((*Z/*9p#N@7-%mjHR*kft_n.T-bF8W%W4@JHK"$QGq&A"o8Y#/6iM)hqXHM#&YXJ^M<AI9(CS5s,a69i_+PgL1.s<f&tt"W\iIFjte$D6u\_`9@2J%R-IMoQQ-NVeQnP;itaq$^TsA)@paAhYahTBlTLg;!gB^VAq-15AI5f*pP8!Tc/CYF_?<IfKEimRq%6q^nT6S9`)<LW(T,[Q%CH)[%9@N-<J.3F1>a`kbAoTt>Qqe1cH=)_;AhFcMp>_GL'<%PtcFq(17RZH&@qI!Qa+0VGL8QoLC!![f>9L_N=NWQmL\SK27_<>Z\T'Uo%HbV=eGml98-PI]&`'ard)NHZ\]-#BlO(F3fV#A$aL5@ceTJ$j)bul-Cp`7maBmSRZo(l+"2OTrsoOc#5pf\reJTTV"l1*kt1T0T]%L$<\';U7m@>aS9qr-D`5>@n654IH].klRMcBMVjl@B,?mhUUrr_RqBt'8041&nQ?"b,QGO:L$U"aiB2NWB,05HG$`=BCt6a2o__E%qjUes,1lS(]`%2`J)1+E?iBJ`pM^&qgE6I?^Ua=0BE.dshgYH0J,JHt^]4#JgMd,^Rm2B!jdR?@ptbDRq>If&E;u7X^]!]WJ,K96%If/o_5Q9L-rYI-[;r[;=rTp`ek!.`%%h5'k4o~>%AI9_PrivateDataEnd