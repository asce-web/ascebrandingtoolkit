%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Tennessee-Holston-65years.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Katie Linnell
%%CreationDate: 12/16/11
%%BoundingBox: 0 0 156 119
%%HiResBoundingBox: 0 0 155.8926 118.6645
%%CropBox: 0 0 155.8926 118.6645
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 100 8%%BeginData: 15406 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FF7E5A2F300D0D0D302F5A5AA9A9FD15FFA9A95A5A0D0E0D0D%0D302F5A5AA9FD2BFF590D0D0D072F0D0D072F0D0D7EFD15FFA85A070D07%0D070D070D070D070D072F2F7EA8FD10FFA9530D070D070D070D070D070D%070D072F53A8A92F0D0D072F0D0D072F0D0D072F0D0D072F0D0D072F0D0D%FD10FF30070D0D0D070D0D0D070D0D5AFD14FF5A0E0D0D070E0D0D0D0E0D%0D0D0E0D0D070D0D2F53A9FD0CFF845407FD040D0E0D0D0D0E0D0D0D0E0D%0D070D53FFFD040D070D0D0D070D0D0D070D0D0D070D0D0D070D0DFD0FFF%84070D070D070D070D070D070D07A9FD12FF2F0D070D070D070D070D070D%070D070D070D070D070D0DFD0BFF2F0D070D070D070D070D070D070D070D%070D070D07A9FF0D070D070D070D070D070D070D070D070D070D070D070D%FD0FFF530D0D0E0D0D0D0E0D0D0D0E0D0D5AFD11FF540D0D0E0D0D0D0E0D%0D0D0E0D0D0D0E0D0D0D0E0D0D0785FD09FFA9FD050D0E0D0D0D0E0D0D0D%0E0D0D0D0E0D0D077EFFFF0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D%0D0D0E0DFD0EFFA80D070D070D070D070D070D070D072FA9FD0FFF5A0D07%0D070D070D070D070D070D070D070D070D070D072FFD09FF7E070D070D07%0D070D070D070D070D070D070D070D070DA8FFA90D070D070D070D070D07%0D070D070D070D070D070D070DFD0EFF7E070E0D0D0D0E0D0D0D0E0D0D0D%0E0D85FD0EFFA90D070E0D0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D070D%7EFD08FF7E07FD040D0E0D0D0D0E0D0D0D0E0D0D0D0EFD040D5AFFFFFF0D%0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D0DFD0EFF0D0D070D07%0D070D070D070D070D070D2FFD0EFF5A070D070D070D070D070D070D070D%070D070D070D070D2FFD08FF84070D070D070D070D070D070D070D070D07%0D070D070D07FFFFFFA82F070D070D070D070D070D070D070D070D070D07%0D070DFD0DFF7E0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0DA9FD0DFF0D0D%0D0E0D0D0D0E0D0D0D0E0D5A535A2F30070E0D0D07A9FD07FFAF0D0D0D0E%0D0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D077EFD04FF0D0D0D0E0D0D0D%0E0D0D0D0E0D0D070E0D0D070E0D0D07FD0DFF5A070D070D070D070D070D%070D070D070D077EFD0CFF7E0D070D070D070D070D070D2FA9FD04FFA97E%2F0D0754FD08FF2F0D070D070D070D070D070D070D070D072F0D2F070D07%2FA9FFFFFFA82F070D070D070D070D072F2F542F2F2F302F2F2F302F2FFD%0CFFA90D0E0D0D0D0E0D0D0D0E0D0D0D0EFD040D2FFD0CFF7E070E0D0D0D%0EFD040D2FFD09FF7E3084FD07FF7E0D0D0E0D0D0D0E0D0D0D0E0D0D075A%7EA9A8FFA9A97E5A7EFD05FF0D0E0D0D0D0EFD040D5AFD18FF530D070D07%0D070D070D070D070D070D070D070D7EFD0BFF530D070D070D070D070D07%7EFD0AFFA8FD07FFA82F070D070D070D070D070D070D2FA9FD0EFFA90D07%0D070D070D070D075AFD18FF300D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D0D%0E0D5AFD0BFF5A070E0D0D0D0E0D0D0D0E7EFD12FF840D0D0D0E0D0D0D0E%0D0D0D0E5AFD11FF0D0E0D0D0D0E0D0D0D0E5AFD17FF84070D070D070D07%0D072F530D070D070D070D070D0DFD0BFF2F0D070D070D070D070D072FA8%FD11FF2F0D070D070D070D070D070D53FD11FFA90D070D070D070D070D07%5AFD17FF2FFD040D0EFD040D2FFF0D0E0D0D0D0EFD040D7EFD0AFF5A0D0D%0D0E0D0D0D0E0D0D07307EFD0FFFA80D070E0D0D0D0EFD040D2FFD13FF0D%0D0D0E0D0D0D0E0D0D53FD16FFA80D070D070D070D070D077EFF54070D07%0D070D070D0730FD0AFF530D070D070D070D070D070D070D0D5A7EFD0CFF%7E070D070D070D070D070D07A9FD12FFA82F070D070D070D070D075AFD16%FF7E070E0D0D0D0E0D0D0D0EA8FF7E0E0D0D0D0E0D0D0D0E0DA9FD09FF85%0D0D0D0E0D0D0D0E0D0D0D0E0D0D070E0D5A7EFD09FF2F0D0D0E0D0D0D0E%0D0D075AFD14FF0D0D0D0E0D0D0D0E0D0D0D5A2F5A2F5A2F5A2F5A2F307E%FD0AFF2F0D070D070D070D070D2FFFFFAF070D070D070D070D070D53FD09%FFA80D070D070D070D070D070D070D070D070D070D075A7EFD05FFA92F07%0D070D070D070D070D7EFD13FFA82F070D070D070D070D070D070D070D07%0D070D070D077EFD09FF7EFD040D0E0D0D0D0E0D7EFFFFFF5A070E0D0D0D%0E0D0D0730FD0AFF2FFD040D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D070D2F%A9FD04FF0D0E0D0D0D0E0D0D0D0E0DA9FD14FF0D0E0D0D0D0E0D0D0D0E0D%0D0D0E0D0D0D0E0D0D070D7EFD09FF54070D070D070D070D070DA8FFFFFF%5A0D070D070D070D070D0784FD09FFA9070D070D070D070D070D070D070D%070D070D070D070D077EFFFFA80D070D070D070D070D072FA9FD13FFA90D%070D070D070D070D070D070D070D070D070D070D077EFD09FF0D0E0D0D0D%0E0D0D0D0E2FFD05FF0D0E0D0D0D0E0D0D0D0E53FD0AFFA90D0D0D0E0D0D%0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D0DA9FFA90D0E0D0D0D0E0D0D0D0E%2FFD15FF0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E7EFD08FF%5A0D070D070D070D070D077EFD05FF54070D070D070D070D070DA8FD0AFF%A92F0D070D070D070D070D070D070D070D070D070D070D07AFA80D070D07%0D070D070D0730FD14FFA90D070D070D070D070D070D070D070D070D070D%070D077EFD08FF300D0D070E0D2F0D300D2FA8FD05FF7E0D070E0D0D0D0E%0D0D077EFD0CFF7E3007FD040D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D53FF%0D0D0D0E0D0D0D0E0D0D0DFD15FF0D0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E%0D0D0D0E0D0D7EFD08FF7EA97EA87EA9A8AFA8FFA8FD07FF2F0D070D070D%070D070D0DFD0EFF842F2F070D070D070D070D070D070D070D070D070D7E%2F070D070D070D070D070D7EFD13FFA82F070D070D070D070D070D070D07%0D070D070D070D077EFD0FFFA9AFA9A9A9FFAFFD05FFA9A97E5A0D0E0D0D%0D0E84FD10FFA95A5A0D0D0D0E0D0D0D0E0D0D0D0E0D0D07842F0D0D0E0D%0D0D0E0D0D077EFD14FF0D0D0D0E0D0D0D0E0D0D0D300D300D300D300D30%0D0D7EFFFFFFAF7E7E535A2F300D2F070D0D0D070D070D070D072F0D302F%5A5A7E7E7E2F0D070D075AFD13FFA95A2F070D070D070D070D070D070D53%5A070D070D070D070D070D2FFD13FFA82F070D070D070D070D075AA8A9A8%A9A8A9A8A9A8A9A8FF845A5A2F5A2F5A5A7E5A847EA97EA984A97EA97E84%7E7E5A5A2F0E0D0D070D0D0D070E0D0D0DFD16FF5A070E0D0D0D0E0D0D0D%0E0D7E7EFD040D0E0D0D0D0E0D0D7EFD13FF0D0E0D0D0D0EFD040D5AFD0C%FF7EA9A8FD0FFFA8FD07FFA8A97E7E2F0D070D070D070D5AFD16FF2F070D%070D070D070D070D53A9070D070D070D070D070D070DA8FD11FFA90D070D%070D070D070D075AFD12FFAF7E7E5A5A2F302F300D300D0E0D0D0D300D30%2F5A5A7E7EA97E5A0D0E0D0D075AFD08FFA9FD0DFF7E0E0D0D0D0E0D0D0D%0E0D5AFF5A0D0D0D0E0D0D0D0E0D0D0736FD12FF0D0E0D0D0D0E0D0D0D0E%5AFD0DFFA95A5A2F2F2F302F2F2F5A537E5A7E5A5A535A53542F30070D07%0D070D072F0D0D070D070D07A9FD06FF7E0D7EFD0CFF7E070D070D070D07%0D070D53FF5A0D070D070D070D070D070D072F7EFD0FFFA90D070D070D07%0D070D075AFD0CFFA9547E7EA9A9FD13FFA9A97E7E533007FD040D0E0D0D%53FD06FF5A070D54FD0BFF2F0D0D0E0D0D0D0E0D0D077EFFFF2FFD040D0E%0D0D0D0E0D0D070D54A9FD07FFA9A8FD05FF0D0D0D0E0D0D0D0E0D0D53FD%0CFFA9FD09FFA8A87E7E5A5A2F5A2F2F2F542F54535A597E7E847E7E5330%070D070D072FA8FD04FF84070D070D075AA8FD07FF530D070D070D070D07%0D070D7EFFFF7E070D070D070D070D070D070D070D072F2F7E5A7E532F07%2FFD04FFA82F070D070D070D070D07547EA97E847EA97E847EA97E84FFFF%FFA9A97E7E535A2F300D0E0D0D072F0D0D070E0D0D070D0D0D072F0D302F%5A2F0D0D0E0D0D0785FD04FF2F0D0D0E0D0D0730537E7EA97E7E2F0E0D0D%0D0E0D0D0D0E0D0D0DFD04FF5A0D0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D%0D070E0D0D07A9FD04FF0D0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E%0D0D0DFF84532F070D070D070D070D070D075A537E7E847EA97E847E847E%5A2F2F070D070D070D070D070D2FFFFFFF5A0D070D070D070D070D070D07%0D070D070D070D070D070D070D075AFD04FFA930070D070D070D070D070D%070D070D070D070D070D070D2FFFFFFFA82F070D070D070D070D070D070D%070D070D070D070D070DFFA8FF5A0D070E0D0D0D0E0D0D075AFD0EFFA80E%0D0D0D0E0D0D0D0E0D0DA8FFFF30070E0D0D0D0E0D0D0D0E0D0D070E0D0D%0D0E0D0D0D0E0D0D070EA8FD05FFA9300D0D0D0E0D0D0D0E0D0D0D0E0D0D%0D0E0D0D0D0E0D0D7EFFFFFF0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E%0D0D0D0E0DFFFFA82F070D070D070D070D070D7EFD0FFF2F0D070D070D07%0D070D075AFF7E070D070D070D070D070D070D070D070D070D070D070D07%0D070D53FD07FFA82F070D070D070D070D070D070D070D070D070D070D07%2FA8FFA90D070D070D070D070D070D070D070D070D070D070D070DFFFF85%0D0D0D0E0D0D0D0E0D0D0DFD10FF850D0D0D0E0D0D0D0E0D0D2FFF0D0D0D%0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D2FFD0AFF5A070E%0D0D0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D0784FFFF0D0E0D0D0D0E0D0D%0D0E0D0D0D0E0D0D0D0E0D0D0D0E0DFFFF2F0D070D070D070D070D075AFD%10FFA82F070D070D070D070D070D7E5A070D070D070D070D070D070D070D%070D070D070D070D070D2FFD0CFF7E070D070D070D070D070D070D070D07%0D070D070D0DFFFF0D070D070D070D070D070D070D070D070D070D070D07%0DFFA80D070E0D0D0D0E0D0D070EA8FD11FF53FD040D0E0D0D0D0E0D5AFF%A92F0D07FD040D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D53FD0EFFA92FFD04%0D0E0D0D0D0E0D0D0D0E0D0D0D0E0D0D5AFF0D0D0D0E0D0D0D0E0D0D0D0E%0D0D0D0E0D0D0D0E0D0D0DFF5A070D070D070D070D070D2FFD12FF84070D%070D070D070D070D07A9FFFF7E54070D070D070D070D070D070D070D070D%07307EFD11FF7E54070D070D070D070D070D070D070D070D0754A80D070D%070D070D070D070D070D070D070D070D070D070DFF7E7E5A7E5A7E5A7E5A%7E5AA9FD13FF7E5A7E5A7E5A7E5A857E7EA8FD05FF7E5A2F0E0D0D070E0D%0D070E0D305AA9FD15FFAF5A5A0D0D070E0D0D070E0D0D0D5A7EA9FFFF5A%7E5A7E5A7E5A7E5A7E5A7E5A7E5A7E5A7E5A7E5A7E5AFD34FF7E845A5A53%5A537E7EA9FD1CFF7E7E535A535A598484FDFCFFFDFCFFFDFCFFFDBDFF7E%847E7E7EFFFD047EA8A9A8FD05FF7EFF7EA9FD05FFA8A8FFFD047EA8FFA8%7E5AA9FFFFFF7E53A9FFFF7E847E7E84FFFD047EA8FD05FF7E7E7EFFFFA9%7E7E7EA9FFFFFFA95A7E7EFF7E7E7E847EA97EFFFFFFA87E547EA9FFFFA9%A8FD05FF7EA9FD13FFA9300D0D2F547E302F300D7E7E30A9FD04FF307E7E%2FFD05FF2FA9840D2F300DA9FF300D300DA9FF5A0D3007A9A90D2F300D7E%840D2F30077EFD04FF5A0D2F0D5AFF2F302F2F2FFFFF5A07542F0D2F5A2F%0D2F547E2FA9FF7E0D2F5A0D2F84FF7E2FA9FD04FF547EFD15FFA907A9FF%A907A9FFFFFFA8072FA9FFFFFF077E7E292FFFFFFFA82F7EA807FD04FF7E%07FFFF7EA87E07FFFF7EA8A907FD04FF8407FD07FFA80D7EFF7E84FF2F59%FD04FF5A07A8FFFFA8A8FFA907A9FF8407FF7E0D7EFFFFFF530DA8A9072F%A8FFFFFF2F7EFD15FFA830A9FFA830A9FFFFFF7E302F5AFFFFFF307EA90D%302FFFFFFF2FA98430FD04FF7E0DA8FFFFFF7E0E7EFFFFFFA830AFFFFFFF%7E30FD08FF0D7EFD04FF2F84FD04FF0DA9FD06FFA930FFFF7E2FA9305AFD%05FF2F5AA82F0D30FFFFFF5A7EFD15FFA907A9FFA9072F2F2F7EA92FFF07%30FFFF07847E2FA80D2FFFFF2F7EA9072F2F2F7EFF530D2FA9FFFF530D2F%A8FFA9072F2F2F7EA9072F2F2F7EFD04FF84072F5AFFFF2F07302F5A5A2F%FD07FFA907FFFFA807A807AFFD05FF7E07840DA92930FFFF2F7EFD15FFA8%0DA8FFA80D5A857EAF7E30FFFF075AFF2F7E852FFFA90D53FF2FA9842F7E%857EA9FFFFA85407A9FFFFA85A07A9A8307E847EFF840D7E857EA9FD06FF%5A0D53FF2F5A7E7EA87E2FFD07FFA830AFFF7E30842FA9FD05FF7E2F7E30%FFFF0D54FF545AFD15FFA907A9FFA907A9FFFFFF7E29FFFFA9075A2F7E7E%2FAFFF7E0D532F7EA92FFD08FF532FFD04FF5A2FA907FD04FF8407FD0BFF%7E0DA82F7EFFFFFF7E0DA8FD06FFA907FFFF8407A9077EFD05FF5A2F8407%FFFFA907542F7EFD15FFA82FA8FFA82FA9FFFFFF7E30FFFFFFAF0D2F7EA9%2FFFFFFF840D07A98430FD04FF2F7EFFFF535A5A5AFFFF5A54A830FD04FF%7E2FFD07FFA92FFFFFA907AF2F84FD04FF2F5AFD04FFA9FFA830FFFF7E30%FF5A0DFD04FFA90785A830FD04FF0D2F7EFD15FFA907A9FFA90754535A7E%8407FD04FFA9077E7E0DFD04FF7E0D7EA9075A535AA87E077E530D7EA907%5A530D7EA9075A535A7EA9075A535A7EFFFFFFA80D2F7E0754FF2F2F5A53%7EFFA9072F5A7E2F7EFFA907FFFF7E07FFFF2F077E7E5A075AFF8407FD04%FFA9077EFD15FFA85AA9FFA95A2F542F7EA97EFD05FFA97EA953FD05FF7E%A9A85A2F542FA9FF7E2F307EFFFF842F2F5AFFA95A2F5A2F7EA85A2F542F%85FD04FFA8542F5AFFFF535A2F5453FFFFFF53302F5AA8FFA95AA9FFA85A%A9FFFF7E2F302F84FFFFA85AAFFD04FFA97EFD66FFA9FFFFFFA9FFFFFFA9%FD07FFA9FDFCFFFD8DFFA8FD7E7EA9A9072F072F072F072F072F072F072F%072F072F072F072F072F072F072F072F072F072F072F072F072F072F072F%072F072F072F072F072F072F072F072F072F072F072F072F072F072F072F%072F072F072F072F072F072F072F072F072F072F072F072F072F072F072F%072F072F072F072F072F072F072F072F072F072F072F7EA8A97E847EA97E%847EA97E847EA97E847EA97E847EA97E847EA97E847EA97E847EA97E847E%A97E847EA97E847EA97E847EA97E847EA97E847EA97E847EA97E847EA97E%847EA97E847EA97E847EA97E847EA97E847EA97E847EA97E847EA97E847E%A97E847EA97E847EA97E847EA97E847EA97E847EA97E847EA97E847EA97E%A9FDFCFFFDFCFFFD4EFF5A5AFD32FFA92FFD3CFF7E7EFFFFFFA953FD07FF%2F5AFD17FF7E2F5A7EFD17FF7E2FA8FD3BFF5A2FFFFFFF7E0DFD07FF5A54%FD05FFA8A9FD10FF2F30530D7EFD16FFA92FFD3CFF535AFFFFFF7E0DFD07%FF2F5AFD05FF5453FD10FF5353FF5353FD16FF7E2FFD3CFF5A2FFFA9FF5A%30FFFF7E7E7EFFFF5A5AFFA87EA9FF2F54A9FF7E7EA8FFFFA9A87E7EFD05%FF537EFF5A54FFA8A97E84FFA95AA9A8AFFFA97E7EA8FFFFFF7E7EA9A92F%A95AA9FD39FF530D072F070D29FF530D2F0D53FF2F5AFF2F075A840D077E%530D2F0D5AFF292F2F0D53FD04FF5A072F0784FF5A072F5384072F2F0D53%A9072F2F0DA8FF2F2F2F547E0D2F2F07A9FD38FF7E2FFFA8FF5A54A80D7E%FFA80D7E5A5AA90785FFFF2F7E7E0DA8FF7E0DA8307EFF5A54FD04FF5354%7E5A2FFF5A30FFFF2F7EFFFF0D7EA80DA9FF2F845A30FFFFA9A90DFFFF30%7EFD38FF5354FFFFFF7E2F7E2FFFFFFF2F5A535AFF7E075AFF545A7E2FFF%FFFF2F7E2FA9FF7E2FFD04FF5453FFFF2F5A7E2FFFA90D84FFFF5A53A92F%FFFF547E5353FFFFFF7E2FFFFF2F7EFD38FF7E53FFFFFF7E307E0DA8FFA9%307E5A53FFFFA907A9537E7E30FFFF7E0D84307EFF7E54FD04FF2F7EFFFF%07855A5AFFFF2F7EFFFF2F7E8430FFFF2F845A30FFFFFF842FFFFF545AFD%38FF5354FFFFFF7E07FF530D2F0D2FFF2F5A7E0D2F0DA85453FF2F2F2F0D%53FF077EFF7E2FFD04FF54072F0753FF5A2FFFFF7E07542F0D5AA807FFFF%2F59FF072F2F5A7E2FA8FF2F7EFD38FFA984FFFFFFA9A9FFFF7E5A7EFFFF%A9A8FF7E7EA8FF84A9FFFF7E5A7EFFFFA9A9FFA9A9FD04FFA8847EA9FFFF%A8A9FFFFFFA9538584A9A9A9FFFF7EAFFFFF5A7E84FF7EFFFFA9A8FDFCFF%FDFCFFFDFCFFFDFCFFFD44FFA9FD51FFA984FD04FFA953FD04FFA954FD1D%FFA97E5AFFFFAF84A9FFFFA9A9A8FFA9A9FD16FFA85AA8FFA9A984A9FD0C%FFA97E7E857EFD14FF7E5A7E5A7EFFFFFF5A2FFD04FF532FFD0BFFA97EFF%5A84FD0CFF7E2F7EFFFF7E0D2F59FFFFA8077EFF5A53FD15FF7E5A7EA9FF%5A0D7E2FA9FD0CFF07842F5AFD13FF7E30A9FFA8FF8485FF7E54FF8484FF%7E5AA9A8FFA8AF7EFF84847EFF2F5AFFA9FFA9A9AF7EFFA9857EA9FFFFA9%307EFFFFFF53FD06FF307EFF7EFF7EA9FFFF7E8484FFA8AF84AF7EFD04FF%A97EFFFF5A2FFFFFFF5A5AFFA984A9FFA9A9FF7EA9FFFF7EA9A930FF5A84%FF7EA9FFA9FFA984FFFF857EFFA98584FFFFA80D84FFFFFF5A7E2F5A2FA8%5A7E535A2F5A532F5A2F2F5A535A5A2FA82F7E5A2FA92F54532FA82F5A5A%53FFFF5A2F842FA9A82F2F7EFD04FF5A2F5AA953840DA92F840D7E5A2F2F%5A2F7E7EFFFF5A2F8453A9077EAFFFFF30535A7E7E0D7E2F7E537E7EA953%842F7E53AF2FFF53842F5A2F5A2F30FF5A537E7E5A7E0DFFFF7E2FFFFFFF%A8307E5A7E5A84307E5A7E0D7EFF2F840DA98430FF5A5AFF2FFF5A5AFF5A%2FA92FFF2FFF2F7EFFFF2F84FF5A2FFFFF7E0DFD04FFA90DFF535A7E5A2F%7EFF2FA8850DA9FF307EFFFFFF0DFFFF308430FFFFFFAF0DA954FFFF7E2F%FF5A5AFFFF2F5A7E7E53857E5A5A5A7E5A84305A7E53852FFFFF5A538453%FFFF5A2FFFFFA8542FA9847E2F5A2FA97E7E2FFF2F5A5A2FFF5A5384077E%5953A85A53FF07A95A54A85A535AA8FFFF2F7EFF2F5AFFFFA80DA8FFFFFF%5354FF2F53A97E2F7E5A0DA9535AFFFF7E0DA8FF7E30FF7E2F7E2FFFFFFF%5A2FFFFF7EFF2F30A82F5AFF7E0D5AA9A82F7E5A532F53A9A8A807FF2F7E%2F5AFFA8077E7EA9FFFFFF2F7EA85A7E365A845A5A7E305A857E5A7E5AFF%5A7EFF2F305A367E5A2FFF2F7E7E5AFF5A53A90D5AA9FFFFFF7E5A7E36A9%FFA95A5AFFFFFFA93053FF535A5A7E0D5A5A30845AA8FF2F7E53FFFFFF54%842FA95A7EFFFFFF5A2FA95A302FA92F5A5A365A852F5A5AA90D852F7E54%5A5AA95A7EFF305A7E2F5A7E5A537EA8FD04FF7E84A8FF7E7EFFA9A8FF7E%7EFFFF7E7EA9FFA8FFFFA97EFF84FFA8FFFFA9FFA9A8FFA8A95385530DA8%FFFFFF7E7EA9A9595A7EFD04FFA97EA9FFFF5AA9FF84A8FFA8FFA8FFFFA9%7EFD04FFAF7EA9FF2FA8FFFFA97EA97EA97EA9FFA9A8FF7EA9FFA95AAFFF%A9FFA9FFFF7EA9FFA9A8FF84FFFF847EFFA87EA8FD28FFA930A8FF2FAFFD%06FFAFAFFD1EFF7E5A53FD52FFA87E5AA9FD27FFA95AFD2AFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta
%%DocumentCustomColors: (PANTONE 286 C)
%%CMYKCustomColor: 1 0.6600 0 0.0200 (PANTONE 286 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                           
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Tennessee-Holston-vertical</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2011-12-16T12:50:11-05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2011-12-16T12:50:11-05:00</xmp:ModifyDate>
         <xmp:CreateDate>2011-12-16T12:50:11-05:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>196</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAxAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYqo3t5b2VlcXt&#xA;y3C3to3mmf8AlSNSzH6AMMYkkAdUEgCy+VdQ/Pv8ypr+5ls9V+rWkkrtb231a1b04yxKJyaJmPEb&#xA;VJzqYdmYQBYs+8vLz7UzGRo0PcFD/le35q/9Xz/p1s/+qOH+TMH837T+th/Kef8AnfYP1O/5Xt+a&#xA;v/V8/wCnWz/6o4/yZg/m/af1r/Kef+d9g/U+kvy481f4o8m6dqzsGunj9K9pQUni+CTYUA5EcgPA&#xA;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&#xA;5Gn/ADgv8r4+6X2frd/0NF5X/wCrPfffD/zVj/I0/wCcF/lfH3S+z9bv+hovK/8A1Z7774f+asf5&#xA;Gn/OC/yvj7pfZ+t3/Q0Xlf8A6s9998P/ADVj/I0/5wX+V8fdL7P1u/6Gi8r/APVnvvvh/wCasf5G&#xA;n/OC/wAr4+6X2frd/wBDReV/+rPfffD/AM1Y/wAjT/nBf5Xx90vs/W7/AKGi8r/9We+++H/mrH+R&#xA;p/zgv8r4+6X2frd/0NF5X/6s9998P/NWP8jT/nBf5Xx90vs/W7/oaLyv/wBWe+++H/mrH+Rp/wA4&#xA;L/K+Pul9n63f9DReV/8Aqz333w/81Y/yNP8AnBf5Xx90vs/W7/oaLyv/ANWe+++H/mrH+Rp/zgv8&#xA;r4+6X2frd/0NF5X/AOrPfffD/wA1Y/yNP+cF/lfH3S+z9bv+hovK/wD1Z7774f8AmrH+Rp/zgv8A&#xA;K+Pul9n63f8AQ0Xlf/qz333w/wDNWP8AI0/5wX+V8fdL7P1u/wChovK//Vnvvvh/5qx/kaf84L/K&#xA;+Pul9n63f9DReV/+rPfffD/zVj/I0/5wX+V8fdL7P1u/6Gi8r/8AVnvvvh/5qx/kaf8AOC/yvj7p&#xA;fZ+t3/Q0Xlf/AKs9998P/NWP8jT/AJwX+V8fdL7P1u/6Gi8r/wDVnvvvh/5qx/kaf84L/K+Pul9n&#xA;63f9DReV/wDqz333w/8ANWP8jT/nBf5Xx90vs/W7/oaLyv8A9We+++H/AJqx/kaf84L/ACvj7pfZ&#xA;+t3/AENF5X/6s9998P8AzVj/ACNP+cF/lfH3S+z9bv8AoaLyv/1Z7774f+asf5Gn/OC/yvj7pfZ+&#xA;tMPL/wDzkT5d1rXLDSINLvIpr+eO3jkcxcVaRgoJo1ab5Xl7KnCJkSNmzF2nCchEA7vWM1TsnYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxvyf5y/xHda9b/U/qv6E1GbTeXqep6vokj1KcU4V/l3&#xA;+eZOo0/hiJu+KNtGDP4nFtXDIhT1Dzv9T/MHS/KH1Ln+krWS7+verTh6fqfD6XA8q+n15DrjHT3i&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:E20648DAA3246811AB25FA14A0142754</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:E20648DAA3246811AB25FA14A0142754</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:E10648DAA3246811AB25FA14A0142754</stRef:instanceID>
            <stRef:documentID>xmp.did:E10648DAA3246811AB25FA14A0142754</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D27F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:15+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T16:23:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T17:10:45-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF7F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T22:53:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F07F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T23:07:07-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:35:43-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:40:59-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:26:55-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:20-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:30:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:31:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B233668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:23:46-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B333668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:27:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B433668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:46:13-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:47:57-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:51:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:52:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T13:28:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T16:23:53-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07C3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T16:45:26-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F1174072068119098B097FDA39BEF</stEvt:instanceID>
                  <stEvt:when>2008-06-02T13:25:25-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T14:58:36-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:31:27-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811834383CD3A8D2303</stEvt:instanceID>
                  <stEvt:when>2008-06-11T22:37:35-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811818C85DF6A1A75C3</stEvt:instanceID>
                  <stEvt:when>2008-06-27T14:40:42-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01801174072068118DBBC04CBC289FC5</stEvt:instanceID>
                  <stEvt:when>2010-06-21T10:22:26-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D55428163B85DF11A754B4B05C0CED4B</stEvt:instanceID>
                  <stEvt:when>2010-07-01T15:19:46-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D65428163B85DF11A754B4B05C0CED4B</stEvt:instanceID>
                  <stEvt:when>2010-07-01T15:48:02-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D85428163B85DF11A754B4B05C0CED4B</stEvt:instanceID>
                  <stEvt:when>2010-07-01T16:20:55-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5ACF1D2EE485DF11A754B4B05C0CED4B</stEvt:instanceID>
                  <stEvt:when>2010-07-02T10:47:35-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5BCF1D2EE485DF11A754B4B05C0CED4B</stEvt:instanceID>
                  <stEvt:when>2010-07-02T10:51:16-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5CCF1D2EE485DF11A754B4B05C0CED4B</stEvt:instanceID>
                  <stEvt:when>2010-07-02T11:15:53-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5DCF1D2EE485DF11A754B4B05C0CED4B</stEvt:instanceID>
                  <stEvt:when>2010-07-02T11:17:13-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7432F353EF85DF11A754B4B05C0CED4B</stEvt:instanceID>
                  <stEvt:when>2010-07-02T11:40:34-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:27F3E9D92889DF11A754B4B05C0CED4B</stEvt:instanceID>
                  <stEvt:when>2010-07-06T14:10:55-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:28F3E9D92889DF11A754B4B05C0CED4B</stEvt:instanceID>
                  <stEvt:when>2010-07-06T14:16:50-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:29F3E9D92889DF11A754B4B05C0CED4B</stEvt:instanceID>
                  <stEvt:when>2010-07-06T14:17:22-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5C640B25E31CE0119AC392377D9B9CAC</stEvt:instanceID>
                  <stEvt:when>2011-01-10T12:58:49-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF7D0EAED224E011A07FF91C4EB0781B</stEvt:instanceID>
                  <stEvt:when>2011-01-20T15:20:22-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D07D0EAED224E011A07FF91C4EB0781B</stEvt:instanceID>
                  <stEvt:when>2011-01-20T15:20:22-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E10648DAA3246811AB25FA14A0142754</stEvt:instanceID>
                  <stEvt:when>2011-12-16T12:50-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E20648DAA3246811AB25FA14A0142754</stEvt:instanceID>
                  <stEvt:when>2011-12-16T12:50:11-05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3.245382</stDim:w>
            <stDim:h>3.013889</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>PANTONE 286 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 286 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>66.000404</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>2.000430</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -118.665 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 118.665 li
155.893 118.665 li
155.893 0 li
cp
clp
[1 0 0 1 0 0 ]ct
3.25488 113.261 mo
3.26563 111.875 4.1748 110.558 5.28516 109.759 cv
6.37451 108.972 7.94971 108.478 9.2085 108.478 cv
9.41992 108.478 10.0967 108.501 10.0967 108.785 cv
10.0967 108.867 10.0649 108.984 10.0332 109.101 cv
9.93799 109.466 9.83203 109.841 9.73682 110.148 cv
9.69482 110.324 9.63135 110.546 9.4834 110.546 cv
9.26123 110.546 9.26123 110.324 9.26123 110.183 cv
9.26123 110.041 9.32471 109.501 9.32471 109.326 cv
9.32471 108.996 9.2085 108.878 8.89111 108.878 cv
7.90771 108.878 6.81836 109.373 5.96191 110.183 cv
5.11621 111.005 4.51318 112.121 4.51318 113.367 cv
4.51318 114.505 5.12646 115.728 6.35303 115.728 cv
7.20947 115.728 7.72803 115.187 8.11914 114.435 cv
8.27783 114.119 8.39404 113.789 8.58447 113.789 cv
8.64795 113.789 8.75342 113.826 8.75342 113.943 cv
8.75342 114.013 8.72168 114.177 8.67969 114.33 cv
8.55273 114.707 8.41504 115.47 8.29883 115.646 cv
8.03467 115.986 6.78662 116.128 6.20508 116.128 cv
5.47559 116.128 4.77783 115.951 4.20654 115.47 cv
3.59326 114.941 3.25488 114.166 3.25488 113.273 cv
3.25488 113.261 li
cp
false sop
/0 
<<
/Name (PANTONE 286 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 1 .660004 0 .0200043 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
12.54 110.9 mo
11.5776 110.9 10.8164 112.273 10.5518 113.46 cv
11.3237 113.355 12.3599 113.109 12.7832 112.486 cv
12.9731 112.191 13.1001 111.828 13.1001 111.498 cv
13.1001 111.123 12.8887 110.9 12.5503 110.9 cv
12.54 110.9 li
cp
13.9883 111.734 mo
13.9883 113.355 11.7466 113.589 10.6895 113.742 cv
10.626 113.765 10.5625 113.765 10.499 113.789 cv
10.478 113.931 10.478 114.072 10.478 114.212 cv
10.478 114.941 10.8267 115.447 11.4824 115.447 cv
12.0747 115.447 12.7197 114.941 13.0474 114.447 cv
13.1216 114.353 13.1743 114.294 13.2378 114.294 cv
13.3115 114.294 13.3433 114.341 13.3433 114.412 cv
13.3433 114.517 13.1426 114.789 13.0684 114.906 cv
12.5718 115.541 11.8101 116.128 10.9536 116.128 cv
9.93848 116.128 9.37793 115.257 9.37793 114.271 cv
9.37793 112.498 10.9536 110.593 12.6665 110.593 cv
13.1851 110.593 13.9883 110.9 13.9883 111.722 cv
13.9883 111.734 li
cp
f
14.02 115.587 mo
14.02 115.222 14.1362 114.777 14.2529 114.376 cv
14.6968 112.744 15.1514 111.111 15.6064 109.49 cv
15.6382 109.349 15.7119 109.113 15.7119 108.996 cv
15.7119 108.738 15.4897 108.714 15.2783 108.714 cv
15.0986 108.714 14.9824 108.703 14.9824 108.562 cv
14.9824 108.396 15.1411 108.373 15.3633 108.361 cv
15.7544 108.349 16.3252 108.185 16.6533 107.986 cv
16.7695 107.904 16.854 107.857 16.9067 107.857 cv
16.9702 107.857 17.0234 107.892 17.0234 107.986 cv
17.0234 108.044 16.981 108.197 16.9492 108.302 cv
16.3784 110.359 15.8071 112.427 15.2363 114.494 cv
15.1729 114.695 15.1094 114.941 15.1094 115.058 cv
15.1094 115.164 15.1514 115.234 15.2466 115.234 cv
15.4795 115.234 15.9766 114.494 16.1138 114.236 cv
16.1665 114.154 16.2197 114.048 16.3042 114.048 cv
16.3677 114.048 16.3887 114.107 16.3887 114.166 cv
16.3887 114.376 16.0718 114.859 15.9131 115.058 cv
15.6274 115.447 14.9824 116.128 14.4326 116.128 cv
14.0835 116.128 14.02 115.869 14.02 115.599 cv
14.02 115.587 li
cp
f
19.8257 110.9 mo
18.8633 110.9 18.1021 112.273 17.8374 113.46 cv
18.6094 113.355 19.6455 113.109 20.0688 112.486 cv
20.2588 112.191 20.3857 111.828 20.3857 111.498 cv
20.3857 111.123 20.1743 110.9 19.8359 110.9 cv
19.8257 110.9 li
cp
21.2739 111.734 mo
21.2739 113.355 19.0322 113.589 17.9751 113.742 cv
17.9116 113.765 17.8481 113.765 17.7847 113.789 cv
17.7637 113.931 17.7637 114.072 17.7637 114.212 cv
17.7637 114.941 18.1123 115.447 18.7681 115.447 cv
19.3604 115.447 20.0054 114.941 20.333 114.447 cv
20.4072 114.353 20.46 114.294 20.5234 114.294 cv
20.5972 114.294 20.6289 114.341 20.6289 114.412 cv
20.6289 114.517 20.4282 114.789 20.354 114.906 cv
19.8574 115.541 19.0957 116.128 18.2393 116.128 cv
17.2241 116.128 16.6636 115.257 16.6636 114.271 cv
16.6636 112.498 18.2393 110.593 19.9521 110.593 cv
20.4707 110.593 21.2739 110.9 21.2739 111.722 cv
21.2739 111.734 li
cp
f
25.5884 112.203 mo
25.5884 111.816 25.4507 111.333 25.0596 111.333 cv
24.0762 111.333 22.3315 114.107 22.3315 115.14 cv
22.3315 115.611 22.6382 115.798 23.0083 115.798 cv
24.2456 115.787 25.5884 113.542 25.5884 112.214 cv
25.5884 112.203 li
cp
26.6563 112.167 mo
26.6563 114.177 24.8799 116.128 22.9976 116.128 cv
22.2681 116.128 21.4961 115.751 21.4961 114.695 cv
21.4961 114.154 21.6758 113.601 21.792 113.191 cv
22.1304 111.968 22.4688 110.757 22.8071 109.548 cv
22.8813 109.314 22.9556 109.042 22.9556 108.902 cv
22.9556 108.679 22.8389 108.632 22.6807 108.632 cv
22.543 108.621 22.2681 108.632 22.2681 108.466 cv
22.2681 108.267 22.5005 108.244 22.7227 108.232 cv
23.2197 108.208 23.5581 108.138 24.0024 107.892 cv
24.0552 107.857 24.1079 107.833 24.1606 107.833 cv
24.2241 107.833 24.2876 107.869 24.2876 107.974 cv
24.2456 108.126 24.2031 108.314 24.1504 108.478 cv
22.8496 113.037 li
22.8706 113.048 li
23.3677 112.144 24.5308 110.593 25.5459 110.593 cv
26.3179 110.593 26.6563 111.416 26.6563 112.156 cv
26.6563 112.167 li
cp
f
31.5 111.275 mo
31.5 111.664 31.2671 112.097 30.897 112.097 cv
30.7808 112.097 30.7065 112.074 30.6538 112.027 cv
30.5376 111.91 30.4951 111.746 30.4531 111.605 cv
30.4316 111.544 30.3999 111.509 30.3364 111.509 cv
30.083 111.509 29.5225 112.427 29.353 112.755 cv
28.9937 113.402 28.3911 114.695 28.1797 115.458 cv
28.0527 115.892 28.063 115.986 27.5659 115.986 cv
27.3442 115.986 27.1011 115.998 27.1011 115.787 cv
27.1011 115.705 27.1646 115.482 27.1855 115.4 cv
27.4814 114.341 27.7778 113.285 28.063 112.226 cv
28.1162 112.039 28.1899 111.781 28.1899 111.593 cv
28.1899 111.486 28.1582 111.357 28.0527 111.357 cv
27.894 111.357 27.6294 111.664 27.4712 111.886 cv
27.3545 112.05 27.3125 112.132 27.2173 112.261 cv
27.1748 112.322 27.1221 112.427 27.0586 112.427 cv
26.9951 112.427 26.9526 112.369 26.9526 112.308 cv
26.9526 112.097 27.3545 111.544 27.5239 111.357 cv
27.7778 111.052 28.2852 110.593 28.6763 110.593 cv
28.9829 110.593 29.1631 110.958 29.1631 111.322 cv
29.1631 111.804 28.835 112.791 28.6235 113.554 cv
28.6445 113.554 li
29.0464 112.744 29.998 110.593 30.9077 110.593 cv
31.2671 110.593 31.5 110.853 31.5 111.263 cv
31.5 111.275 li
cp
f
35.2744 111.486 mo
35.2744 111.134 35.0103 110.958 34.6826 110.958 cv
34.0059 110.958 33.3184 111.699 32.8848 112.308 cv
32.4937 112.849 31.9858 113.919 31.9858 114.589 cv
31.9858 114.871 32.1128 115.21 32.4092 115.21 cv
32.9692 115.21 33.8257 114.107 34.1958 113.589 cv
34.5132 113.167 35.2744 111.98 35.2744 111.498 cv
35.2744 111.486 li
cp
30.8438 114.871 mo
30.8438 113.908 31.436 112.744 32.0601 112.027 cv
32.7158 111.263 33.6567 110.617 34.5874 110.617 cv
35.2007 110.617 35.3379 110.994 35.4121 110.994 cv
35.4546 110.994 35.4966 110.804 35.5601 110.652 cv
35.6025 110.558 35.6445 110.523 35.7612 110.511 cv
35.9194 110.5 36.1416 110.488 36.3003 110.488 cv
36.4165 110.488 36.5117 110.523 36.5117 110.64 cv
36.5117 110.699 36.4697 110.841 36.4482 110.923 cv
36.1313 112.097 35.7715 113.355 35.4438 114.552 cv
35.4014 114.683 35.3486 114.882 35.3486 114.988 cv
35.3486 115.082 35.3804 115.152 35.4438 115.152 cv
35.6763 115.152 36.1206 114.505 36.2476 114.294 cv
36.3213 114.177 36.3955 114.048 36.48 114.048 cv
36.5435 114.048 36.5859 114.107 36.5859 114.177 cv
36.5859 114.4 36.1733 115.011 35.9619 115.234 cv
35.6445 115.587 35.0527 116.117 34.5659 116.117 cv
34.3018 116.117 34.2173 115.892 34.2173 115.681 cv
34.2173 115.47 34.27 115.234 34.3335 115.023 cv
34.5239 114.341 34.7246 113.636 34.9258 112.919 cv
34.9043 112.919 li
34.291 114.06 32.9165 116.128 31.7217 116.128 cv
31.1611 116.128 30.8438 115.541 30.8438 114.882 cv
30.8438 114.871 li
cp
f
37.0308 115.47 mo
37.0308 115.175 37.147 114.765 37.2529 114.388 cv
37.5488 113.32 37.8447 112.25 38.1196 111.193 cv
37.5381 111.193 li
37.4009 111.193 37.3164 111.181 37.3164 111.099 cv
37.3164 111.029 37.3481 110.9 37.3794 110.853 cv
37.4219 110.781 37.5063 110.769 37.623 110.769 cv
38.2256 110.769 li
38.5747 109.537 li
38.6064 109.419 38.6909 109.373 38.7646 109.373 cv
38.8496 109.361 39.0503 109.349 39.1455 109.349 cv
39.2515 109.349 39.3467 109.349 39.4521 109.361 cv
39.5156 109.361 39.5791 109.384 39.5791 109.466 cv
39.5791 109.525 39.5474 109.654 39.5264 109.748 cv
39.4312 110.078 39.3359 110.429 39.2407 110.769 cv
40.0444 110.769 li
40.1924 110.769 40.2666 110.781 40.2666 110.853 cv
40.2666 110.912 40.2451 110.97 40.2031 111.076 cv
40.1714 111.181 40.0654 111.193 39.9492 111.193 cv
39.1348 111.193 li
38.8496 112.25 38.5532 113.332 38.2573 114.412 cv
38.2148 114.552 38.1304 114.882 38.1304 115.023 cv
38.1304 115.14 38.1729 115.257 38.2783 115.257 cv
38.5215 115.257 38.8916 114.707 39.0293 114.505 cv
39.1665 114.294 39.2725 114.06 39.3467 114.06 cv
39.4204 114.06 39.4629 114.13 39.4629 114.189 cv
39.4629 114.33 39.23 114.695 39.1348 114.835 cv
38.8281 115.292 38.0986 116.128 37.4961 116.128 cv
37.2314 116.128 37.0308 115.845 37.0308 115.482 cv
37.0308 115.47 li
cp
f
43.0371 109.066 mo
43.0371 109.455 42.73 109.9 42.3389 109.9 cv
42.043 109.9 41.895 109.654 41.895 109.396 cv
41.895 109.007 42.1909 108.548 42.5718 108.548 cv
42.8467 108.548 43.0371 108.773 43.0371 109.054 cv
43.0371 109.066 li
cp
42.4868 111.064 mo
42.4868 111.263 42.3813 111.652 42.3179 111.886 cv
42.0747 112.755 41.8101 113.648 41.5669 114.505 cv
41.5142 114.695 41.4614 114.871 41.4614 115 cv
41.4614 115.117 41.4932 115.21 41.5884 115.21 cv
41.7783 115.21 42.1382 114.742 42.3389 114.4 cv
42.4551 114.189 42.5503 114.025 42.6353 114.025 cv
42.709 114.025 42.73 114.083 42.73 114.142 cv
42.73 114.341 42.4233 114.8 42.2969 115 cv
41.9902 115.423 41.3345 116.128 40.7949 116.128 cv
40.4355 116.128 40.3618 115.869 40.3618 115.564 cv
40.3618 115.292 40.4673 114.871 40.5518 114.564 cv
40.7949 113.695 41.0596 112.802 41.2817 111.992 cv
41.3135 111.886 41.3765 111.699 41.3765 111.617 cv
41.3765 111.521 41.3452 111.416 41.25 111.416 cv
41.0806 111.416 40.8374 111.687 40.6577 111.91 cv
40.4355 112.167 40.2769 112.404 40.1924 112.404 cv
40.1396 112.404 40.1079 112.345 40.1079 112.285 cv
40.1079 112.121 40.499 111.628 40.6367 111.474 cv
40.9434 111.146 41.5669 110.593 42.064 110.593 cv
42.3286 110.593 42.4868 110.746 42.4868 111.052 cv
42.4868 111.064 li
cp
f
48.853 111.357 mo
48.853 111.605 48.7476 111.91 48.6733 112.144 cv
48.4302 112.873 48.1763 113.613 47.9224 114.376 cv
47.8276 114.625 47.7319 114.882 47.7319 115.046 cv
47.7319 115.187 47.8062 115.269 47.9224 115.269 cv
48.145 115.269 48.4937 114.859 48.7056 114.564 cv
48.8423 114.376 49.0015 114.072 49.1069 114.072 cv
49.1704 114.072 49.2124 114.13 49.2124 114.189 cv
49.2124 114.376 49.022 114.683 48.6948 115.07 cv
48.3667 115.47 47.6899 116.128 47.1616 116.128 cv
46.8862 116.128 46.6323 115.974 46.6323 115.564 cv
46.6323 115.187 46.77 114.742 46.9077 114.365 cv
47.1294 113.707 47.3618 113.037 47.5952 112.333 cv
47.6587 112.132 47.7642 111.839 47.7642 111.64 cv
47.7642 111.416 47.6479 111.275 47.4468 111.275 cv
46.9712 111.275 46.3472 112.062 45.9878 112.58 cv
45.48 113.273 44.771 114.648 44.5181 115.529 cv
44.4121 115.916 44.3804 115.986 43.9995 115.986 cv
43.7881 115.986 li
43.6294 115.986 43.4604 115.986 43.4604 115.822 cv
43.4604 115.751 43.5132 115.552 43.5342 115.494 cv
43.8516 114.412 44.1582 113.32 44.4546 112.238 cv
44.5181 112.039 44.5815 111.804 44.5815 111.628 cv
44.5815 111.498 44.5278 111.38 44.3906 111.38 cv
44.2007 111.38 43.7988 111.851 43.5869 112.156 cv
43.5132 112.273 43.4072 112.474 43.3438 112.474 cv
43.2803 112.474 43.2275 112.427 43.2275 112.357 cv
43.2275 112.203 43.5767 111.687 43.7139 111.533 cv
44.0205 111.158 44.5913 110.593 45.0884 110.593 cv
45.4272 110.593 45.5854 110.818 45.5854 111.205 cv
45.5854 111.509 45.5112 111.839 45.4272 112.132 cv
45.3003 112.603 45.1626 113.074 45.0249 113.566 cv
45.0464 113.589 li
45.6284 112.439 46.8013 110.593 48.1021 110.593 cv
48.5464 110.593 48.853 110.9 48.853 111.345 cv
48.853 111.357 li
cp
f
53.0835 111.898 mo
53.0835 111.392 52.8511 110.9 52.2798 110.9 cv
51.4556 110.9 50.9155 112.285 50.9155 113.074 cv
50.9155 113.601 51.1802 114.13 51.7095 114.13 cv
52.5229 114.13 53.0835 112.755 53.0835 111.91 cv
53.0835 111.898 li
cp
51.3491 118.349 mo
51.9526 118.349 52.8198 118.031 52.8198 117.279 cv
52.8198 116.726 52.3228 116.515 51.9097 116.351 cv
51.5503 116.21 51.1274 116.082 50.7788 115.939 cv
50.2603 116.105 49.4985 116.339 49.4985 117.056 cv
49.4985 117.972 50.5991 118.349 51.3394 118.349 cv
51.3491 118.349 li
cp
49.9321 112.544 mo
49.9321 111.451 50.937 110.593 52.1001 110.593 cv
52.396 110.593 52.6821 110.64 52.8931 110.722 cv
53.0522 110.792 53.1265 110.818 53.2104 110.83 cv
54.3843 110.83 li
54.5962 110.83 54.6597 110.83 54.6597 110.9 cv
54.6597 110.958 54.6167 111.123 54.5854 111.181 cv
54.5435 111.275 54.5005 111.287 54.3208 111.287 cv
53.5913 111.287 li
53.856 111.593 54.0464 111.992 54.0464 112.462 cv
54.0464 113.566 53.02 114.447 51.8892 114.447 cv
51.4761 114.447 51.0327 114.318 50.7466 114.06 cv
50.5991 114.154 50.4614 114.306 50.4614 114.505 cv
50.4614 114.964 51.2651 115.14 51.7729 115.269 cv
52.5552 115.494 53.729 115.916 53.729 116.869 cv
53.729 117.785 52.7349 118.666 51.1382 118.666 cv
49.9858 118.666 48.6001 118.042 48.6001 117.115 cv
48.6001 116.152 49.8159 115.927 50.4507 115.74 cv
50.0913 115.564 49.7524 115.304 49.7524 114.847 cv
49.7524 114.376 50.2183 114.072 50.5142 113.861 cv
50.2075 113.554 49.9321 113.109 49.9321 112.556 cv
49.9321 112.544 li
cp
f
62.7368 113.191 mo
62.7368 114.753 61.479 116.128 59.9351 116.128 cv
58.4653 116.128 57.5981 114.917 57.5981 113.285 cv
57.5981 111.544 58.5396 110.171 59.7124 109.242 cv
61.0132 108.22 62.6001 107.75 63.4878 107.75 cv
63.5513 107.75 63.689 107.773 63.689 107.904 cv
63.689 108.091 63.3501 108.115 63.1284 108.173 cv
61.8491 108.466 60.7808 109.078 59.9028 110.171 cv
59.0991 111.228 58.687 112.615 58.687 113.8 cv
58.687 114.625 58.9517 115.74 59.8823 115.74 cv
61.0034 115.74 61.6167 114.072 61.6167 112.966 cv
61.6167 112.261 61.2251 111.544 60.5796 111.521 cv
60.2632 111.498 59.9985 111.687 59.9028 111.664 cv
59.8608 111.652 59.8296 111.628 59.8296 111.582 cv
59.8296 111.392 60.2524 111.064 60.9819 111.064 cv
62.0396 111.064 62.7368 112.085 62.7368 113.179 cv
62.7368 113.191 li
cp
f
65.8892 109.724 mo
65.6353 109.748 65.5083 109.771 65.4136 109.83 cv
65.2974 109.912 64.9585 110.841 64.9585 110.958 cv
64.9585 111.052 65.0747 111.052 65.1909 111.052 cv
65.7837 111.064 66.4282 111.134 66.9683 111.404 cv
67.6548 111.746 68.1313 112.392 68.1313 113.355 cv
68.1313 114.66 67.1265 115.693 66.1011 116.187 cv
65.1909 116.632 64.2183 116.82 62.981 116.82 cv
62.77 116.82 62.5581 116.82 62.5581 116.644 cv
62.5581 116.48 62.8013 116.457 63.1606 116.457 cv
65.0112 116.41 66.9683 115.494 66.9683 113.531 cv
66.9683 112.25 65.6782 112.05 64.8315 112.039 cv
64.3667 112.027 64.271 112.027 64.271 111.886 cv
64.271 111.816 64.3452 111.628 64.3667 111.57 cv
64.6519 110.746 64.9272 109.923 65.2017 109.113 cv
65.3081 108.796 65.3179 108.785 65.6245 108.75 cv
66.7251 108.644 67.8032 108.548 68.8813 108.455 cv
68.9663 108.455 69.019 108.501 69.019 108.574 cv
69.019 108.644 68.9028 109.066 68.8501 109.242 cv
68.7974 109.466 68.7554 109.478 68.4585 109.501 cv
65.8892 109.724 li
cp
f
74.4331 109.337 mo
74.4331 109.431 74.5171 109.689 74.5493 109.818 cv
74.7925 110.664 75.0464 111.509 75.2788 112.357 cv
75.9126 111.544 76.5469 110.746 77.1816 109.947 cv
77.3203 109.771 77.584 109.455 77.584 109.23 cv
77.584 109.042 77.2656 109.042 77.1289 109.031 cv
76.9805 109.007 76.8652 108.984 76.8652 108.82 cv
76.8652 108.667 76.9922 108.656 77.1504 108.656 cv
77.373 108.656 77.6055 108.703 77.9219 108.703 cv
78.2188 108.703 78.5137 108.656 78.8008 108.656 cv
78.8848 108.656 79.0117 108.667 79.0117 108.832 cv
79.0117 108.984 78.8945 109.007 78.7266 109.031 cv
78.3672 109.066 78.2188 109.242 77.9219 109.619 cv
77.0762 110.687 76.23 111.757 75.3843 112.814 cv
75.2153 113.449 75.0356 114.095 74.8657 114.718 cv
74.813 114.894 74.7397 115.152 74.7397 115.304 cv
74.7397 115.634 75.0034 115.634 75.2466 115.658 cv
75.3423 115.658 75.5747 115.646 75.5747 115.833 cv
75.5747 116.009 75.4058 116.021 75.2466 116.021 cv
74.8765 116.021 74.3159 115.974 73.8931 115.974 cv
73.5337 115.974 73.0894 116.021 72.8462 116.021 cv
72.6245 116.021 72.4556 116.021 72.4556 115.88 cv
72.4556 115.669 72.6558 115.658 73.0259 115.634 cv
73.4595 115.599 73.5659 115.152 73.6714 114.742 cv
73.8511 114.083 74.0308 113.425 74.1997 112.779 cv
73.8931 111.769 73.5972 110.769 73.2798 109.771 cv
73.1431 109.314 73.0259 109.042 72.7095 109.031 cv
72.4761 109.007 72.3599 108.972 72.3599 108.843 cv
72.3599 108.656 72.561 108.656 72.7407 108.656 cv
73.1001 108.656 73.4595 108.703 73.8091 108.703 cv
74.2427 108.703 74.644 108.656 74.9829 108.656 cv
75.1196 108.656 75.2573 108.656 75.2573 108.82 cv
75.2573 108.996 75.0034 109.019 74.8345 109.031 cv
74.6763 109.042 74.4331 109.066 74.4331 109.326 cv
74.4331 109.337 li
cp
f
80.1641 110.9 mo
79.2012 110.9 78.4395 112.273 78.1758 113.46 cv
78.9473 113.355 79.9844 113.109 80.4063 112.486 cv
80.5977 112.191 80.7246 111.828 80.7246 111.498 cv
80.7246 111.123 80.5137 110.9 80.1738 110.9 cv
80.1641 110.9 li
cp
81.6133 111.734 mo
81.6133 113.355 79.3711 113.589 78.3125 113.742 cv
78.25 113.765 78.1855 113.765 78.123 113.789 cv
78.1016 113.931 78.1016 114.072 78.1016 114.212 cv
78.1016 114.941 78.4512 115.447 79.1055 115.447 cv
79.6992 115.447 80.3438 114.941 80.6719 114.447 cv
80.7461 114.353 80.7988 114.294 80.8613 114.294 cv
80.9355 114.294 80.9668 114.341 80.9668 114.412 cv
80.9668 114.517 80.7656 114.789 80.6934 114.906 cv
80.1953 115.541 79.4336 116.128 78.5781 116.128 cv
77.5625 116.128 77.002 115.257 77.002 114.271 cv
77.002 112.498 78.5781 110.593 80.291 110.593 cv
80.8086 110.593 81.6133 110.9 81.6133 111.722 cv
81.6133 111.734 li
cp
f
85.8867 111.486 mo
85.8867 111.134 85.6211 110.958 85.293 110.958 cv
84.6172 110.958 83.9297 111.699 83.4961 112.308 cv
83.1055 112.849 82.5977 113.919 82.5977 114.589 cv
82.5977 114.871 82.7246 115.21 83.0195 115.21 cv
83.5801 115.21 84.4375 114.107 84.8066 113.589 cv
85.125 113.167 85.8867 111.98 85.8867 111.498 cv
85.8867 111.486 li
cp
81.4551 114.871 mo
81.4551 113.908 82.0469 112.744 82.6719 112.027 cv
83.3262 111.263 84.2676 110.617 85.1992 110.617 cv
85.8125 110.617 85.9492 110.994 86.0234 110.994 cv
86.0664 110.994 86.1074 110.804 86.1719 110.652 cv
86.2129 110.558 86.2559 110.523 86.373 110.511 cv
86.5313 110.5 86.7539 110.488 86.9121 110.488 cv
87.0273 110.488 87.123 110.523 87.123 110.64 cv
87.123 110.699 87.0801 110.841 87.0605 110.923 cv
86.7422 112.097 86.3828 113.355 86.0547 114.552 cv
86.0137 114.683 85.959 114.882 85.959 114.988 cv
85.959 115.082 85.9922 115.152 86.0547 115.152 cv
86.2871 115.152 86.7324 114.505 86.8594 114.294 cv
86.9336 114.177 87.0059 114.048 87.0918 114.048 cv
87.1543 114.048 87.1973 114.107 87.1973 114.177 cv
87.1973 114.4 86.7852 115.011 86.5742 115.234 cv
86.2559 115.587 85.6641 116.117 85.1777 116.117 cv
84.9121 116.117 84.8281 115.892 84.8281 115.681 cv
84.8281 115.47 84.8809 115.234 84.9453 115.023 cv
85.1348 114.341 85.3359 113.636 85.5371 112.919 cv
85.5156 112.919 li
84.9023 114.06 83.5273 116.128 82.332 116.128 cv
81.7734 116.128 81.4551 115.541 81.4551 114.882 cv
81.4551 114.871 li
cp
f
92.2617 111.275 mo
92.2617 111.664 92.0293 112.097 91.6602 112.097 cv
91.543 112.097 91.4688 112.074 91.416 112.027 cv
91.2988 111.91 91.2578 111.746 91.2148 111.605 cv
91.1934 111.544 91.1621 111.509 91.0996 111.509 cv
90.8457 111.509 90.2852 112.427 90.1152 112.755 cv
89.7559 113.402 89.1523 114.695 88.9414 115.458 cv
88.8145 115.892 88.8262 115.986 88.3281 115.986 cv
88.1055 115.986 87.8633 115.998 87.8633 115.787 cv
87.8633 115.705 87.9258 115.482 87.9473 115.4 cv
88.2441 114.341 88.5391 113.285 88.8262 112.226 cv
88.8789 112.039 88.9531 111.781 88.9531 111.593 cv
88.9531 111.486 88.9199 111.357 88.8145 111.357 cv
88.6563 111.357 88.3926 111.664 88.2324 111.886 cv
88.1172 112.05 88.0742 112.132 87.9785 112.261 cv
87.9375 112.322 87.8848 112.427 87.8203 112.427 cv
87.7578 112.427 87.7148 112.369 87.7148 112.308 cv
87.7148 112.097 88.1172 111.544 88.2852 111.357 cv
88.5391 111.052 89.0469 110.593 89.4395 110.593 cv
89.7461 110.593 89.9258 110.958 89.9258 111.322 cv
89.9258 111.804 89.5977 112.791 89.3867 113.554 cv
89.4063 113.554 li
89.8086 112.744 90.7598 110.593 91.6699 110.593 cv
92.0293 110.593 92.2617 110.853 92.2617 111.263 cv
92.2617 111.275 li
cp
f
95.127 114.447 mo
95.127 114.906 94.8008 115.4 94.4395 115.681 cv
94.0605 115.962 93.5527 116.128 93.0547 116.128 cv
92.5801 116.128 92.0605 115.951 91.7227 115.716 cv
91.6055 115.634 91.4805 115.505 91.4805 115.353 cv
91.4805 115.234 91.543 115.023 91.5742 114.917 cv
91.6172 114.777 91.6797 114.458 91.8594 114.458 cv
91.9863 114.458 92.0723 114.578 92.1875 114.8 cv
92.4102 115.21 92.7168 115.775 93.3086 115.775 cv
93.7109 115.775 94.1328 115.435 94.1328 114.976 cv
94.1328 114.482 93.7109 114.107 93.2871 113.695 cv
92.8652 113.273 92.4414 112.826 92.4414 112.25 cv
92.4414 111.24 93.3203 110.593 94.3457 110.593 cv
94.6191 110.593 95.7207 110.664 95.7207 111.123 cv
95.7207 111.216 95.666 111.392 95.625 111.521 cv
95.5723 111.652 95.5195 111.898 95.3594 111.898 cv
95.2012 111.898 95.043 111.652 94.8418 111.404 cv
94.6309 111.158 94.3867 110.923 94.0391 110.923 cv
93.6582 110.923 93.3516 111.216 93.3516 111.64 cv
93.3516 112.074 93.7207 112.427 94.2188 112.908 cv
94.6621 113.332 95.127 113.812 95.127 114.435 cv
95.127 114.447 li
cp
f
102.436 112.25 mo
102.436 111.593 102.223 110.935 101.516 110.935 cv
100.977 110.935 100.531 111.333 100.203 111.886 cv
99.7598 112.615 99.5273 113.625 99.5273 114.341 cv
99.5273 115.035 99.7285 115.763 100.457 115.763 cv
100.986 115.763 101.43 115.33 101.77 114.742 cv
102.182 114.001 102.436 112.978 102.436 112.261 cv
102.436 112.25 li
cp
103.408 112.908 mo
103.408 113.695 103.059 114.517 102.541 115.082 cv
102.012 115.658 101.197 116.128 100.447 116.128 cv
99.2637 116.128 98.5234 115.023 98.5234 113.826 cv
98.5234 112.156 99.9297 110.593 101.42 110.593 cv
102.594 110.593 103.408 111.675 103.408 112.896 cv
103.408 112.908 li
cp
f
108.844 108.597 mo
108.844 108.925 108.633 109.16 108.326 109.16 cv
108.061 109.16 107.945 109.031 107.871 108.867 cv
107.818 108.738 107.797 108.574 107.766 108.443 cv
107.744 108.337 107.691 108.244 107.553 108.244 cv
107.395 108.244 107.184 108.408 107.057 108.597 cv
106.771 108.949 106.602 109.595 106.465 110.089 cv
106.4 110.312 106.338 110.535 106.273 110.769 cv
107.119 110.769 li
107.258 110.769 107.363 110.769 107.363 110.865 cv
107.363 110.923 107.342 110.994 107.299 111.099 cv
107.279 111.193 107.141 111.193 107.057 111.193 cv
106.158 111.193 li
105.756 112.697 105.354 114.224 104.932 115.74 cv
104.74 116.457 104.508 117.126 104.117 117.667 cv
103.65 118.277 102.953 118.666 102.361 118.666 cv
101.811 118.666 101.398 118.396 101.398 117.89 cv
101.398 117.548 101.59 117.267 101.918 117.267 cv
102.234 117.267 102.393 117.466 102.457 117.726 cv
102.467 117.808 102.479 117.902 102.479 117.996 cv
102.488 118.16 102.488 118.312 102.668 118.312 cv
102.848 118.312 103.08 118.078 103.219 117.808 cv
103.471 117.337 103.736 116.398 103.885 115.857 cv
104.307 114.294 104.73 112.732 105.152 111.193 cv
104.486 111.193 li
104.338 111.193 104.275 111.181 104.275 111.099 cv
104.275 111.017 104.307 110.912 104.338 110.865 cv
104.381 110.769 104.465 110.769 104.604 110.769 cv
105.27 110.769 li
105.48 110.017 105.756 109.23 106.273 108.679 cv
106.686 108.267 107.404 107.845 107.955 107.845 cv
108.432 107.845 108.844 108.068 108.844 108.585 cv
108.844 108.597 li
cp
f
111.594 114.412 mo
111.52 114.695 111.434 114.964 111.434 115.21 cv
111.434 115.623 111.74 115.623 112.279 115.623 cv
112.787 115.623 113.506 115.576 113.898 115.353 cv
114.268 115.14 114.533 114.707 114.723 114.306 cv
114.787 114.177 114.84 114.083 114.955 114.083 cv
115.072 114.083 115.113 114.166 115.113 114.271 cv
115.113 114.33 115.082 114.447 115.041 114.613 cv
114.955 114.929 114.871 115.257 114.787 115.587 cv
114.723 115.869 114.66 116.009 114.385 116.009 cv
114.004 116.009 112.873 115.974 111.91 115.974 cv
110.398 115.974 109.859 116.009 109.457 116.009 cv
109.287 116.009 109.098 116.009 109.098 115.857 cv
109.098 115.658 109.266 115.646 109.457 115.646 cv
110.049 115.634 110.133 115.376 110.324 114.695 cv
110.758 113.097 111.191 111.509 111.613 109.923 cv
111.656 109.771 111.73 109.501 111.73 109.361 cv
111.73 109.054 111.498 109.019 111.254 109.007 cv
111.086 108.996 110.873 109.019 110.873 108.832 cv
110.873 108.656 111.043 108.632 111.17 108.632 cv
111.73 108.632 112.449 108.691 113.539 108.679 cv
114.438 108.679 115.199 108.632 115.801 108.632 cv
115.918 108.632 116.014 108.667 116.014 108.785 cv
116.014 108.937 115.813 109.619 115.695 109.994 cv
115.643 110.218 115.58 110.429 115.463 110.429 cv
115.305 110.429 115.283 110.312 115.273 110.148 cv
115.273 109.712 115.209 109.396 115.02 109.23 cv
114.766 109.031 114.512 109.019 113.846 109.019 cv
113.326 109.019 113.221 109.019 113.115 109.089 cv
113.031 109.148 112.988 109.3 112.926 109.537 cv
112.27 111.921 li
113.211 111.921 li
113.846 111.91 114.047 111.839 114.373 111.181 cv
114.48 110.958 114.533 110.83 114.67 110.83 cv
114.734 110.83 114.818 110.888 114.818 110.994 cv
114.818 111.111 114.691 111.439 114.66 111.544 cv
114.512 111.98 114.301 112.755 114.236 113.144 cv
114.205 113.273 114.174 113.566 113.994 113.566 cv
113.855 113.566 113.824 113.449 113.824 113.332 cv
113.824 113.179 113.846 113.001 113.846 112.826 cv
113.846 112.273 113.496 112.333 113.072 112.322 cv
112.152 112.322 li
111.594 114.412 li
cp
f
121.217 111.216 mo
121.217 111.57 120.973 111.992 120.602 111.992 cv
120.402 111.992 120.328 111.886 120.295 111.769 cv
120.264 111.652 120.275 111.521 120.254 111.462 cv
120.242 111.404 120.223 111.333 120.127 111.333 cv
120.021 111.333 119.842 111.486 119.65 111.71 cv
119.291 112.121 118.889 112.767 118.742 113.001 cv
118.889 113.496 119.059 114.083 119.186 114.564 cv
119.248 114.789 119.387 115.316 119.662 115.316 cv
119.988 115.316 120.17 114.707 120.201 114.412 cv
120.223 114.283 120.254 114.154 120.35 114.154 cv
120.455 114.154 120.465 114.318 120.465 114.388 cv
120.465 114.988 119.904 116.128 119.176 116.128 cv
118.668 116.128 118.529 115.658 118.383 115.222 cv
118.234 114.8 118.107 114.353 117.969 113.896 cv
117.662 114.365 117.25 115 116.795 115.47 cv
116.416 115.845 116.002 116.128 115.58 116.128 cv
115.178 116.128 114.945 115.892 114.945 115.482 cv
114.945 115.128 115.188 114.695 115.537 114.695 cv
115.738 114.695 115.896 114.824 115.918 115.046 cv
115.928 115.187 115.875 115.281 115.896 115.376 cv
115.908 115.447 115.961 115.517 116.045 115.517 cv
116.531 115.517 117.609 113.931 117.842 113.484 cv
117.736 113.074 117.588 112.58 117.473 112.203 cv
117.389 111.886 117.281 111.357 116.891 111.357 cv
116.584 111.357 116.436 111.675 116.373 111.933 cv
116.299 112.25 116.277 112.521 116.141 112.521 cv
116.035 112.521 116.023 112.404 116.023 112.322 cv
116.023 111.628 116.553 110.593 117.377 110.593 cv
117.959 110.593 118.17 111.064 118.318 111.605 cv
118.414 111.933 118.51 112.25 118.604 112.58 cv
119.143 111.839 119.852 110.593 120.602 110.593 cv
120.93 110.593 121.217 110.83 121.217 111.205 cv
121.217 111.216 li
cp
f
125.563 111.275 mo
125.563 111.533 125.33 111.722 125.098 111.722 cv
124.885 111.722 124.738 111.64 124.621 111.533 cv
124.516 111.416 124.432 111.298 124.367 111.169 cv
124.283 111.041 124.188 110.935 124.039 110.935 cv
123.67 110.935 123.215 111.404 122.939 111.792 cv
122.496 112.392 122.125 113.367 122.125 114.142 cv
122.125 114.847 122.443 115.388 123.066 115.388 cv
123.605 115.388 124.082 115.058 124.41 114.707 cv
124.717 114.4 124.906 114.107 125.012 114.107 cv
125.064 114.107 125.107 114.166 125.107 114.224 cv
125.107 114.4 124.801 114.8 124.684 114.953 cv
124.188 115.552 123.49 116.128 122.676 116.128 cv
121.682 116.128 121.016 115.21 121.016 114.166 cv
121.016 113.308 121.428 112.416 122.01 111.769 cv
122.57 111.146 123.457 110.593 124.346 110.593 cv
124.865 110.593 125.563 110.818 125.563 111.263 cv
125.563 111.275 li
cp
f
128.734 110.9 mo
127.773 110.9 127.012 112.273 126.748 113.46 cv
127.52 113.355 128.555 113.109 128.979 112.486 cv
129.168 112.191 129.295 111.828 129.295 111.498 cv
129.295 111.123 129.084 110.9 128.746 110.9 cv
128.734 110.9 li
cp
130.184 111.734 mo
130.184 113.355 127.941 113.589 126.885 113.742 cv
126.82 113.765 126.758 113.765 126.693 113.789 cv
126.674 113.931 126.674 114.072 126.674 114.212 cv
126.674 114.941 127.021 115.447 127.678 115.447 cv
128.27 115.447 128.914 114.941 129.242 114.447 cv
129.316 114.353 129.369 114.294 129.434 114.294 cv
129.508 114.294 129.539 114.341 129.539 114.412 cv
129.539 114.517 129.338 114.789 129.264 114.906 cv
128.768 115.541 128.006 116.128 127.148 116.128 cv
126.135 116.128 125.574 115.257 125.574 114.271 cv
125.574 112.498 127.148 110.593 128.861 110.593 cv
129.381 110.593 130.184 110.9 130.184 111.722 cv
130.184 111.734 li
cp
f
130.217 115.587 mo
130.217 115.222 130.332 114.777 130.449 114.376 cv
130.893 112.744 131.348 111.111 131.803 109.49 cv
131.834 109.349 131.908 109.113 131.908 108.996 cv
131.908 108.738 131.686 108.714 131.475 108.714 cv
131.295 108.714 131.178 108.703 131.178 108.562 cv
131.178 108.396 131.336 108.373 131.559 108.361 cv
131.949 108.349 132.521 108.185 132.85 107.986 cv
132.965 107.904 133.051 107.857 133.104 107.857 cv
133.166 107.857 133.219 107.892 133.219 107.986 cv
133.219 108.044 133.176 108.197 133.145 108.302 cv
132.574 110.359 132.004 112.427 131.432 114.494 cv
131.369 114.695 131.305 114.941 131.305 115.058 cv
131.305 115.164 131.348 115.234 131.443 115.234 cv
131.676 115.234 132.172 114.494 132.311 114.236 cv
132.363 114.154 132.416 114.048 132.5 114.048 cv
132.563 114.048 132.584 114.107 132.584 114.166 cv
132.584 114.376 132.268 114.859 132.109 115.058 cv
131.822 115.447 131.178 116.128 130.629 116.128 cv
130.279 116.128 130.217 115.869 130.217 115.599 cv
130.217 115.587 li
cp
f
132.986 115.587 mo
132.986 115.222 133.104 114.777 133.219 114.376 cv
133.664 112.744 134.117 111.111 134.572 109.49 cv
134.604 109.349 134.678 109.113 134.678 108.996 cv
134.678 108.738 134.457 108.714 134.244 108.714 cv
134.064 108.714 133.949 108.703 133.949 108.562 cv
133.949 108.396 134.107 108.373 134.33 108.361 cv
134.721 108.349 135.291 108.185 135.619 107.986 cv
135.736 107.904 135.82 107.857 135.873 107.857 cv
135.938 107.857 135.99 107.892 135.99 107.986 cv
135.99 108.044 135.947 108.197 135.916 108.302 cv
135.344 110.359 134.773 112.427 134.203 114.494 cv
134.139 114.695 134.076 114.941 134.076 115.058 cv
134.076 115.164 134.117 115.234 134.213 115.234 cv
134.445 115.234 134.943 114.494 135.08 114.236 cv
135.133 114.154 135.186 114.048 135.27 114.048 cv
135.334 114.048 135.355 114.107 135.355 114.166 cv
135.355 114.376 135.037 114.859 134.879 115.058 cv
134.594 115.447 133.949 116.128 133.398 116.128 cv
133.051 116.128 132.986 115.869 132.986 115.599 cv
132.986 115.587 li
cp
f
138.791 110.9 mo
137.83 110.9 137.068 112.273 136.805 113.46 cv
137.576 113.355 138.611 113.109 139.035 112.486 cv
139.225 112.191 139.352 111.828 139.352 111.498 cv
139.352 111.123 139.141 110.9 138.803 110.9 cv
138.791 110.9 li
cp
140.24 111.734 mo
140.24 113.355 137.998 113.589 136.941 113.742 cv
136.877 113.765 136.814 113.765 136.75 113.789 cv
136.73 113.931 136.73 114.072 136.73 114.212 cv
136.73 114.941 137.078 115.447 137.734 115.447 cv
138.326 115.447 138.971 114.941 139.299 114.447 cv
139.373 114.353 139.426 114.294 139.49 114.294 cv
139.564 114.294 139.596 114.341 139.596 114.412 cv
139.596 114.517 139.395 114.789 139.32 114.906 cv
138.824 115.541 138.063 116.128 137.205 116.128 cv
136.191 116.128 135.631 115.257 135.631 114.271 cv
135.631 112.498 137.205 110.593 138.918 110.593 cv
139.438 110.593 140.24 110.9 140.24 111.722 cv
140.24 111.734 li
cp
f
145.994 111.357 mo
145.994 111.605 145.889 111.91 145.814 112.144 cv
145.57 112.873 145.318 113.613 145.064 114.376 cv
144.969 114.625 144.873 114.882 144.873 115.046 cv
144.873 115.187 144.947 115.269 145.064 115.269 cv
145.285 115.269 145.635 114.859 145.846 114.564 cv
145.984 114.376 146.143 114.072 146.248 114.072 cv
146.311 114.072 146.354 114.13 146.354 114.189 cv
146.354 114.376 146.164 114.683 145.836 115.07 cv
145.508 115.47 144.832 116.128 144.303 116.128 cv
144.027 116.128 143.773 115.974 143.773 115.564 cv
143.773 115.187 143.91 114.742 144.049 114.365 cv
144.271 113.707 144.504 113.037 144.736 112.333 cv
144.799 112.132 144.904 111.839 144.904 111.64 cv
144.904 111.416 144.789 111.275 144.588 111.275 cv
144.111 111.275 143.488 112.062 143.129 112.58 cv
142.621 113.273 141.912 114.648 141.658 115.529 cv
141.553 115.916 141.521 115.986 141.141 115.986 cv
140.93 115.986 li
140.771 115.986 140.602 115.986 140.602 115.822 cv
140.602 115.751 140.654 115.552 140.676 115.494 cv
140.992 114.412 141.299 113.32 141.596 112.238 cv
141.658 112.039 141.723 111.804 141.723 111.628 cv
141.723 111.498 141.67 111.38 141.531 111.38 cv
141.342 111.38 140.939 111.851 140.729 112.156 cv
140.654 112.273 140.549 112.474 140.484 112.474 cv
140.422 112.474 140.369 112.427 140.369 112.357 cv
140.369 112.203 140.717 111.687 140.855 111.533 cv
141.162 111.158 141.732 110.593 142.23 110.593 cv
142.568 110.593 142.727 110.818 142.727 111.205 cv
142.727 111.509 142.652 111.839 142.568 112.132 cv
142.441 112.603 142.305 113.074 142.166 113.566 cv
142.188 113.589 li
142.77 112.439 143.943 110.593 145.244 110.593 cv
145.688 110.593 145.994 110.9 145.994 111.345 cv
145.994 111.357 li
cp
f
151.271 111.275 mo
151.271 111.533 151.039 111.722 150.807 111.722 cv
150.594 111.722 150.447 111.64 150.33 111.533 cv
150.225 111.416 150.141 111.298 150.076 111.169 cv
149.992 111.041 149.896 110.935 149.748 110.935 cv
149.379 110.935 148.924 111.404 148.648 111.792 cv
148.205 112.392 147.834 113.367 147.834 114.142 cv
147.834 114.847 148.152 115.388 148.775 115.388 cv
149.314 115.388 149.791 115.058 150.119 114.707 cv
150.426 114.4 150.615 114.107 150.721 114.107 cv
150.773 114.107 150.816 114.166 150.816 114.224 cv
150.816 114.4 150.51 114.8 150.393 114.953 cv
149.896 115.552 149.199 116.128 148.385 116.128 cv
147.391 116.128 146.725 115.21 146.725 114.166 cv
146.725 113.308 147.137 112.416 147.719 111.769 cv
148.279 111.146 149.166 110.593 150.055 110.593 cv
150.574 110.593 151.271 110.818 151.271 111.263 cv
151.271 111.275 li
cp
f
154.443 110.9 mo
153.48 110.9 152.719 112.273 152.455 113.46 cv
153.227 113.355 154.264 113.109 154.686 112.486 cv
154.877 112.191 155.004 111.828 155.004 111.498 cv
155.004 111.123 154.793 110.9 154.453 110.9 cv
154.443 110.9 li
cp
155.893 111.734 mo
155.893 113.355 153.65 113.589 152.592 113.742 cv
152.529 113.765 152.465 113.765 152.402 113.789 cv
152.381 113.931 152.381 114.072 152.381 114.212 cv
152.381 114.941 152.73 115.447 153.385 115.447 cv
153.979 115.447 154.623 114.941 154.951 114.447 cv
155.025 114.353 155.078 114.294 155.141 114.294 cv
155.215 114.294 155.246 114.341 155.246 114.412 cv
155.246 114.517 155.045 114.789 154.973 114.906 cv
154.475 115.541 153.713 116.128 152.857 116.128 cv
151.842 116.128 151.281 115.257 151.281 114.271 cv
151.281 112.498 152.857 110.593 154.57 110.593 cv
155.088 110.593 155.893 110.9 155.893 111.722 cv
155.893 111.734 li
cp
f
76.3037 19.604 mo
73.0386 18.666 li
70.8208 17.981 67.3608 16.918 67.3608 14.1709 cv
67.3608 11.5488 70.4937 10.2383 72.8447 10.2383 cv
75.9775 10.2383 78.9805 11.4868 81.3301 13.3579 cv
86.4219 3.86914 li
82.0488 1.49512 75.9775 0 71.0176 0 cv
61.1587 0 54.043 6.24219 54.043 15.793 cv
54.043 24.9111 59.3296 26.9111 67.3608 29.0942 cv
70.1016 29.8452 75.1289 31.0278 75.1289 34.4629 cv
75.1289 37.772 71.9297 39.21 68.9258 39.21 cv
64.5537 39.21 60.7676 37.0239 57.5708 34.3389 cv
52.085 44.2051 li
57.1118 47.5771 63.1826 49.5771 69.3848 49.5771 cv
74.3457 49.5771 79.5039 48.2651 83.3545 45.1411 cv
87.2705 41.958 88.4443 37.1489 88.4443 32.4639 cv
88.4443 24.8491 83.1602 21.5381 76.3037 19.604 cv
f
96.0156 7.61475 mo
91.3164 12.2349 88.7695 18.417 88.7695 24.8486 cv
88.7695 31.8418 91.2471 37.9629 96.6689 42.6436 cv
101.757 47.0767 108.288 49.5767 115.143 49.5767 cv
119.124 49.5767 122.191 48.6367 126.436 47.3867 cv
126.436 46.8428 li
120.822 36.6196 li
119.102 37.3115 117.255 37.71 115.404 37.71 cv
107.439 37.71 102.087 32.3408 102.087 24.9106 cv
102.087 17.6079 107.374 11.8599 115.208 11.8599 cv
117.119 11.8599 118.995 12.2256 120.73 12.8955 cv
126.436 2.50879 li
126.436 2.36963 li
122.648 .870605 118.863 .000976563 114.749 .000976563 cv
107.828 .000976563 100.845 2.86865 96.0156 7.61475 cv
f
39.1611 48.3247 mo
38.6821 48.3848 52.7583 48.2246 52.7583 48.2246 cv
34.2793 1.34082 li
20.3843 1.29395 li
9.65527 27.6528 li
23.0044 27.4658 li
27.2861 14.9556 li
31.6992 28.2456 li
39.2832 30.0479 li
39.5063 31.0195 li
39.5063 31.0195 16.3779 27.6909 0 32.1235 cv
.078125 32.4917 li
.078125 32.4917 25.4961 28.8047 40.082 34.0957 cv
40.23 34.8188 li
40.23 34.8188 19.8569 31.0825 .807129 36.106 cv
.90918 36.5947 .92334 36.6646 .92334 36.6646 cv
.92334 36.6646 20.6514 32.4917 40.9282 37.8906 cv
40.9634 38.0649 li
41.1011 38.7358 li
41.1011 38.7358 25.937 35.0039 1.61914 40.0239 cv
1.7334 40.5767 li
1.7334 40.5767 3.18213 40.3799 4.64795 40.3315 cv
1.3623 48.3247 li
14.9399 48.3247 li
18.334 40.1445 li
18.334 40.1445 28.4653 38.7109 36.1699 40.4268 cv
f
140.678 11.6099 mo
140.678 19.478 li
155.105 19.478 li
155.105 29.8447 li
140.678 29.8447 li
140.678 37.9629 li
155.889 37.9629 li
155.889 48.3247 li
127.882 48.3247 li
127.882 1.24707 li
155.889 1.24707 li
155.889 11.6099 li
f
28.0874 69.939 mo
26.7832 69.939 li
26.7832 60.6733 li
24.3003 60.6733 li
24.3003 59.481 li
30.5693 59.481 li
30.5693 60.6733 li
28.0874 60.6733 li
28.0874 69.939 li
cp
1 .72 0 0 cmyk
f
31.5967 59.481 mo
37.2148 59.481 li
37.2148 60.6733 li
32.9009 60.6733 li
32.9009 63.6001 li
37.0898 63.6001 li
37.0898 64.7925 li
32.9009 64.7925 li
32.9009 68.7456 li
37.2148 68.7456 li
37.2148 69.939 li
31.5967 69.939 li
31.5967 59.481 li
cp
f
38.6992 58.9819 mo
46.5493 67.2065 li
46.5493 59.4819 li
47.853 59.4819 li
47.853 70.3696 li
40.0034 62.144 li
40.0034 69.939 li
38.6992 69.939 li
38.6992 58.9819 li
cp
f
49.5884 58.9819 mo
57.4395 67.2065 li
57.4395 59.4819 li
58.7422 59.4819 li
58.7422 70.3696 li
50.8926 62.144 li
50.8926 69.939 li
49.5884 69.939 li
49.5884 58.9819 li
cp
f
60.6021 59.481 mo
66.2192 59.481 li
66.2192 60.6733 li
61.9063 60.6733 li
61.9063 63.6001 li
66.0942 63.6001 li
66.0942 64.7925 li
61.9063 64.7925 li
61.9063 68.7456 li
66.2192 68.7456 li
66.2192 69.939 li
60.6021 69.939 li
60.6021 59.481 li
cp
f
72.4751 61.4644 mo
72.0859 60.812 71.5869 60.48 70.7959 60.48 cv
69.9639 60.48 69.0479 61.0483 69.0479 61.9634 cv
69.0479 62.7808 69.853 63.2124 70.5049 63.4614 cv
71.2539 63.7534 li
72.7393 64.3354 73.8481 65.1538 73.8481 66.9019 cv
73.8481 68.8013 72.377 70.1616 70.5049 70.1616 cv
68.813 70.1616 67.4961 68.9116 67.2729 67.2339 cv
68.5908 66.9575 li
68.5781 68.1089 69.4932 68.9409 70.6162 68.9409 cv
71.7402 68.9409 72.5439 67.9976 72.5439 66.9019 cv
72.5439 65.7769 71.6421 65.2925 70.7412 64.9185 cv
70.02 64.6128 li
68.8271 64.0991 67.7451 63.4204 67.7451 61.9634 cv
67.7451 60.271 69.2432 59.2583 70.8242 59.2583 cv
71.9902 59.2583 72.9473 59.8276 73.5151 60.8394 cv
72.4751 61.4644 li
cp
f
79.9238 61.4644 mo
79.5352 60.812 79.0361 60.48 78.2451 60.48 cv
77.4141 60.48 76.498 61.0483 76.498 61.9634 cv
76.498 62.7808 77.3027 63.2124 77.9551 63.4614 cv
78.7031 63.7534 li
80.1885 64.3354 81.2969 65.1538 81.2969 66.9019 cv
81.2969 68.8013 79.8262 70.1616 77.9551 70.1616 cv
76.2622 70.1616 74.9453 68.9116 74.7222 67.2339 cv
76.0405 66.9575 li
76.0273 68.1089 76.9424 68.9409 78.0654 68.9409 cv
79.1895 68.9409 79.9932 67.9976 79.9932 66.9019 cv
79.9932 65.7769 79.0918 65.2925 78.1904 64.9185 cv
77.4688 64.6128 li
76.2764 64.0991 75.1943 63.4204 75.1943 61.9634 cv
75.1943 60.271 76.6924 59.2583 78.2734 59.2583 cv
79.4395 59.2583 80.3965 59.8276 80.9648 60.8394 cv
79.9238 61.4644 li
cp
f
82.7266 59.481 mo
88.3438 59.481 li
88.3438 60.6733 li
84.0313 60.6733 li
84.0313 63.6001 li
88.2188 63.6001 li
88.2188 64.7925 li
84.0313 64.7925 li
84.0313 68.7456 li
88.3438 68.7456 li
88.3438 69.939 li
82.7266 69.939 li
82.7266 59.481 li
cp
f
89.9541 59.481 mo
95.5703 59.481 li
95.5703 60.6733 li
91.2578 60.6733 li
91.2578 63.6001 li
95.4453 63.6001 li
95.4453 64.7925 li
91.2578 64.7925 li
91.2578 68.7456 li
95.5703 68.7456 li
95.5703 69.939 li
89.9541 69.939 li
89.9541 59.481 li
cp
f
105.836 61.4644 mo
105.446 60.812 104.947 60.48 104.156 60.48 cv
103.324 60.48 102.409 61.0483 102.409 61.9634 cv
102.409 62.7808 103.214 63.2124 103.865 63.4614 cv
104.614 63.7534 li
106.1 64.3354 107.208 65.1538 107.208 66.9019 cv
107.208 68.8013 105.737 70.1616 103.865 70.1616 cv
102.174 70.1616 100.856 68.9116 100.635 67.2339 cv
101.951 66.9575 li
101.938 68.1089 102.854 68.9409 103.977 68.9409 cv
105.101 68.9409 105.904 67.9976 105.904 66.9019 cv
105.904 65.7769 105.002 65.2925 104.102 64.9185 cv
103.381 64.6128 li
102.188 64.0991 101.105 63.4204 101.105 61.9634 cv
101.105 60.271 102.604 59.2583 104.186 59.2583 cv
105.351 59.2583 106.308 59.8276 106.875 60.8394 cv
105.836 61.4644 li
cp
f
108.638 59.481 mo
114.255 59.481 li
114.255 60.6733 li
109.942 60.6733 li
109.942 63.6001 li
114.13 63.6001 li
114.13 64.7925 li
109.942 64.7925 li
109.942 68.7456 li
114.255 68.7456 li
114.255 69.939 li
108.638 69.939 li
108.638 59.481 li
cp
f
123.479 61.478 mo
122.73 60.812 121.704 60.4526 120.719 60.4526 cv
118.375 60.4526 116.585 62.4077 116.585 64.7241 cv
116.585 67.0122 118.361 68.9683 120.691 68.9683 cv
121.717 68.9683 122.703 68.5796 123.479 67.8862 cv
123.479 69.4263 li
122.674 69.897 121.648 70.1616 120.733 70.1616 cv
117.75 70.1616 115.282 67.7886 115.282 64.7651 cv
115.282 61.6714 117.764 59.2593 120.844 59.2593 cv
121.759 59.2593 122.689 59.481 123.479 59.9663 cv
123.479 61.478 li
cp
f
127.85 69.939 mo
126.545 69.939 li
126.545 60.6733 li
124.063 60.6733 li
124.063 59.481 li
130.331 59.481 li
130.331 60.6733 li
127.85 60.6733 li
127.85 69.939 li
cp
f
132.621 69.939 mo
131.316 69.939 li
131.316 59.48 li
132.621 59.48 li
132.621 69.939 li
cp
f
143.495 64.7104 mo
143.495 62.4067 141.774 60.48 139.319 60.48 cv
136.864 60.48 135.145 62.4067 135.145 64.7104 cv
135.145 67.0952 137.059 68.9399 139.319 68.9399 cv
141.581 68.9399 143.495 67.0952 143.495 64.7104 cv
144.799 64.7104 mo
144.799 67.8169 142.344 70.1616 139.319 70.1616 cv
136.297 70.1616 133.842 67.8169 133.842 64.7104 cv
133.842 61.7144 136.323 59.2593 139.319 59.2593 cv
142.315 59.2593 144.799 61.7144 144.799 64.7104 cv
f
145.938 58.9819 mo
153.788 67.2065 li
153.788 59.4819 li
155.091 59.4819 li
155.091 70.3696 li
147.241 62.144 li
147.241 69.939 li
145.938 69.939 li
145.938 58.9819 li
cp
f
75.1519 89.5972 mo
75.1519 85.3804 li
76.4561 85.3804 li
76.4561 95.8394 li
75.1519 95.8394 li
75.1519 90.8179 li
70.1729 90.8179 li
70.1729 95.8394 li
68.8687 95.8394 li
68.8687 85.3804 li
70.1729 85.3804 li
70.1729 89.5972 li
75.1519 89.5972 li
cp
f
78.8691 92.6069 mo
78.8691 93.8276 79.8545 94.8687 81.0898 94.8687 cv
82.3232 94.8687 83.3076 93.8276 83.3076 92.6069 cv
83.3076 91.3726 82.3232 90.3472 81.0898 90.3472 cv
79.8545 90.3472 78.8691 91.3726 78.8691 92.6069 cv
84.5576 92.6069 mo
84.5576 94.564 83.0303 96.0601 81.0898 96.0601 cv
79.1465 96.0601 77.6211 94.564 77.6211 92.6069 cv
77.6211 90.6519 79.1465 89.1538 81.0898 89.1538 cv
83.0303 89.1538 84.5576 90.6519 84.5576 92.6069 cv
f
86.999 95.8394 mo
85.75 95.8394 li
85.75 83.8003 li
86.999 83.8003 li
86.999 95.8394 li
cp
f
91.3818 90.8315 mo
91.2295 90.5132 90.9092 90.2632 90.5498 90.2632 cv
90.2021 90.2632 89.8691 90.5405 89.8691 90.9019 cv
89.8691 91.4702 90.6182 91.7202 91.3818 92.0659 cv
92.1445 92.4136 92.8789 92.8843 92.8789 93.9116 cv
92.8789 95.146 91.8535 96.0601 90.6465 96.0601 cv
89.7021 96.0601 88.7451 95.521 88.3994 94.605 cv
89.4678 94.1187 li
89.7314 94.605 90.0498 94.9507 90.6465 94.9507 cv
91.1738 94.9507 91.6299 94.5913 91.6299 94.0366 cv
91.6299 93.689 91.4639 93.5229 91.1738 93.3276 cv
89.9521 92.6772 li
89.2314 92.2886 88.7041 91.9272 88.7041 91.0405 cv
88.7041 89.9858 89.5645 89.1538 90.6182 89.1538 cv
91.4082 89.1538 92.0469 89.5835 92.3945 90.2905 cv
91.3818 90.8315 li
cp
f
95.5293 95.8394 mo
94.2803 95.8394 li
94.2803 90.5132 li
93.5996 90.5132 li
93.5996 89.3472 li
94.2803 89.3472 li
94.2803 86.8647 li
95.5293 86.8647 li
95.5293 89.3472 li
96.749 89.3472 li
96.749 90.5132 li
95.5293 90.5132 li
95.5293 95.8394 li
cp
f
98.0947 92.6069 mo
98.0947 93.8276 99.0791 94.8687 100.314 94.8687 cv
101.548 94.8687 102.532 93.8276 102.532 92.6069 cv
102.532 91.3726 101.548 90.3472 100.314 90.3472 cv
99.0791 90.3472 98.0947 91.3726 98.0947 92.6069 cv
103.782 92.6069 mo
103.782 94.564 102.255 96.0601 100.314 96.0601 cv
98.3711 96.0601 96.8467 94.564 96.8467 92.6069 cv
96.8467 90.6519 98.3711 89.1538 100.314 89.1538 cv
102.255 89.1538 103.782 90.6519 103.782 92.6069 cv
f
106.167 90.2222 mo
106.194 90.2222 li
106.583 89.5288 107.359 89.1538 108.15 89.1538 cv
109.981 89.1538 110.453 90.3882 110.453 91.9702 cv
110.453 95.8394 li
109.204 95.8394 li
109.204 92.1226 li
109.204 91.0132 109.053 90.2632 107.775 90.2632 cv
106.167 90.2632 106.167 91.6772 106.167 92.8569 cv
106.167 95.8394 li
104.92 95.8394 li
104.92 89.3472 li
106.167 89.3472 li
106.167 90.2222 li
cp
f
117.514 94.6733 mo
118.513 94.6733 li
119.719 94.6733 120.982 94.314 120.982 92.8296 cv
120.982 91.3589 119.484 91.0542 118.319 91.0542 cv
117.514 91.0542 li
117.514 94.6733 li
cp
117.514 90.0132 mo
117.847 90.0132 li
119.081 90.0132 120.094 89.7632 120.094 88.2651 cv
120.094 86.7964 119.095 86.5464 117.874 86.5464 cv
117.514 86.5464 li
117.514 90.0132 li
cp
116.21 85.3804 mo
117.487 85.3804 li
119.456 85.3804 121.315 85.894 121.315 88.2515 cv
121.315 89.0151 120.899 89.9038 120.191 90.2358 cv
120.191 90.2632 li
121.425 90.4858 122.285 91.6929 122.285 92.9116 cv
122.285 95.0073 120.496 95.8394 118.652 95.8394 cv
116.21 95.8394 li
116.21 85.3804 li
cp
f
124.936 90.4019 mo
124.977 90.4019 li
125.282 89.6382 125.92 89.1538 126.752 89.1538 cv
127.113 89.1538 127.473 89.2788 127.779 89.4722 cv
127.209 90.6108 li
126.988 90.4155 126.738 90.3472 126.447 90.3472 cv
125.102 90.3472 124.936 91.5952 124.936 92.6499 cv
124.936 95.8394 li
123.688 95.8394 li
123.688 89.3472 li
124.936 89.3472 li
124.936 90.4019 li
cp
f
133.383 92.5933 mo
133.383 91.3315 132.619 90.2632 131.275 90.2632 cv
129.985 90.2632 129.223 91.3862 129.223 92.5933 cv
129.223 93.814 129.956 94.9507 131.275 94.9507 cv
132.635 94.9507 133.383 93.8687 133.383 92.5933 cv
134.563 95.8394 mo
133.313 95.8394 li
133.313 94.8257 li
133.285 94.8257 li
132.786 95.562 132.01 96.0601 131.08 96.0601 cv
129.098 96.0601 127.974 94.4097 127.974 92.5522 cv
127.974 90.7769 129.153 89.1538 131.038 89.1538 cv
131.995 89.1538 132.773 89.6538 133.285 90.4292 cv
133.313 90.4292 li
133.313 89.3472 li
134.563 89.3472 li
134.563 95.8394 li
cp
f
137.434 90.2222 mo
137.461 90.2222 li
137.85 89.5288 138.626 89.1538 139.417 89.1538 cv
141.248 89.1538 141.72 90.3882 141.72 91.9702 cv
141.72 95.8394 li
140.471 95.8394 li
140.471 92.1226 li
140.471 91.0132 140.319 90.2632 139.042 90.2632 cv
137.434 90.2632 137.434 91.6772 137.434 92.8569 cv
137.434 95.8394 li
136.187 95.8394 li
136.187 89.3472 li
137.434 89.3472 li
137.434 90.2222 li
cp
f
148.212 91.1929 mo
147.713 90.6245 147.103 90.3179 146.354 90.3179 cv
145.133 90.3179 144.19 91.3999 144.19 92.5933 cv
144.19 93.9253 145.118 94.896 146.437 94.896 cv
147.157 94.896 147.74 94.564 148.212 94.0366 cv
148.212 95.6304 li
147.644 95.937 147.074 96.0601 146.423 96.0601 cv
144.509 96.0601 142.94 94.5913 142.94 92.6499 cv
142.94 90.6382 144.494 89.1538 146.491 89.1538 cv
147.074 89.1538 147.713 89.2925 148.212 89.5835 cv
148.212 91.1929 li
cp
f
150.807 83.8003 mo
150.807 90.2222 li
150.833 90.2222 li
151.222 89.5288 151.998 89.1538 152.789 89.1538 cv
154.62 89.1538 155.092 90.3882 155.092 91.9702 cv
155.092 95.8394 li
153.843 95.8394 li
153.843 92.1226 li
153.843 91.0132 153.691 90.2632 152.414 90.2632 cv
150.807 90.2632 150.807 91.6772 150.807 92.8569 cv
150.807 95.8394 li
149.559 95.8394 li
149.559 83.8003 li
150.807 83.8003 li
cp
f
2 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
155.078 76.9097 mo
.95166 76.9097 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Katie Linnell) ()%%Title: (Tennessee-Holston-65years.eps)%%CreationDate: 12/16/11 12:50 PM%%Canvassize: 16383%AI9_DataStream%Gb!Q;pO;D=dcc)[h>rcN3Z-<P+dc_0+:/@9hIn&8!edlR=l1=YZX8]&\`$"<GFrs.qLrO,,Yann`c=-3e((6QS.+u;J#2OpUcl`M%_l9"dS7$/.B4Z>B?`7-2P:8DKRKZV`1kOFNK8F+q@1UCW_,rgf7!BBDh:5;NZE2BMh>Uk\R#\*97G;)Ce"52FgB2PoD0'a\Z$1XV%mdnp':O?dd1I24o%(#EueSs<U>5`R>F4=PZ!C'*20pL5jh2WVoBCbZiUcVoUqXnj?g[C^5TZ[_QOEeg<)u\k2N?!'^QAqrL=tHR9%FBIrlGLa@?.bWKcgg9KCG(n,[WiQZ@g!0`\EJ@nrFp<A*=Su%n7erk=:@d<@I+o_O(X%)N3LiiN4i3`Oe(IND5!l#0E:%HeK"=Ol%ltfdkFL2!')n2/^N;@KQ*_]$ILc.p^(fPhtg*;:1[Xi*9&Ic_?0meES_UoM-_74VE)5jS_3q`LkpA[l4icKs>j`L#]Y[&>o$(\U%%Z8)8!K_TLCatVnA>e+."qt&BL\:c<H:FU>Mjg<V]VsUR15<j#rKP<2l:\m[%1u%UfIu/De3aMi=de4sR!AQpCrMMk-1kZ@ABDkDC%HA>!1@$sCoTe'nj;op-q98;hMOGP3"N5t<WoIZTOI77$?^oH%:R(e_Y!$hQ?4X'GZl\L%nkJP,TOq+]/1(!Lan)aAL-a?a)[3s'(%SlIHnqb,=$144b3jg%)_VM"ZWE%/V3R,DP.FO9qP+u!^A&K8P<Jr:0N_NdW=1b#l"D=hm#MPaSAs3%#6ZNS!4Cro'hn;=cA8Yt@Q%:nYQm,4HY1^stsYY!sVr.aQ#gjK<_I=s4$gi>#P8j3T7skBRCjQ%Con'XUH*IrKT]"g(ZOBEb$d'j;=Zd&Kom3su5%;CFdLSqj@/%+-4=q4:g%hT%l\&9ZB`F6[C"ZiD+\^'!XIU'jAGDi"]G3SENYg24+ug65u:(]Y_<1-HNkS-[:>`0I(fG8-D]k1<^#1@G^J`^VZM6%:P)<h5I?#f_(2nOH2*BI#=_I-9X%'l"L$l]1353s13PE2dQ<DXdYP=Ss.C+N%pf8LTcfa\\OItOn'DF(7k%-96LKR'_(0ncfb+(u%.iCAF!jBrXjp/)CMM+V.?:k1D,NSqC3TV>T1GV.GF_F557e&fW:.>a=-fZEL'$-;DU]p]%D.%OO1LYHG2jlP6$M/mOBLV\8k!sAW%mY+_U"1,<o.;)T4+daK;&FQDX9R2>4)iU;+$K2.<(R1d"mppMCl_Im>2]+QO#b;nP41(`q'BnM+Eh3+Q,:AXG\=(^6i.aMTnNXn*%P-gF"CecI^P%7EP8\@j/S+=82IrMm86WDJ[.T7lkFFXs#9Z#Tu2X"9-G\Onq0"EbXB(/$0-X&5Ur*rlM7=$?]^nSY0l(.aY3Faf7%MtBdD,nf:NoM5B3PN7'G8c)6is#?$DOl"3pI%G_PhT8!OZWJKf8FPVHWC4Hnn)PQ8rZh7ZBEt_oY2h\C7c)PjfOuEHj,9$:cR2=>%No^k@MsrsJY^DCfEEnAon\m2n%\MYqFL;6':`luDI$)\FHn7_SAeHXJInu:3(eJh!!e,p:aX?m+bHkk%>S=GVTZ:/&Wtk&,BHN.O%8M6k+c0QJ@'S_\2R\8]+^W/<U4c3jhOdVqN9>^?7R5`(cBobc80Yeg69Lb.M:8#p1Yt]6*DKJqg31%##*/").[D`hQ7^__Or\10N%T#\/o^maO!@-@4Od^knMc!]1MrGF@m9MnO.#^?lT2Gm2Ml.j6'P)+aY'^uKVO0,lYGH:-sr5dn9BLC;6)aQ+X%i`cX-)9BQpZV1Y%p75_0M3@M#Q+N0cTK]cd);S$LK)<ua42DiTD+X*1!kp(r60=R\ksJf!a?-qmkYLi70tl2qaTuV,qX_]D/n)n)jE'"&8W[e1.Ot<B%oAPj'[OgqK]pjd[!Tm'gO1DC6$[POZ("1G@6+9c"@U0#pj*99Q^ptn20jUP:YIqG!A*S7n:2SdeEK9oE#T1pa,T_FLpbICi:39Pg%9'Bf_abUt11kE9LPS'b-.`J.O$949bo.]`e+<;faNOc!\PW?OJlme>##a:2[g)/7&&`Z-rOB#$ggC3cpj"7.XCnb_\_b!/o>1+u>%<aL61P#Lmn%WEb6Oo^mWoFgi<HJ`glf`*XfGJ\-7#9FtbV3eF,_.&g4?'4oPg)I/cn?p3Gb`e0qg/p):U^.2sm!49W3>?`Bpq!%\%Vk[_#miZV2#0eTNYU.`G%Z(IDg[Lq;e)8nu6r,&fdDki1,1tOM</]?PN%ck)muH=(i+<tBaDI[LO*WqB]SEa,LBp6$c>gc`BlFsP%<[<[HR#+j;&5L.g9aPoIkHtHc.(*K7DH?c<A['M!BlaYToTc;l!F6N^G8^9-8mG6LJ\>blm=8at@`=ofn#"`/Ph,d5ie]+\=L9@u%Vb$`'64JSaS!2P1m<4k0FK]G**`O)U,`Yq)!@J0c'rQ`rXO4;.C4nMts.&";RuTn;@Z$t']mJ!g3ZDe1Er1j$*RiDo&OG`\jB(t9%&,A;Rd^,-FJOt6&%RmAU_:n56SFX!=`UH!?>Km$Lq&^uZ`k#Ia8+j6u5/$2SK\.6e!K7?!Zc'St6sjV%[n+4Gpifd",XsQ'ROpog%(uekI\)ce+(W%JT<s!W0]E:0SAXk7FmRcbN=i$Nam:fn3U7Km.RV2_#*;6-]TCPqt'#0<$n2X%GOImZk&-Imp1S`imR0,QX?(1i$%=8n>oWP7F)[aE0p?VeAgU3_!9O'!qZT]>"G6jmgt,%N%s=GoVPN+lOjrdg[>L"m)]4d[=%IlL6@8bNW`(?:QTJV-kB.!\T2>_D^)%X*B;l5*dH_i7b]L-V3l5U82@I,bC.u0)<[aJbT_"`.F=DI9d\Z*0UH$3&2+uNHL3hGp5C&j/eTkpJ]t/@C%0>3C8!XIC[s'\V9%.%i)/KB!f9JUq3%J<%jZJR]FKE=,&o@V/^>_m.R5<nU5YTb)C;Wq>QYI*Io2MDj(&eFb$o\l_rH^i9dko22<>d!S@2]GO<pmX\m)r^%NpL4PJj[Z2'&(AMC42$&*?cXQdXpN,r45rXb!.QRCfD;jh_.I`.;B$nVuaT[3)oB'P+[LXQV\"hQ=EdNEBJkaPg2YACP'N^.UsQ^%AMTQoYFT-^bXg&]Qf,3_5lV,[1^OY6[7HNs!qeYF\E">91Y;a=71N5[%CoM=:l"*EUFM]Ub76X-qSc@9lh-@O9rrqW%@$Z*?#-*O%J[$P]kilt/CJ*Bu+.9V3>pQ^0OriZ-!L=_l"]:+Wros<ZZtCTkY'i7[b]LcQ3Q'l#H!?gZ(\-?nfeL`":HO0J;5E,#d'XO(.-l(U%>J:EWi>3^Y;8&j69FAIF.\V1\`nJZ_e"_%EbNn>ip&AEcqXHN7^lgFSX$S_?W0*?%H,lA0URm.hN%!(Ak4D]go4q<gd0SQf4\T-2%DjnQZj@ds6lHu*b94;]WEQ`YlM31@;?K6mDqdV?L4D$=2+gRX_2T.]fKg,.3lggK>ef&nM/@C[F3%&u_6nQlQ"1Xh2irD/AmJtF$%,>md35;.8BniuWJaVlf,2sRHc(q+g$'WUZ?'m:!g8PWMBk/GtD]b5keAHXfrDl\A80bT0pOQ_86-.F]FILEe*'bN)H)221PLYW#h%f0%%TXJV/:LoeS4/1"(B;'N`hT\Yga8dMPDSBDYO`X=V`:hgZB==_bl!^r_8`31GdTm.]O1:^#+V\Yb*7,S@))X`o!8q&4o5N(Qf%/qA15!%Yo_mfGI"+llkcDTEqHELn!#!d#>T^h9;^=@M__BH)O\iL@=m">)oS@lRO[4aidNMaba6$ZHSp$Q1*jFTGj@(%+k,g.H-B%d#.6S+L2.(JP$[.0aVR]#"F75:<C0T^cg'jK\g6.NoVUacN$o7Gc?ZIp6j8>NA-'mZ"1!Di\;"9THh>Jdb'5s4T`>$>fTu=+\,(4%&$d,U;au-^iurb!a>]b.amHpJoR<GNcAY4aIhXZVE>$;[(]aofTB#W:d!_-j(uKqk8L#bD+TdM>T8=j<S,s9&nXHM-W2:&mWN_-[%dfHNNBb+5W6VUHCO0k)<+S_]',bGCoP]12XLbtkD")CL&UqkeCH6T^#?GM''Qr-KV0;GcZo9Ri030d#qn24lF%TA/,L2]35NYoqQ%hZb9"65u6SQC')(8^QVZB+@R6&nhY4+_t$W8^KA8RaWMnKc!"A+F2Xn6sHrt.*,&?:^ql+QjBW/__Qo:"tD)ogr9[>"_P^D<'(ZT%0ERB&R![aQPld7YPFK4h<`:9L-ZUNT[`0Uc,V_Jn3EhH^^QFZ=d7!*'&3S%0,jgg/A-JH]''hD]J<-h9,U[[rfIh,r>L7^2E(O6K%a@-LF=p3kX-7P>.K]n0;JW9n'%Q'q^+d/'tP7atHJOJOM:/+:R!Z`[?U/;2MTJb,&?uP8t`!Rtu.6iae&s!-uP`*'h]TOed(pkTV%U6MBuOqmU>f&rPonL07/Kl!Wj_i)_KB-*eKO;4WI&q%T'>E!6+O9F:#fE8GQ7Arbs-plsM7]5W>`b=K7k;G:l@?TfH>*rt+U.L$c%-,K2Gp6o)7il0sJdsM9>G<F/DqZFc\8[hNg,"\NU,0^n^/;)4i=<d^EAq0hDG8'9lGr*D!da%!B^B;H`]CVZ`>N-=e)TDT8YXcmb%pa%-ZYE[(@]M3FWAE=oC<Ns-Q2rM5;T'0!BisN=XUu=#*&e?lhU1W>-U+_2mHa.dV*@2,UDaE^J[5>PYcet*$i>'6Q\eE!>=@#hM%`i+Wfo-1c4X:\m^;'P\OX!X60+^6&+3]3'CR#9=nHSS4T(tP(1Pg[/I81Bo<i1._1OVH&DP%^:Y;?&tgYscLG)?dFb)7#(BVbQ,d%)2U9U+->SUjA.t[,/b!8Xb`TA^2Z`=CPgXN0]>bhY,$S,+aZZ;3P=c5pn))8/^?rqh?ilLa?.e6(cu85O][jd,qR'DbcB]Zmg!e<%jroI'f84tfT>6HfmNY:)9CrjME=us'WY!p8f*J+hDNJZcktfaie<_QZR+`D:1D-/cn-I#&[j[9p,#[=X*!D3lf3nT"#:/dW``PX9%gaNjT;BCMj#f\!U;YgQif9.lR):2`qLDQdhPV>RC',`ClOjt;DR;rr9d!:iD@''^l&IuYC#!?$#OCO7=(g4sg7CXV3!ddBf1Y*&?%Q;@4REIprI@1<&VW`-ip"@qWLf&N\;-)9`@_MW#!gi8ZSMNK=^kHY@OP)R6U;D1G+!$i33;$eUR&2_j^C`XnZ<A>7)7P<>&.XSBD%K60kNGTJgp!)UXsj8P6a`+4?1[Jj]JOfn$_blN8P=c&D!%D4B4OVYn(bmQ]9p<W9M$<0&7LCm^O=@81p#k<iZA.lk5V^P$G"VMg^%3^,n*RWp8HO(:rB<uu!1Ga`h!*\k^!#_GGWe6<Qi+F%q4848OP@=H(.'pT(KS%t5d2b>hYi)P`DL_UVD,@HB#8aoMh0>W5.+>\O$%\sc5]8@T;m+-2S2?rSfK!]T.A,7.JICHR,I\um@?H>jg(aA7@FM;`Rhp^OA=)5E;uMn)Y*71uPdLIjl^6tN/)Z<ea.0WYX+`:#!7%%Mk<tC4rlH;IYR")N^<th1;mVd"d"H(XLP](=<_7]glUlBK!.c:-Xq)!u\!Jkm4Y(7B4/9=Ws5B'm_GL<G3*rDCH2OJBXP%#(T.`%[$1ELZt_nh:%]`f`3==jj!QPneYiU4THf,T?ZA8_XsB/W\,bk&ej(&snaKtY,"DoSEIpUl/0;(6fRB`k2MB]bC^[IqV(iZ;@Y;Z0%fJ6(r\0<1f!\+TMjRDL=%nX(E0RKXM,ht^i&T<SHTb(.DK_L;),!A1<M<pBKnMg!#8Amsi.uesRO)_rS_'!-H@$G=k+shi%a$o";%(EhL+GQMr(;3AK/:cYgo0L]\Fnj.l"`t=nqGG$t4+Y0n=i->mU;JK&'%e1:"8[o^/+/<sG:gnmJ7*,oRH8jdi_DO_Bkc-K'->Kdg%CP&f\Fg.NI"E0H:8*N+K"7-fm*6HS??B`%B=A%3V)5T&<R17:0$2^/ZR)30CBZj>h<pF&gP=A1iA<+`TMFNp&<e>M5H6)n+B`;h2%d"L>K,Q#g'_VrgLin7^t'4]-i6>]bToS5VMKL;<,8Il/baf!#J#AV'k[)BI<T8ofOE_ZIjY;H+!eVr!Pj6uG<;q-+QJJ)SL'u#iY%YE)cK;L(H3c-@]/;k'9B9fmcMEt0MY"8d6(]AHn?lu(beku2(L>kWg;iQPd;L`a+hI64uqDT6&J]D::%ro\D&,Mc+D/PZ60O/FcO%=RhaOUh@G\cY)C5lf7]74h'J/7EDmq?g(*$iCJPPrFQ(DHhh7!O8G-t6A.qE.cHNIbi(Fj:kLs@kNAnbQb>DMN^^1p9-SK:BDa9e%s3Ko(Nc1:i:C)R'HP.6qHfF22s0uB3C],=$`W'K4L%]aR*6d0DY@1M5"-)VU:ZU4VN:lA31E?uB58$3&I]9g>b@,VMDu<`hq`dQs%!#qQJ8ImO"<]\ZBV`ut^k)$eAeXlFgbiKY%>;em"Z$2u\jf0sF0\2(0EWr&2Z2?EG05R?IAGZ$'J$Gp!j<dfYNmLf'Vf2=a6B0sM%%*_,Kb1Nn7QC^Ep0)`s_T<Q/a+9%od([/aqqWVpFe:)+]IV%k/o]sCHDYMMaKns>%Z.VK80qrlOOkCrce%m>4guiA.rBI&agT0l8%eSkYMcm<d`CSMF:W*169=D'=TFGSK\iCp4XDiacd,N(l;4#Xd-^qc$I[^AWCe@QZ]>5]!NFE9SuNfX`]'?7,IZ,gq!L&g":)[Qd+%j:W&+!:t\nT+N3rO#k(1Z-k#O&GP9L7)'sIJ8`=XTX$`\6bYcieukm`^?3BJ]DGr"isE::5Y?Dfm&ZM$A7PSbPag"Rs)10h!PYX8%pM2bVc2/1&L:)f^&SAt^n?VroH4@$gO!fk[^Y8:u#njBFJrZ?W7FT$*itZD=^Fs]_9orbGB#7(SMJrNkfKkt0DZMTQBm8(q=htM`%l2PDZeJ[@:HA*rp%5A+Ypoj04bi^?l]dNC>Ll&>Z-7mDkf^=^q<Z'_YWrK;rGO\VVr`u8thk\6>Ip&?_1ptWOs#rV?0A>@UJB^G*%AsFD:m;dctnfK]Qru\%YnbMp/YVlE8`F(DAG5p<>0n"jikdK@i)\CX7EW9b/Mk:+j8X`B9O-Ribq55SRNl?N*EO4?r4mXc8XNX4K%p^b\#S.*9p.nqA`eK5:8X=/.pjZbjZHRM+L)GI(c>p=Kjf)K!<#C0L@gA3u4!Oa(#]uG.On+Q;#GlMdDO%e%f4bTI,ZJ@m^d&uD"%m5U-DSre?(_HjIepu^b_IW)amYtL.lKd9`81@1_s.5^HT*4CbS%_V^K(S2i*TA/]'rh@079-KX*"s]j#S$dT0kfHZKq.VKO.VW)1%VFspip38!)H\.,cD`/"2#!hs[3uuYdM/qd&DRH"gDqg1]Im3e&^'Z'.T!H\r1Go*Mn7OVu\Z[l9EmpO"@h/gdK+/tC7R"'8K_UZl%3'!F<llLPDE'^4S0Ih>*1,n[2E>QL!j,mk?QiVC`4sIR$q5_2BaN'9EL]A!@s6;*P)5boT00@YV]P$]M;ik"8`H9&ZRfCpI2uEVY%g.T-<ZJ?CYLW_nt#XXM"\(HIl4ke)n]`SX)GeFO_&SUS6Bqb.aeT/*%MC?M)Q#W+1-<a)CCJP/8p7Q?-:M6nXKrN6bfqe$EmAt^i%mo*)@a't0uIbV)T:/`73/S.aQ7pm?P7hf0.end?b:DU8pdKnYnW8h:snY?B,b3:XL9Y7&K6M>r2o+BkG6&j(eilcujVDFFUlOHF;%Lok5LB#L83X7;R?n?+u_+Md4+3nH+[:JkD>a28dH&!>qf&EX2\SqZ\T1WluO^\[O>Ugk5,\<5[!n1l%[qY%mK4rmKV$.#dj3D\LX%N_pMcX5@3W3Hs3;p8"a?I'!mE8;+?mT$f#GqVt1pM(hr!G2$NRPREl`ctSEXg7OuRjXoS\Rh0O*YOiGOI<Ra@om?!,ZA5T[9>tI6%B7sDLdZrDgW"%KSo`b[\So[i#F'(':\;:4tdYekLm3W9&m7\io#of%4UX8bB'1?(68kV0JFecoh39q]UO,TReH*t\&5oS=6V"t9F%91ZJr.OD683q"<3/c%/p\_?>PN<?.M)+_*mdSWQo[pT>HNTjp+JX&d<`'l`dJBSV@6o$IqCBQ5>]GC]r^X\Nl_Eds7'/;AN&^;*&%,@[./Mld;t\6Hd=d!jm@TWSiQo^"7!`r1&Y`FJq+25Y0`#9e9e3?/uG+1:o1[k"l!WW>G8In4uAD-A1(=Th=-P`eME$>D=d`:SI?%I0EL!L9Xj@K098J1CIbW'@qomK_CR=C#tph&(!)'=<>tnB,N\FPB]T"9ErQWc=Z\+&.[e-N_sb,XlXRQf[`G7C><h^"f,RmM&SB#%0qP<XesgiVmGHC=cUE=tf'H&[9N*&*qMX<?,4fi_3)`cr*?iEYJqtAgAAPKUHdN]`J(c^=VPMIAa'hq@HospQI=fu2&u#P^TgDE"%Da8W_/*M7:U"ObK$VokP3$H:P!3"j(dT0`(q>Vk<&9Y&,F>6b1dNBe,MT.Vnc[oL>g\ms5[b9SO'LZ@OndhgY&AE_:O@2kppE61^%LJ*a3Jo",En"D1nC9[$0FHl4?_8HeF>r$+PQgIs1Bo:a":4']/5V?r1:tG(YH'5-4$]RS,@A0es:KV9^<ts@L"e+HrI$CD7cr_9q%Ksn9a>A,T1[?d+[c>g8U,Bl$V?Oc)kF0Z5J`j>L(FCHN`1Lr>),sXM%@E]LF+OZ\9d8*S;=Z!bAnmA`]>cj0.UnuU^?q#@7G(T-c%Y5-N"m78@p%hUl2$Af:/;$f1V;9WLCh_XtI8C5ocq(jd&K2TVOnr('jRKuEL9('u<nc`bQ=F\0PVH>uK.T7U$QIRk<njK`%3D`6M%p$A56p>UJp(C\nl`M*/TGK%?m.s.5OQ0p.*IiXa"#U][)7i7,gBc91W&_4?<o7=Hs6#HUa7FBhk(+?QW;copa%."dE1`LZ=(iUm@%e"&%K:l<sXLLW&CV/%+fYcH!D%9?PBAnFe<Wn*8g##gUOZcut0TsKViCT]CL(WV9AXYYXga0<[]5A3\M6sX)UI(Y;URrK9%DOV,=%S+*(h^Y1*Mm4Sk^e;U=R8NA*(]IK]n'j2G<h20oC6R=jcFU`^,ggFPEFkiY!1(9Z^,T,?T/AOYXY9mOJ$3@VR:F9!p+!cp>3SI:F%lcVY1*2slFe;Da"BjI=>Hf-=4dKG_K<7sJ,A-.VK%C-:t"LHIf#3d;`0b,5a,dt9oj_2bAk/.YOQNed8.GJMX:2n&_*-mMpLGD#i%aBL*KO3qQ'HAe1Q3Us645?V#[Q=0X`,#8\C/5H5:O?Gf&n4Ki><A-)*DIpdk$eS;WT;t-r&#n^BoG)),f/RU.kL1N+Nk_L`;-rBC%lDP<<Wsm]')XSFt_]NTul?bH/orZ(g2F_XOE_WUPM-s)QL-rYE:8SuZ`EL!(Z[(-?fYU#i;8+/pJh/fDM%q4-8[+2b;+VjfPL`.n%c)N@tD/!/el`1%UrPFB`\ht*A!AX?`=gdnCe<jDD/?J5,9phsXKkT5mj@H&&dcEh+3BNf*OrRT8"^`C+dDL6lo,cnPiTIF02oh3o%9<BA^WgZlH9KN;\a-o2Fc2@VL?*JqE3jF:"XDB5]9d:b0BIXYnh9Y7o`/]p`5r,Zmg6mqgC.($8=L$#N5?"'qa=B'E<\:!ZBNo"F%Td8c]E=SPJDCgo-DpJmP"$2;$I/%ahGnPN1?c!=ueO0/lI+XNF)^oYjXFORL>>PW,;-K0]\oak&S@<,e)?C]h(3JLR?&dM[0@.o-%NhNlE@s>@1$gMiT&r$$9X^ogqBSh>ga:XKS8?%sS<)`d&Q3]/c'%+ooXK@n_9o!('X#Mf1VR6BTRWoPDMrg$O-X7Mn0k+e:KV+/_%h<cbIGqXaZD9DQNQj^*6/oj<g/i^>k#Uup6>9G.=XnK%R*kcDA'P,M1$b5YLi:Luh")l=;^K*K9R<<1l+o>f*o(V6Ih_$2@ljMb\%EVnX#rJ>sMrX6g$T%N/%":V`P]mu`/_W;spmV*!]OaI7%oVr&fB=bCpO<\@-DGD9u!C;IC$+N8?`FhP,7t*Pb9Y>M"VJKU7!CXD8%+6%OJD'-7e_#>4IeI]u^$aj)Z^L2<LP9O<cPJE::-4$Y&1qMqLeGX>p?VO!d/fM)J3o0UNVMI<VM*MdIctIKPg+eebTgWj"B[=a8%Y@1el#(US7IRZU[g`lXBd'h@$X+,t>4%),`;f3idjbGZXjVijEo44rTLRH'!kh5Y!ZS-BLl8iWDpb*i3f7A<e?N0am%jm;EhVi[j%$H%%+E>3=k9(Bf@Y#WbR7aKMj(Y<59^?R'?&pp$gL83-`L055*MZZ1bPWO-uH?0u(Clqq$foXIH4/k7&[*ciJ5H*AeEg^UU;&Gm:%]>\1)2-B1EepBg`-&T>kSTlV;Mr1`6kYo:CrCgu71u78[0,m,\n\s_>IK"T[]!j\XT?K_o'A-/+opN>%H%+_@L#AMNVt,#qf3Dq+%^ZNt&i/b)*GHQ17\bBfZ@V#!N8Dt:J?ge[(EGk]9rlfjD$X\agYQ>gea2Mr+p7'6q\aBbD1uq*aD=BGPT8nDZkIkq,5*5\+iYmBc%#oUWJ]=5(+;r;J"\($Dn\-lZkpQH$KN#_`c=8i_;Y2F'bL&T5a]t69%3pChB,PX+fPs/tjUusEFC+&/]UQ>':m@oph43q/_\aO+K%eJcKC0RcgcjPgQmAO!_Pc#JrMlc43qGnNaI]UTHFM9t6<_Tf^U@G`IR(*RjZ(Q1A.[Y1]R\;r>WoWSmA,Pm-J:Yc&$5<homJ&i$>%CX-2D4EGaSnu#q)7$mN.pgH'XR(iAOGJ3/rgGsZ#@'^LoRSYp14Tpp1a7&%I'>RO)5Ou_p!c-ZcC/"Eqn?NmGB9%7mmqE9F`8SQP%L4YoIS4r,(4GlB#Z@#.:PdrGI8b7PKoKe#4O6el9h$:rdc'J9DnSE.o^pu\SSFjP!hCp7p!@)j@q3]M:C6ZIE#Oj2P+RD;*Kgu"h%r[m9R(Z-sIOUaC0`h28J?*7?.p(]eZe_a9:m5iD140=uOh>,FWXpb&OnZstJc2GAR#<$3YqUg0CaF&m>SkAH[hd&GB^g6QNn,)jr%n2h[Pq>>4BpqipfN"DBT80i)";lRNBj7fIo?.Z_h^?Ff]$#V/c$1B,(05&*?hq;<4QV8eH:UY<lc/euX]ND>fVl%>4$kJR6%s%sZ%eNf:=?!,gNV5Ko+^j]h>M@BNJMdR=AHt<!riXW0LQ_1/3e?i+_<_cah#f8T7?],Z=&t4^u:D^DopO3^o*0]p;:-NpsB/RabRH>1K%3I8l1JLJnX?eqUU]_cs9.=B*Q7jVLoa@i%\"Q48,)Q$Bs!Jfg!;#MB/W?$9lK<N]IERJ^[Eeu1;?;6&uAULD+I8DO"r10&f8Q)=4%[:"&rc-)[hBp`_:R'/Z5ZposXb1`+&';%g/8h@lGUR1;:Z`NbiqY5^s`h$:>[ep`A3Mh"p=`lt);DFKY`rjq;=Q'D#Prh4uZl&Y,%H1Tq:hG8S_\XRWaYD4>*U?WBmbY%m!(!@[('$oA#kEcS4p3N6iqeBJ+>C)1!Y"B[nG5=Y7@-R*Q6<-#1T_dB$n@?C"""<r*@OM"p%caB;!KsKMhGM@Kd-bm]Q%+]*T+[E_3f;BEY-9lOsL4#j<G0>")e#g)2`sK$t11_J<3ieG@o_2[t1odU4PMOF#!"H-h=M(1&n=?(&%5*<kQ*ldd0ebGPJHs@A=X"!H]Q`1[NW6*(#dK6i:I/%FKc8AYIW,rb57X>LAn<9>ce&R,FEqp,,B$ROeP=2/!5%H:3cT.lfr[FP-%?Cn-NHQ;j'nT^KhT,t<%[rtOG>Bl7MGG&:'/_e.%<VN.ODu<(s4K1BP8%>%35i<2]1ENqc]1&@+Mkl3VGXcukLBih"E,[Hp75YA(%i5Ic17_PNM)DWQT*/9'b!54J.@Yc]d:VK,D'7f%EiEkG[22]<qX#mFp"Pb,EGV7<TZF_cUf,<):FbX4o3B8R/p[5L1`F@t!L&utQ%-eB)eo#=7g7D1)UV+oZ<$)&PqfF.!n;e2SQ$I,3L'Mf'XOET&R_Cq9tT]bu&kfh!Q8am/0-ON_\WqZp;!Hc^t$j3q_En'0VP#u99%=ni'jU4k-R=,[HC%b[AGYpN@'Doh&l+Ag"DHIh:$Tg'-BE\oNp-.@:f.QR`XUsk)MQ5>B]8u`NZ!CY?U@7!Ud"G)6\5QKk=MS&^3%FFibIU=ti=0ZkKYe0H(K#qt+%`,JQ*M@D:3K]us)@7c3f4n3=a#u:i(6"]D.;7_3_Y'F*>n2XRbM*1`4<c0Thg]Z<Q6&koSHqa,A%D\-&+VVarmWO36V+jZuEb2"/J#)2$jH`kj=r>lVN-?CPDbIW-^,Bl4spGe[/Z'[;>_#l8!!hM4-qUNnT09V;n6sIlDm`soh'u!_X%:W7)A2_Ue"rk6Y6:5[Z6`nS.Y4P4ZA-`l[RLLZ,3'f1<b"?uU[qJ,60o8J:J]32-!Dhdh&59#^'NT#7t;!`O%(!3od:[)>ROq8j_%@5#`<=m.2V,#Dq[Z#+7":Hs\_[KbY5MJ`eq6^P88*/k8N9#t4t4m`lP=9qX:;q`rcYn3?0?D#<4!LOc3R2*!qgIR2uP2kK5,1*"E%*!uVl_aPWYYnEWR;#c#6(-%DQnPnVH=O"llVuogCJ!56Qk&6cn9C*-E(ZfU&"&JJi"LEM7?4@[r^CtGjD()[i`!PYj-C)O*\CT`D%>?/W083.&u8d!HK.L85En[MX7J9$)Y+$='%+.f*!rVuPAp90D9OgC+elQu^*N@t(g?^>=0SQ*aU'"q1pXm#s;)&L[SAZdc5q9[rM%hf/>`m$c2,*%<%/D0l'b=ehoed*Fn8%LZVsN\h[Dq`CYRCCj3!Lh&_7](D[]V#D5H"XFP._-;B,SiWYT,-s)ihTqPi10l;;jER9B%P[8qcPQ_$[l943$P806QesZA+'$g%iKq=KbDXAWt;pWuscf<?:0[S@FPInA?gd/#90AM%I"<:3uRD`dhWACqbE*Q^SpZJQJ"fYJo%^$hP0:6?jugjK+OMP`&qcYs+:bh:)C7!Ags1K?E$_7lN&/,ABYc\28!KgS.Yk;P#9;@SEuRaL$NOMe>*ae,%E>Z>sO`udb8l5mo'%rn[c\Vd#aBpGflpVNG,\o/=_HhtW5\?bXMk)8FZ[k&Zr6?;"[*!l^).pOhtf3la3P=jg34?Ni-!d`]Y@@r)/h%q?s$&LlsX/A8??%JFoR4E;E]S/r"Ae.Kl?*s%rPDW$#9"nmu3I*6</!l&CA>L$BL68V`Li.jY"`a81t"5)+E;N2P4,?Es6gnl+[l+.tUlN%#MlLVt#5%VN,JS,Q^O1m/Ai-mXH5N"[#fMU&6lp)b*(3'C9npS>=3+<q<ZjroSStK-*'n^\KgtBX,9>^-c'_IcNna8=bCX)3d1UVkMOo_&E1g%a6nPmXppJjPdnJu23bP=ZqP!SV1.[r](:r0P7pbPT:Ss4a1Q@gGNoC3^\];H"bc:gLUkW3laV3=1ORKgmN-u8NOM+0DOWg2ac!M'%R`LQ,]t)ou+U7$b<'5Z5H,81D`D)G;c8;m4T55Pj2>Hp`j2^.,_H22V4Rs:Ag`ACtDFE0uT#AE)69LAk3;G[OHtd[@77Qom;=]"m%T5sN-[$n\khf<p2bGEj4%?YnnLbEO+MYQbIAh]mfjDls;cfL)c6F<pU6[SY-q3`;8DD%&EkNDX"A&YK+2+>-EcfR?8SNae*27iB+%Y.?"4W[9+l2pVcmdF)*KP@;QtI0q4D(^kDE)#me==aFB#m[IsY2(gpp+Brm^73%`%pd;T2<Ob+hnV48o0m>`)\,#b6&NTS9o*tq#%9G!olIV*Z\"V;+]"He(4j7-(I[ur2#CGEp;(5Va/kU:m<5,O%m_,1UqG4_5mAC%/W49Ta,VRrFCB;s)#:mejiQ`@T[r(QO($R<j)%F7VY3"ZeZa-!kq"`R!%(W:\SH*induqOY<faR6f+Emq4-0>a*>=[[H?IsmF`Ns9`M0&r,]Bfr-/+K5rSC3#0\/Tr)jMk;p9A<D_K%&4Tkaj9sc/J1osf\!<`;n2ZgBNB$;PSG,*hf0"!CRGq+&)Pi3#%s$q3rZIPtc/3MIEkRePlg\Ff+YKdE=e.!]o9<',jmhGn0:O@k%OF?qQ3dDDG'g[__["("3%H<E:j4rI'F!ZI0NF/cE_:r9=QbN;;addGEdYo:;PCg%2,)Y\>a4:gpIus>%T\hU:IJ)J].'!/A3BAYA%X((1-YpfH1Hn")9EjcN455s\oY-YBUI^qI(k%jSlT$g3_NV$K*M-RH#W;,&9UL9/Yr/jS/q;V(Bm,T2;h#-YY=o=f8K,P/f6<80c%J[M$R^@6C`Oi0bG?beZm5U)N(=T$RapQ/fnUT\,elg,i4,8DRdf^@SE63MYP]?biu&6ur"Nd)uG1N*gSXF*nG86:'\?FM:"S"JI\%YGhBD?&/"`'P<tsEgc:\:bI[U%76\5+W2&`L&WTnD+.*&/5X"\71ikp"ZO:#IH0"XVG0,0CQhXT2F0J2JfYA3\[Y&fP".?RXE.>.%e#hF6_L+5?#JuJ5-YAISoL4ifD&tbi8ZIC0$!m0??VJ0i9-hI#$-08_r!d,8&#Rj)SB$Mtb3YHQp.rMuM\AQ05N]t1iDB"rI&@cV%(Gb>"X7Mc%-ZV^:PRnTcj06%Tn?,#`gnk1GRCP:UGm`Q:iaME<na&UX^e6d:1Y\HuLWR'e*kVJ-:+gMGFrsa2%UlVsiGPR$A^Q#+%gS:@gBI/[BDI7?9a//2ir"VXUN]CH=hH&.O`c'tIL'-P$c_'6-'XiM3-!s3\"1U`;]+i3%7_KZ6'IWW$hmLX_&GR"pC6uV%@TYc[%4nCtASo%6-n,$@%b^8D7\/JI:?g^14Ig]>Se-@l[^?ji.,q2?[/R_8LmMjIs6mu-1iF+bl34-%)s#pq3OcGB]F,>Z<M+a-N93D$#%nEu4M>p8#"=e,-5a$47_[iTh@g#!n<7=n8ulh6UtElB=dZ[p=G@"nK"e#jg#Dp"StY534IlCE6Z+k[mq_D#R?Rkt$_:,S-Jh;J+a%!&8b/ea/^qD]B"q(_7/_>U&mPB9>EA\`=\.*2:Wl4-B8hRBtCK*P?I85k"an_RPK:O?&d%o?gF=(Vab!hB`hJKhC=i\T\#cej1p0%'6u*/X-j'0YulDno#LP!E@H,&g-T[iil9$Crnf?VnkUK@F$F<mm5T9m:r;UTgqrZ%:omtk&DJ;hB3GY-Y1hL"'$^1$`9'H>$`Cs0%/:N]NY?ltRm'!mOU*/nXTAdB`2i@H'<)$=>$$pD2";UT>he=]_:rI\ccp1nFM+2EP6/MD'kUdo'2q,HH\!^j_hKjVj#WKp;:Ce+,%QXsLGk)gulDk.XCn[eRKh%hU_)[.SfAeYnF:2C+U%o0(n)%,.D_RJ=UUbc,/\kN4qNW$[O:q"D2!VR!`YAYqE^dfbMCH!d..cIXZ%Y1ZE(-/>=d\aLH*q9Q_uAI2K<\47l\`[j(rF#B0C6nu"<Y"Z1c*JV-Cs'mq4-2m!,ms'ZNJn7r(M"EAsM'I7i-0.b]]A.P:!m@Em%8&,5-(t-Y01(O9GPP4tI)b$s(d^PDnV5D/YgV[)#.@e2K7e;[clh^E]cnI?V72IlN=e8;[h7+hu^[uc*M95RQ%jH"92YmX2rCc"$%f_Oa1'R3:]o$R>*5Xt_2Rt&42M[OJ$\(X#-7Bs*:"]q+rZ9JqYpCt_B-TsLB^()4qAW.tQ_-oL43Bqg4+ub4Z>VAo9*uF?F-D+^b%?4M7)24m9YWB^3VZM?$Ai,MUM$mGV/Prd/f9[\lWStEf<W:Y&GRV#*^;E1QU0lhs3.<@-+;Z#M/cV;\)FoK;Wb(;=['JCGuN&3X(%qu,pCr46nf:Hu3IBJ+^>E"N\_$/4Bj)'J2h2p[+;G`h1Sj6=H_93[<`WHV_6d[*9ukOTo9C+`-7C^#B)*RBaDXjZf<C2f5CA2LS!%jQ2#4>k>#.KJEIE<\0bNiScciCV3A[@5$W\r8A9OKX,DhhFcMjm$;fRP"g,hUkC12VLG%q*.n*nj_KQWdRb"mdg'7_+?>\eb/rj)%)r;D[s$_"4ShD&[8GLKu3[#j2]CbpE^6TB+`'uOAl%jTC7f7omS4(Ykb<5>Xb+m,<m:dM+L9,WbopssZ^Drh9jjXkJ\Sc7ZLG(a3%3':8<.>Rq=Lb=+'"s(EX]&E-c4qo"<k)s:BViP`NIEYRXgdDtF!ZAXQE>1RJrl@S"a[d&LpWjMuQXN(BXtl::I_k0:ca0Mic9JqP%aAl/sCpK57&+\2IkZqp%o#)67pr=_2b+3^na>94i]gRluI"d+F(A1aelV3^>-lAq[NY'4])V#Vpq8o@f3q8guTkK'P6Q4W%aY3,8%\*<+DkoGP!cdrf^q(&em+P=f$03`T>j,%9W'M$!d,$BpQIo!f+fCBd7rE*$BqD*Q6I(@Ym[%)B!V9e%NR[q/5>p2F=eZI>8Hrqs^%[6)Vmh"*te3S3]+*e&qeY\C;jWQcl7]5[R!"$3!m^>*SW@nF;]ki2c_1YtdL:(R+@Z@>A8P?hnIQ/S5,7@d36LX(3uj7GD2@*47#%/ZD[][oMe'*6>\942D.r"M]>nj$KYdQV3%haN8JX_jquXm$*_kI70V'b$J==\"7`B#+qZgQN\Jr1ceoPV7-l:gM(JOIB\qsPrP1R%gRc/#47@8Pjh(&>.j!+)FMYX[oK')sN(oodVqQ4:*4Qff`:7*5e+r8Rm.@g6SmSldAb]4R.s6_q;,[(cEAp,0mPOe8b4)U">KrQW%n;@tC.!4(fl4c\=AcM$fB<Lbl=+?=DesWK^1geJl8'n5Z%D=^5pFMGJ>bXt,1Rh<+f30Bu.!5;&E2u$Z2eo*LdV7rW`%,HrP[eIS%V3k;]2Ws(mo".GO%WC@:>BQj1hYC!We(j0#_!,t;lsUgsrW79N4JkGa2=ON2p&.P.:)iY7-b>jT]i6WT>+L9-O$4AI44cht'>Xp]%_c:3nkp82K]rQjb\t-:PU%0%EC3+.6[E@:L+uu2hcTHDipE,o;VtXgEY?%Pl-UYB3n(dJ?#Ji&jk4Q=MdI-YlHLUl0b]l!,I9d%q%E2R)Nf&um.pDlK^FilN/2np6t:9S`1q(oK.W&fV@%WkqO%`EK$S?+^<YF$6m[!f/0.u!,%^:JfS6DqOTTt*?Ln[tuQhN:e2N_ej'%\UJdAO+^7u.BgnB*&Ep_1#+5Db.9+G:4r/Wi8P;/%7m%a?3CF/$T_T(j#lT`[ocR_0@LX"oZUV3X3g1jphL]1oQ?S9:nZFhnsr`T%02O=#gX*M]CkVtJg@7,eP[CCOSIa%/6Ds(;TQ6op<o/+l_4='@>.#::'RCpD4a^SS3mVs4PZ^BC<U0A;@<lpS3b?pMo:5,?>!?RE%UO>"l6ot.K<I;:']Y8,B1<fQPDlIg.Pmt2=og>j^L]Y6HiQNAYiMr2uWH9KW"Fh,?lYC<X;#-PW;l4\[1/D/i<ar)0,5!J0AMTd(%8nd+1IdG-]hj85&XtEMMk8/m]mAj7Le`Nt/I'Js^p%\Da0"Z/g>ciJ+dtt\ek1/PC;j^`deusY0)KR1P19c3bIb\[&Qa/YR1[_kA%k!#]S.UoKFpYI":LO#H&/,o90]_S:Mooe@M:H];Np=63JA<FVCmj4UOonW".a<JRf>lFJh#"JQep=748HMk2l+STVYm+(taEqfFd%n%X'G+)5%t5Hq$jrWKE[Z2VWU^HB$oCZ#*4]RIE*cOVk93q%!5GAbIORF]par:Ks-k)AA=ghsVC>eeSHc`_9X5B(a>$-g$TT7u=U%<Re[mqFJ63cA^cc?X:Pd\pir7k3fp"l0do^PF77>h[D$7CoVOJNO9R$q5>+Jcn(k*R`Qc^LUVRBG5.!)pC@5Z)i?0'HVK:mfs?9+%Fbi6iN^37Xq*GUe"M$+23ZXpA1ig)jWTVW>EoKFEked`44#fk/b_Y'rL5)TH&+]3"8grI$.J;j$J9@F6"%'551mOQglsU%Hs2>KT%Fui.&,IuWsG8p4fk]_?g^BJ^@Ab^ZN>,TjE+c;F0Oct!g>=GHND[)bu*ARLfbN8PpfP(K$$X's\b2I8dog1_lO-L!"Q$4-`*6HTT%PIm*&g,hJ^PWD7HS;^ZR;R\+Y"1QO^4,lEfl?@Qi%iC""._E[)K2/<mRRFDJ8$CCMDPuEPQ^P5K>d6engF;nB/Nrb&V+ukkTq(HE%Z&5Pi5Op[Np\9q;LoXP%;S284^.S*A=rpq@3\7Y-YMMcERC7W+Mq[a^i_1Z0k\e/iQ_,n5#kt)i"n;Q;0k)PC7>W[)h]a%IqLt7l%7[Cd)q&tPEU]+K.4OoLTH?;:dKQ4J>o4Xf]Bm/Y,2:YhSe9sOQeLruBj\Y<ZX%IF>fcDuAk@3)5s5p"PKRf06?8c#.b$L0APl,AA%OX4dJ5Q7KRK^"B)$T)DV,3F",(LRG9THT9\>+@n+QgI0j1'Gbh?>e<@f42$i.kg<$bDZ@m(90["L'3E^If)P%8b+_UMSq!C0oEr_%>]"&4FSp/0O3'9AG8@@4[,u"Bb%HN;g(-V($;0rKSD?%Uc04?*'_hjk+lKWu)5>NMG`@hsSUT\?"O1L&A/PBZdq<indfR-SaC7>=%^CO@*9B%H6@rfk`L>,5$b!qcM_g=r6jIJ$_=W$2TAqV_#l?W"te>fG=;OGQf&8/1G4Z92e2;Usadd*VYJr"(bYZs=,S2*g</A5:A%%EF*D],t@Nj[n&]gm'"6Y%jqQIAul&:+^L.;QXdm25M$4W.$``8+eU!+h`F\rUtS2R['D`'XR?Mj&p)sd7=41BdQM#Un_?j0?'SN%_h_d#i,bc&%j!6LFZGkqjd0>5(,;Go*F_4]mO(.JI3UM,?cL2O"(6i@ZNXajTTIYPEj44,4&sI0qk3Xu610].%WcZ[(E;VcdU2R/%(P,WGM)JR[+pV<4"A_T\:j<SZ+AQB]n4*<519AY<Ts(Ha<&H;Pam!0'Og2Z;r[Du`4\:.[Xl4u58YT<[b)VW@'hQd.Xgt..[AnPq%i/cDo]T-DUo,/:UfIJJ[Wm!$IS/]n#P[&(n4_`)')LTS6N%C?'aE0tP!s;aVNQ6WDL\gm/e/M:\OF=/De91!Y-2YDs)>a7<$C\MI%f',+09iZjenh._(Y'.p3>W/K[?tOD6dC9m+iY\%(cYl!=afF.u`fup87uSlSg;XsC10XgTZ2'0qJ22)GJ>e\jpPu)Ti]KGaB:1X)%*&<:M>E94C]'cuN\`R:8q[+'\,een1%P$i2.UV!S:aW6Rl]bYG3@3GdOne(kYo`T^g^(XU)Ks9r+00)YS[i8IP#BYj(COb/$Lq't%+eFkZ:s?:sQ%>l^bH5_m-MDO(1e's+PXj1jjWE?SS&OH!8Q/<&/,#'PV"#Z)XZX#Y/hT*K5UWON:0)V_)lO8f!C:/HJaSV9cA`%9%V#h3R9I=f;kBg),BR\!k`r!@=4%nI9)Pc)"&a@92j==?TB.,lfH*33V?$qA#_c0/L+(a[@@UG(8SU*$dpGqg_5'XHMT/L`t(7/&j%>W;!]U*N!)C^4Lqj=93MFK#mlcsu$mQ%c0k4M,^/(3$qqM,>l+q8l.HUXAblf.nV6UGO5'b^s:3.G5*NJ#AgLH("keE*H%TJEGHA%65OELH&M=7cNVd)N:(OXSXbA`$!jV`jQLD,=h;[Ol8NGm0tM&7]tDZMaar[;CCk[]nhj$7QK_+4VEsH=_q&?fkt5%-Y-\i;2Q$^k%>+e1Xk&<uK;1FO`7t47UbS+%8DH9c+_2'i^gW0r'DtY;,<OE:kK$Vn)%XaPC=)OLeNh!MI&IT8X)0:+(Ab<E/!4+0?7:kqr6]?#j%d'diWFF76,:1?"@,l4gb+&eUhO5$Sf^O^"icnLbIA#WCI1/btNY>7FS4eS88g8_+%HkcVh=cjN;A&e=F!64B*P7(KRj]4J6.]/Yc%acijsRDVl+OrK?L=qeqqG*YB%j[G`HQg*R*i,!*$AF[A<0]`Z#7Rg@^5):e2A"jG^iO=6;0]7(aQ,2-7nH*4N>P-<Mj3r&n*h!jA%.<@^j:9F:re7`.tNRlfgUZl>\ODO8LUFet#eS=Ck]EU(g73?7p/Zp2s0QqY9WIR<g`keg`hpTqd>KD8/F,d&^]>/B/f4_;bXM&(&%n%)/)3MsQ-KeWDVF>I.Q$A+g&\e2;Yktp,)&Ud;\-nZ26B>(<>>uimJ=P.]fE2OXG>@3O`jO@)5@Kq9;22d!%U1COql`/XYg#fmg%eAD.JqMj4!4$+jpjhPM'_jJ;<4)u:"#!]eW^tEu@"GWZ8$*LJES&3R>**nn9F#<t#gG%r+A./?&mQtUsms"<j'hnJpMf%Ej&KaDC%-3d/nA*2>R!OED&lInQnA:]9uS9$,%$MBI'[po*$VmJ:_f_mH%]`O(!$[8mcpKIR0()37e'TOJTBP\'UL1q`7ZFa4+Pq@Y@iI8la%$GEP.IG&?s'$U>@b8*^Y;SIEKg4l<e$_VLQl%Yr?<+;g`c<*?9@,b$en8tX)7_gP]U]jO1JVok,'b#5e&n;TQ<D!m@W>cF4=Hmm%%ePd_#O<7\cmWGnLq0"glOL0_+E3]Z;;Al@)L08iP2+tOVA6m+&=Vq9U3]kscj8DL@?@"b6=qE;#M<>sM`j(ZV/T1dql;qh+A9?L<%o`fpu/MjX\`iS6boi;9]PQX`^Cqhh1VW2,"Jg#ck[tl8:LT8-'+U`oX8dcRDQY;M8*0B58OA4[PrQ1\Vik@QJ3;d.@%B,5d3<I=<%]2f*+c+0Gb3o^RY[>LY0CZp^-kXb?WHOZNc"eAMui$L='`YEU<C;K:Qk_q%UCsN"/cl#p3WN$-2Y+[YSTX-ZQ;aY2&6&0Z.m%K0Z%\/h`$g-Z=?E<Vmq$b&b<ST+h(i/a;Xcm^n!lW9Iu[(L7n4n/<55e5d3L8:1#XWPm62K#.1g_T1OA7"/R4)=0&-9FPrB6k/]lC7,d%f3dR=]C^<9D1nh[.\$+%AmUD7?p4ri']g7*!AOQ!o>;WNH0(Rhq$#%(`A5kAM`Koed]\$T8V7lhBt\$eZD/?SburLQO+*L!/,&[Q%<^=(/<Y-JPHCI4W9)Db\,C;p<Mhs?]R\B%"m^b,)G#Rg^gak0NmE;XM@p85r]kjI(P"^ei[b;(_e<U@p#4&kkd*sl\!Dm5_"0q_B%!`O!Q68<9/Vd-Lc<AD$RjeG88eNS43hVoXcH>SOP(p4I8f.Ac6W5MZ6j0Mq+BHGq">&2eHInZCo1J]"ef$bnXZ;q"RFt6UgUjcae%<YZJ.X.WZ%p:N5*-T7sa1OaFsjaD<cZL/34q49)cBr,1*Q<g(fkR>SKQ.F*nUI"/5JJUmjM12EKZT[dseF?7lT/CSt5olS39oM7l%-u*u1@#`9W3(mHNd'$-r"IRW;m"hn_PGi%;N9N!LCck9TUMYoDA`>X'?eaeObUulofTlQVTOM*?.#>HPhU8'':9?,?!([Ge\+6dA%-8-^o]f\B^&B*5&"FFp`?%ZN\k8=kJrpeok(D'DtV&?\^UK<<#3]N7gb&'_Dop$-fQq+p0c!9ted@n=nW+(*ZAB:@C@"o.9c_Y+K%a:n)X-eA2dp3"ah.fIG0Z`7,*0k=DP6S!R3S"qXe67(nG)&C;-BH@&/-nPdBjc?)Y3N]/17"7lH:J8/sEA]ATF4j4kAJJ#+<?*:m%cjDj-/7;KrV`Q/(4Yi8.D3U/;(fFm#.qVahB.Y?<[QE;3;4PIaeBdPB$XYGa)4AQCC1\+-=inaTKrYHjmo$d%OHC.,pe8PZT8Qu1%1<Qp-_H#4U;q&h/8@psbQ_A8fOjU*C9`8k@6!-m_[>NK$lLQpUaQV^\!AS1Jm4B+:+PameEO)uX'"QOrTm?LS@D6[8MR,FGm\;-!%X;*YM0jl<S+Bc5>IZca:C0E]3Pnr%F);;'&o1a6Tq_G3Ug:CZq5,R&FTN<^Y<`cc`?:N0[W`?+soo/5%,TCAu.;Z^a";f\S5GUos%ak!ocTq2d#Wbq(c2n/=;/7RgZVU,"l7m.jF%qCb<hmjeGS*,iL?4WsI$[U_'E'*G`[9O5TZ9rb1ol+"\mjs$%ol-?q"P)<M\8=C!%H8cODrnD?SSAoV?!SF"0i@I);?k;pL1:kQ9o^011:*UP'=k8-tb-h\"Wd6DVR"6gWM,ZWI=PpTpZ6s[0Qc+'QhqGcV*gDc*SWK^f%N-5D0?Ju&IWo//dd>7c=L9kZT4b9m[2f%l52qM^p_h=D'^U#'[L17*dPQrLN`e?AZ+V[`PdB<,q91@A'd^HbT:P%?d99,#RdhTdK%bMsB"Uag:&iHl)Epc.$Odss.m,;HP@]j`r_LnPdq'#GZ]F[P*NYGZ/#9hT]"2#pQ=@`IbKBQ?pb:MYV$qG]I+ps%<R2@?Bo'rgs)%W(;@4h.&l'!k,k$e<f&U<2>6Z@f*)pD'*$ZNM0IT84@K@d[ROg0hY:W0cc6cpp=a(WqFCtb<ob+I=53_$m(kKkp@X"U/'G0?PC>a%gOp-hnle@/S?<pfCFL7uA#;>6P`sms'Ma]Aq^mNV.;rq2'Q17eEnaJOeME$<kPpiG36ePAhFli"nm`Hq1Lr_PVukN@P77kkPT(l+%HQp,V++)et"4a(&N2DYqT06j2JIK>Y%jKoILZp@S%iO5?EC!`e?3l9:/`@O_?%=E>[2baM(CS4,WZbO+#[)=M_`S2BTGqodS0g<r%f+/sbRJ;1/9GF,o]1+E[bh#JY\'t*#AoSNn3=GZ0`I79\J'f[9q&7N,l%^pP5*bH4V5qBr]^S)8Ps$N.T+IoIAbkCKNFKAt1O1Pf%'^XbC6sAr#GkY=,Vlpd\@+fY\q,+?Jm6S5H$r5pm)cYJKA$pG?N??$2g95hADC-*AZ\X(.E3-KcVf8U.5d(sHUTC[u't`"+XK5?3%#oGj@>3o3olim]*NqFmgU)npo]*#bfeErLZX-pOoVf3]L1O<(!cms9d2_&u4MX,Ii^,^S(3aFh.cZq[dD!Q4iCOk9BlCDgj8<9$.%/RD$!,P&VOqFNZkDWO"j=_\a%0WK:a?IUQp%r[oC!7@.)/k_Al7!!g9WZ=qc8oeV_e:Q)>HdaRUC(D)R2<Ic=&JZm6E3`NuF/jPd%`\*$q)*^`@D9nLHTF*%C8WEIiLsbPF:6O'e7o&ZD.Qa1H[p^%im@e/s=$o`":<)?TilZ[tL53j<m-EET+`b0cdlI0Iia,p>+dnoZ%?lA2E[SeTHV7-?uERs5_CA,;fXmN:B%\PW$oPRu0[r!0uZYDP'3'bX'mAl[NX-QNXq(TE[dqRnH2<8>hC-&J#\fE7B2d")Nh.aWH%24Y(+lItMd<RYZ514;L1`mo076+o.6]LauOeiJf7<plrU:90[U[5,%CC-&IZMt4Dtql$C@b-amilb9C`%%_OJa(dZ;=utd%d=#!C%Bc1b]rOl7\BamZ4AE2LHl*TYeF)L'1>,\=IU7^RcW1BsQej5^q.D/),S\B$QcYC%N0Xc*]h)Zs/QJ0'Rl*eR`B%;!,&XI;&eT=sp%E,G8SX6Htkf_/WGVmT^6[Kh9EC-&J#3d()+HSq?pq3Z26A09?D>.&Heqm(Q+SJEspVe,7lRa+5Gf,gsVZteh6cK!YB!'G<=k;WH@%SM)lTEA9![LcJFZf/T8;>2bZVD*bgmI@jT=2'bQX@]T+c%)!$aGVVG8<l(RUQIL':k8#$FCFi:e8d,R5<R9BO=s&nR<FG'5\W-AU%CIhu[a16nMHE2;=g.5YJ@1;YT[jo(K8hO[CUp9XkF.kDs)V_>&1353$VLQtK"uU2Ma4r,9F(NTBhu&j'I1:7+@=?en0m<he>h08H%/3O[%G^m#<d+s]q\l^,7m98:SiKu\W)9%NYO8I>L-lO(IB;JY.@!'U5XaSr7+0]W`.!!o0*GWiEUZYn,WdCeQ3(r.2.Xj84U4fD0%G4/\Z1TO^5Mh1Y%gcMNA87usJJN83\L&Lpr.&8ZTqeNN;@Apqt_eN0i+==gh9k78[e=W1nXdlVLFl[j3;>j#:ctP]`8oMBJb12)J%*2oOe%Fs+gDQ(Q=G=+5=mY3LMfNeH].XWS.O.Mo/680,0a+<!8S&*e'j=-fK$tiWJ`)'FE>H^rWHtO6"AmSSTE!!Y_YZ?->YtT1a%a/?pXgA4_K!E`d@Ob]k'o)g\td`ug"mF"GbGMfGfV1nMI%@d^nei`4<eEAja+\a;G\F(F'ejcgS_+Ap!42DJEjk_IFn#![M%%G?;%@V"_r+nNjs'CW*l6t-$C`ETHF@lTt.F6]9*[J#F9D.f\/-ZR%VGZ4`R>fa/.$8;0\hR,ZSf<8n"MFB8Tl%D-t^/Fie]<0"jm=`+=%c`Q'bKKB9S*1q5[O35M;DbhbBR>?pcPOeEFQ_\iFh8ZeLI'iWO?':J*-9"-IcK)W>s*>0ur.I/4:Gmo%.XNW2'"2T>8$CJOCYK*_%-FL'9l\2b6K8sQd^d8U4W-mAf@I;7A<d";:cab6=2U,iJ4X1$EfgB1"5bT-fN+4S`3;UsTPAdRc4VL`&N9PedqK<=)Sgd`05<JrU%0mqV6Y9c:):&i$b$9,ae&_$V^'l,8#Qt[Ge>"+gdY['^7h8&ttkKR*aWI1q7VRBC@oKH?qmb>dI;!;W$Le0^-G[5;4N8EeLk)C?J%;NVm)>/k*p0e<G0.`W*H.0N@]M+,JS;:dP@q^se/EQp^qkru(4o9o:4$15;=@4#EFeJ0$T1%cED>:,F4P\+rV)]r[/s+]dtK&PC7%]-$e"=^[G+WTr/AUHKMZ@7jPmCfKFE8M:b:hZI'\d5&%W@6Qm`4%Y98o.9EFEu(DCa(Fk@1s^0,Gk7Yk%sA>7I&ID,3#aYgGar:*%n:^.kl5[7`D#CA7%qfrMES@b86$G9P\t#$"ol.X/m^6@5?L5l$bW)J?SZFBpd]`UR*:UY'DPmp#bhm)VC3,PZf]6%Al:sR&Nk#On%A=Y3N`9)ubD^!;0W"6It5((mUFDCgcgq'=ro@6?5ZNq(M$mR`Qnfp5;:0!%H3aGNAdq>Gu^E6L=K2pP&9q+l5:602hYF]'uIB?9/%\SoTjRg34%1Sq/8Z;.=>MW4+lFf.1.;jg'<`1e[h!.PW=0[jgef5>f,gJ6C::&BC==b7L`e4Da<9\/2A:+$c]IPkFnqoLNfSC=ce%7b]8<jQU]b;p:9"<qhXmg#hIlEa=7(O<N")8c#hU,Z4YO0W9u>_WV^mJKERpeuIo-m`$_f%b<rnWU<Z&6*ig;XclnZMjnRc1+3-$%5C%;HW\h%&R_h6j9DgVH1$>ulH]";/feaY2Ou5,X`A5lDn'])KA><$frB0V)nm\h!.n@Uc^,K)lY(G-1`Tp%/m(?$Z8hOoElE+T>%q9gAjMk:rtQ`%igJGOVm7X?TP@?h'lm:H%ifNW&#cYZ',f35K:n@@+SAsUto7n``(#VFO+>-/SsNEQ=Lr[ocQq(^EsOUaHQ=3\/a%C;t>'WaRsTC0r^$KljQ<A2(4!B9'&?=?4)jJZMNCLL"VjlnHG<Ng7FVL/;\/.%<GD61'`s7cM+eJT9JHO=[q!5;U9!+k`@]3<p1>%2m0D@F5@Va=?<8NqA7at?hZPc(;+Y_OOj+Sm8+.geG#E.S>taWl'DJ>6pF,2L$S@`YW$1($``Rm:;B13`hfc>2#q67q!TOH1HjX9%qBXaB@P"f\N(%l?Xd'9tH\[csCf:LN[0BI@UO.n#0aj[&IB&#C#h-(h9/V5brU$Wceb%=k!L2tJh4b8'\;"L1?#7\65S^?`7[WN=%@.bqTbDCNJA(t#b.S+#F"1VBAV2L@>:=PKHaBMUEl46IS.oEEMP4>Wu9'&3QHmmlA-aIT;.%g(;XFJiqHs0[,r?'0pINmN1%cnoi%Z>2[LdQNg*Y9\"/!o=]JnnD[op4"K_iVCQA4-\(Vq3=#]b,<<1^n>Gi(S*it[k*dKl^[7LO(Uhr\UJn)jP&@pTlrNL:H::T@FH"(%D)KZ41X6>Ae6$R1Y+LS%<N#\1qeR\R\UMP$+l,\:_fPcu-mY>JVtY#+:!`L=`5t*5lY!jd7$bC;l!-F\Q!AYqf8imOl(rGiqm,7m%I`>;j5JM6NF8_%np"Sa7&<1c0N$kF76Zr!ArA;W,r)E8>cLj!MEMi=YBI.i'Q65?,+3D10S^-ma2KX2/B+O2%)5$3'i=i/3ch0((%F`hjnDg\^[eugId<55!Mj4crG]Cg7DN1jYEn)7M9irp1NNp`I`oeS4jeYl$pl<HR@"Vl?`TB^NQXj?ZEhZbGmeW9,sg:BC837lJY%RFtQJCYNq/1tQG0(P5%H]:\D%]]!$sOh1M%IZ"!([8[%TSo_=$\UMO(UaNJ8HENm6XL3SBpMm@.n`oTJkOIs/'G';NI(RunBV4S!%Gr:BN\UMOk`;7)_2`oX;fTR[?n%54XB7-`:I]Ci?p1N$Jq`39SGeI7nMdY:\rJXPFgYk9/%5qo;S]A52_fWgqrUt7QT4oiniTUg;%kPB%9'VA"8luoPh>-We@<'RWsBZG2m7/#%keSgqW[*@DH>oqbi>X'GlkN*N!qg1?TD]a,*k3)SDX*`[q>X&gX`O!t$44eDW4]`Qb%qJBRJ0:qI,3$2;;WjHcjPL6@Y##@86kZg=m4XRZ>CK>8pF8_%V3j%M.[QN/;Y<4FPL,&!O:MI9qWSI;S^Wkc\D9qlR.'BsVrH?jW%-pQ>0Qm6D_PItMjqADALi_&3jkP?&4`(Cej[r_M,:\E3+a0n%\cc?D:50Q49os<r$luoP(P*5*/r=#`B2`TF8fJo6tEEYQXce(2_%Se<SS#1q'd/SZtM@MdU>I&NVe'femG6H&<8;S./g;cfKK2r6(.(0,Z3lG$?%hAe&ahYeZpH""ZC*XIA@"DA*@;P*5Umi[4>0SfPY%ZZ618Y014KQ9(b"C5_nX?#U;B@"&ar37Gp1qo]fmMu+8skFq.?mAffB.IYs]dF3[,I-GWir,(ZUnL^=rC>9mHSYJcOk3@H@!]F](%;>Yc;N-_ltDY.rA<UD_CWN2B.mp./#X*ut@DMI1P3HVgCHS9a$n*^FPkPI"-IJm+=SUA_1:V#TBfl4Rco>m'S@+q6-SBTC4M<Ckh%^%8(JQgX5/d8(3^h`3.2k@a%j_u!WOFKkT,Z1"J-bqV>%Q=]jR4jT?'VcQRfqW_i[+.`YuX08U?iUU>u@,_ZidPC](nsq,2Sq/-s%>kZ1%mLo![`Sf_eV"2+#WK77oi;1mg@Te*<\Jft?ST^hS+NZWqY5Iaj2R:?]B]H.9K`'nVDA'^)gg='0>&tuG?$uj:]Z8<QqGHfo%S9NO'jU9[1j8:a&3kgRM`8XT]VO(1';*4bHCuOCj#Q/k_0d"+R:5/hq>@^p?k=U"LaMm>[3EG3A_4;/.Xa+VqP4asti@Nrn+i]qU%dF*IBpF[7cHAfL:ZkLTKfLcYPG'T5ICc/E+9)R_lQ\q?*nYr;<?K(S:Y_$N1jr]!t,1_!=-!S*-_^Dpsk]a1SGNJ`b>^B%UCsKo%%*=;mg-Dg.o2oUFk7KN4rddo8gp29qIr"8:O#f,9;@%L+`OgEV)&;-gjrQp7N+XRn]HLP!hZ.p%A:&FE]r7%Uu?h?\q_f6iUI6[]F%3Qbkrpik&*Q2,gN%<<gR`uL)N.NbU]R='f,]^cF6B1KT74,7C6>2c&t.4Dqb3;jOE0X;(;U[p-biQ?dc)D9VOg>[$7gt:a7c-(%A%Y';B<K2\A<)>Gd/R"X*,!sM=^iC^c&_H3&=m^tPKfJc"BUb`Cr;`\dt1Ac*FR)KNt_qYAdUMd^EE,HNjf_BEpEfIg@@(T4\@2u-u%Th!rU\nm<Lk\AS-YHjaE>!u">8:+c-7nJFU2k21Db4Co\@IB0:/4n#>8VF(#?<'iM!ZP#<[I"2M,6Jkp*A0+]f#^%GD+1Y<`,![n%@^/&]H"o;A:4@S&\Y!SQ_,]sm59r^.4fdFq,2qB3OcD"o:;J<j-[a2TT?b>B!/fUu)#f1J\N"K3_QU$'2_=Z=ajY\T5-]_WJ;=dK%mnYrop_:Zs.d[$L"nDBEpXQAGqnr"Jo%as0k:u\jV"ZHIMY]qh%i(I)8"@bdgua27Pu[(?cC?YD,O,A&iJ=N@<9:21S6.V#5%Q?e%TuH@,CRsIb?,+ri33)Rr"l>$'G7k<-UYrs%7XFY-CC))"FSC^CLHc&$GGD>p$b.)fVu%\)TT4`^pfL=>![mi5n.K$U5%m@+lIuoh%;niD,OflO>h;H15+]%*8:;il6:Lo9erbSF'23Tac'>4ZV.DCn"0C3n2Kg9^(j=2I`KH,'`-P#qe%I+pm0jDHic4*u>8,;\kKFdt;%&q-2IaX6F*KoZht6b_h:O-MHPb&Z2<`4<gA/L0U-$+#<./U%iTGAn"K`%NO<5nnS1.O`[!)Fm%f.=E\b7esHN"\nbHWlK^#fB9+)%(.6Ms]*)L(7T!Yjr1<uc/\.UIdW%3KQ!$KPRq(\hL`ktu+JR_50O!Fa"S^u!lBSu$QtJ2UHDWA[ELM$J*[?hXJKG*SE9<4='L_\?%%7EBJ5[XS#rh1<t:kU/:r.1VZJL`B$&6EIJ+@Ys;B]r6)IINI/qV0gZrU"SG)I?3eP/9M\]rF\2JM?8ck=+Mr_.+1`irm]?+NI6T%%L'mfgq&Yq')ZK<*LTi,nlNK7HZ'k8.cd!,0[01lR$!R?1.:@>8R.=07f]co0Q_U`4Z<JUJcck7U[f9(*XQ<eNbPF[*Y^?T5<`R>%iD/4"UY?Siq\CcaT-7)-#gYma]ZH;O%W86>k]r>d5kPhP;0#-'OMdtMbFe"g6'2]f8P"C%N+@:;o+-l_',6t57h^a]Y>]^-[dPso%,!kElGZk:uM&Zg_-obL1hHr8g'\Jq9ki2D?7"PF]+Feeg0Qu;O'i@eQ%3Bo+-jkP,/O#g>?bcR-U3K@eF]_3SKE0rBn(%XBPpmJ6%i!8@]56c?:&Uqgap(AOM:Df&l8Ytr688`PT<5Ja:BIpUZ1iNG53X/9+4V4`;BM538!5.D1$ioqP<Zo2r\g?T!Q>NAle^=m=K?#GI%D#gQ3G;fs5_21s/%!in%F08rGk4>'oOH3fZ5V!gNO]/KLEb_s;<t^>1o/N8)K6U$k@4KeEjS<<l\O*pL7bBpU0Nr_*3@u15']"Ht%LrDZjP4seD$h?L-,JUO-jnu;PBZGUXIIa9o7B_Rjns6ZcY:5MMbmO8e19I>00rp*r6)Z\okV9']WFf)i4fVXq1N>kRY*qWZWO+dI%b#'du\[X,6X:jHZSYgt4o<8^c=dAd)fe$tpL3YZk('.C/b?uhF\&aXF0P;l10m!U`TC*Pp7FiE3!+H`#N2]cd5eV9#&qQT!^)K$@%)P[orZD$:C`X?!b*Lo;_YpKgG_rlVN.\-6f47!n4i9=R/D`!WhS;<SfG;0I&n7CoqS14%;JL$*^K\Xf"%Edsa8_<`(Z(O_qPYp<t%j?ao!@\S["+f('fP/J7/@%SSj/d1EUI#'G\QUq=g,0t$JF8CoPM<CTC>f@CVeL/+.o81SkW][hgLgEI>$a[]8ek9,:&Bk*j:<4r2%jppW>0lqR#QX:Rt`<6oDZmaQ-og#f0+Q^D#='/Znm#+7AI^kNX7NqiB]b/+k`/A=QD"(fk4Vi<N0AqYUOH<=$3sW.KKS;L*=r8Zr%qhLS,S?.6Rr/i6,lNot1D435uYb&2V$1r6>a%+tJa2*=nX*6dD`Tk"/+cE2]*qt7uPtdkC<;=\'E9'i5C8W8?Hu)qMlJ%ijf;I\[%CTNPNV5IW?Eg4hQ`2i7jl7FA/K-/tpPa.\7H%,*2+gT(85Y.'o'L3DgLZgOMct<Kno*S@SI@0/Amd[U.'L"t(:Jh1fFRfNZpEp"$%HP[@k8PGd@1#f+81-`dm%E86I6oNDQioip("-($)A1hu3-q:Nd;oid.N_*DZkhpJ*8CM_=/*)psf4i,Q#Vk=.S.(/iRLt_ApSBdi%?__9Apo`Vr9EftV4SZSK-!e>sb1U7^fnW!uPgk4[PDCM&f#/ZKS.e&p"pq_]+\qBoJMkmq@:p80hSb)Q;)\Wf8;"M0BecNM:#frt%_kjj!1EJ<mH%:]1ApeRIMAM[0K,X>I;5:hA!oB<?Y>eYFLk^aW+a5=?fhjlLEm?&/YCslF166Kb*kW1PekN%AS$aQ16o5aAa(+gR%KOO5@gXWeu^Rbr@_hm2f40aLLo5M2sktUu!^YeDXCK[0N=$QZ*d[mn&\45HT4;f[C]@1*DNh7=)qacMt\kaH[Y\k9)>L4U(;Z'4R%8!V!Hdrt8FH-FDhT&Mk`-W2sY`BGQN%UXCDEHnXX;@``Y&7,/-$p&d:FMm(PHmh#WbU#p17XE6`OaJpIN'G:2Shbj-I[[d-0KnYM%:/+%PPWeDQrn5gjY*rO)PEj@?OIn^*mn32<-O)e^'sEg040cN(>>+4`?]k_@?[3ngBEm?)%fb?h#n?n5_;Pm2%q'i&n8dLoE032M%p$nNh1E:$JJ]Z/p_q,?p+>;]<Xg$e*WVpB\M=%.\3cBm5PP3DM$VA1H:*3%o*>ZW!5mpL&8^kG+6rq621'eZV^5u`JQ%F_ObV.TO%Lnq9q#/qNm\R[/6MT&!CECj38Udu<k3Z5Vm6bQ$W=P$\-9/"Bj7]oFk2+AoaZL5nMS-J`/HU`U>)l$^>Hh+n5r((Ki#]([M?`o(c%I9"!n5UlMjW;\?qf+nauOheGm.02]Ii.EA*_69f0#G`)bPueN^H7aplTai+Zkj'f&\a(qql+tsV!Z&o$,UaMIUS*CF2k=GNU0\2c%'5C.BK0h5Yk>1qmT$P8TSA3@1PD;^I99QZZla]92WHV32lhumR+Y@pskOoHkN(b^*Vs+973^3?fHmPdKY/sE+Yr&`]BC?f!A?pm<%I1Ru+1Eot!3INtH^IYT;OA##s&q:H6o&_*fg';h(1&<1`KCijV.8k^"rZbmKbW5YJOL?s$@<iI?d8;EM5a90BC.VYs(I52b2u1re%.\$j@)7?<[YRU`l3YU+o7tW4t7o(jJ/e?1"CsRfUT+lm:G_rGg['?&c)?pn8>0S2Oklu!N!ID'^\u+KVHd8&uC?A'hAdHF%rCWSH%QnI5;IH[L?hj=_0g:m[RF[t8Nf.EFu(Hf@j(\3rtJlD1Ne,AP-`F%$9j-2*;Z`]hY<M2Nh(dEK#)(&*lpok/>2f.\Rqs^majQNC]%TsYUHY6E:,.,b=^["LlNCr.FK0S6B<:OR?+<Pbg1[rAn\3T8s1&uM\)FdQ:/HD]Y[a703D[["o]V_a!;[22T"LiU=-INpR;q)h2]%DM9=VEij."0(iAD%60743FoZKLR3pP`M2"L="b=0'Y"6bZ04rj=9Q'q?$PEQr54[)KWf?:7Q0u)//H2S#7&qgZL3%&c+,glH)Cds%ko[i1.M*+$F\W&oFN\hX@Fca=-IAsgEY=0JT0.l@Nf/@VaUuhC`kN_0pj[)VegBd)l`+==s.KgfWYplH5.XC\87L:"KQQ48M[>%j%27/,MGhW^<kMe/mG-oiSP4mA\2Qno[:"aH#4Z_ciZF.*JDu/FFd(fSE(Q&%K,(VCrFu/^\+Q0=KQHo<0J%7/Oa5)2n$lM/G^LP@#%dJ0npJK]YHr&9?=RPF4oq%uK=n,2?es7i(^DJ3VXrQf<l^A$)@gOo!&r?2%:?i=@C_Q1oKT=Z9AX0:!%?UI)dJITHO-_ER$QQQ18%2$a`-FYa<InFcc'X<IAi^N)^2]9!!T-f10\l1_nu>4[68`e6O!+)B>hNU`96mlR.kUfHk"d(s@eIXZ&EZ`NH,JkbU<cT_AoNG>Y8%\bXg[refGHI/_uKi4OI(MQdJlIe>UhN,bJ<;tH_D2nui'mlpQgDLCW:Zp>9sf/G"UnB51slp&8K(#T#W,?FOl>MJ'7f%h_2oG-8R%_gM@9^YfhK9+g%s8M/cr07(T3)d^;=i?P3UrSE&%o[@[Qs71A`E;PN26r\EI+fVT5s&ED<5%5qdb2D!'rJJ*k;?,`\?9eB)^]0(M%2taoVX]#a37/Y0-q^m!)cTd<,IT`kgo.aK?p7G^eMVn8bFT.g97q;S3(&shc-BMTu?1OQPRs)\hS\%\sH/4:k;B(pO_9FLYs*qHT%qttC3BHHKmL9H*)Umi1=f3IM*a<*JVn_:g))d_pQnXC.kI!C\rhX&=uCc::n#WH:!YLqFZOlQ,>FSVpG4SI%[s6oncMGbM%DEY=K%H@>1MrTj1$elQ2TB)fG*Z^7i`ei3KXm?p*dq&SAZ?ajZ+H1Dp3lsI57[coANq.>,HBD+AZ^ZRq3l]h@Q^>9t1`cqBdmli`QftTOs%CtKVk8+plH+.KTT*n_Y(NuakH8*I"6[d*9>W3889.RmhDL@eJ9>K-R&2l*YRHu#e$a$*C.p!`s<4*U`$mLpG"^A.\gJ)h&0GFs7<%O[&a.B7Kr*W)15'[pT*Yhu<E8bFa:Woj,)ZJ(OT/s51hEM#BN'1(+9Ldso.0P]cH4BD53n+S*Kq^AITL^A#+_5Ps3-r:nI=It%FP%JH#,#T)R^[^3BV3pT",0XS]3i5Fnpe^6l=k:S5I<ou1b+(O+L0GN]#*nfR?"rpF!?5QCSrCrQ'DlZHJN%=,H-s8;Lb^AGs#re!H7%rdF/+rpd>jdm)Yof%0ZpcY)3$bWl*YK`:L*huD+&?iBY?s!,2Q:[`=O#eAcXqN.j\mp??b2Nd]07o&e=4^>CTq_B4qE4,S5+$s`T%jaN28s*U0V6`d]PfB],h3c!6#SjU8riSb\V^X)j%>Z]bCq*]^'+o2P@G<Jc,53;+(oc3Y?7]mS1UGRG)(RAN%.-B7M"$Koj8@TjZ%[$Uq6h-sm)`m.?@GRZf5]"/c#i>5*[RGEmL6Y^\J=.)j;P*3#Rb3KM;SGI'gbnDDsKGlREp1j8IQ"*S?mtHuaOZeqm%*"h5gu\l:%I$Nk.oq@Am:Q=ql_Yb2p0l"Stooa`uo##Up`g#08RL81=?ZRpar9)kq.G'?2Tq>+3Us*H2M>;l[.BfO-n!MCp!E`nk.U9g?W,qas%oTVIB0e$[WisLtmjr6Z[I%icW3X1[NY)"![\-'mU?O>iL-I&YJT0U0:mknUdAf3u#au*4"?U-&]+A`R>e$GRaCarcC!m<;-q`p_t%Jk#JQq2)XmfSOBc4qYf1V:is&j&!3TS?k/:K'AlaDS;a2Z_lk'=@lQU>bp(YNAO`6i%&Ti>jt\XPL!@5RIchZ^Eu`[bBXTP2(@po%mPrA!Iserb5MZ3u]5RWO\4_Yh^!BL"C%$+<?Oec^%;E7Z&le.Dok7j\qBY&A3.O.Md`"U@k8__qBW.%dY.d#R2Y];%8@s]-e5X?.%H-CKDE[isD-WY`[Je"?8'&o_4fuhfbg#_D/M2YVDNA/C.o_jMI*bhi#l\RU#0sRW2PZ]eo"-U*%b8KCQ7@Pk"M0Pl^CW%K5N*nTI%4F(_L-OdOXco2Ra->RGEWd8AcCLX?]A8[ci3VQo&`E;)rQ-#).BqCd7"RE$AR0gWi67Alk><&P0=:Mh?V!3!X2HafG(%!FRP\4Qe%;?Q`u)N.oKCTV!HNh@_#T!\6L`'A\.rd4!6MIAaEJgnlc[#JIVYK>tjK-Xq<<lS;H>No:SXJoCA)BN@E-t]p$2K:Q-3Y#`)pj'%#%AgB's/BTPs%BX[&@.9#,j>dUH0rM"CcH\W7GWPm"VH7E,?0H?W(dX?EHH99-6K[oJ\E5H5k"-,:4<e;Jl%n[\GRD/I2d:HJP!tt;%MA?t*G91hHYdLi(qT06o?/-]8(o2eaI3Fpq>`fs7lPn2L334%[@LK9jmjPM2@pJENR*6UE&`m3V.F2<!Wa/CO,d\uJ:5NulpSqAf%nl8.>EZ[T:EodDg"'0)..&S][4ho2GMIq/iQ5V/t^nHRr_<gM>[Lfs#gQ:@01*7W[G;Vi<r*jNNqssa'#%H_Hmae*J`=$`pR5,Bs%M!^oZU$8-WStm0CW8^]\I%_:ELT>"sc5\Bqd1sf4?`.-OT'68CZqW3rQnt[j!r9?`XIkqFD85fp50k#&hlC]A;R.?NA-J/gMuSR*%NO$LG8@57"<fbG6W=c[cjpS3/GaGW,M1q&HB:FYG5&Ih.'$6auQS8p$?\GgHhu#FPm!0hA)nFP"E>E)sVS(k(-s4mWRjECs1dijM%,&?@Hji*/3PQGmZ)^e[&D:*3j5V?n5qKL)$q22o!LsItS+Jn_DEOmna:04l`F!HT\-8W;T5"!n?Y_[bgm,4S?`nX<YF-JTi30rJ]%cA@LBcGhk'l_6h@D/k)8MVgB@dd7@AYo_i;\Vk7XgjjRmq13deZYMo"2J-R5jqRa"-q!?C:.B1#bkkXhBs(6%)08^_ogiXe5[=3K%0(5?P,IVgaGHRKV%c#h[r8'Hg4jP2h=VP@mKd/#5S@93@2pU*cd(8*ok6;-F\[SCaJ;tWC`X0M>,/L[,:,/*Z@M.og"f,2NcIj@p%%(C;<3>2J$F3Xf)BYrI`=8D3Q#LUgW9UK!X`6#+XNUp/RDE#iJ%^10%(H9X!R,D<6$?ec/A@uuQXDWWp]9(HBN@?XVY5Ke+<u/]%%^>"/T*k'/DZo-dKM3Cud>]UkuIXrk5X=67+VCH;RK7pIsJE^.,i/=1?/b.T#9P0>dkGA?!XP&qUD0fRjllKJpGhsH4)e?dhXth)d%Rt,83=LUc94eZoCM><)D>(>crTB:-Js$G^106!4B3E>c7C+E,1B<.d;Du;L=K.-e\Ho=ne0lfA1D:P8?N9<;u-Jrul<_chdY"!(l%28HP(\]hP:'4?mO`&#&IW9G5_=jF93bllmg!uYiF;rE!H;POdsee8t(rG9niS-Qq,QAbq'?HmQO:#.Dq=ruZ8PW-FI2SbOKj;V4h%YD@QXGeCOnUoOWTlGXuhY9*I\b$%QfL1lguG$-%rol\fP6P4H_iF]aGo?FNZW<pDQ34Y7uYu<uLRH8F&O(J-G3flPGE&Y'tEX+>2%DEq$GI+,@T2;^"t*X=CEUY>).7OC'LLbm5J8;bQRH/."s@-Aj%nncdB,Su6>;0\7qjagtt+?B#e6B+otAnX^EL0%G)9H$.C@o>>Q%$pi9o:Sa@;ee]UJMVV*aLk6A!mBW'aSe$o*_Po7mAB8o:K!R!kaqP?f7C>0@%]p38pLF@@8s-J@<TX4TPAUr4S,Am.MkgN3Efjr<%dd&ITXH6,AS`MlZC&^:5gdkt7"jGbe3Nj^pL%Li0_Q-Z#-_O.#\MZsdi8sl)C8pP?I[6hhR%K,5Dmus-OP+:2Vja/`YSZQ*epDAT%[FboOgp0a+QcP^+ArVV3fqLs\d]"riN3[.*/ZsrfYFV[<$rb`#>bLgXq9loeZ;U%lK<bZG/:9cFe2^s$r&?;P+/p@B=K]*U*8,5j%[VAJRJi+`tSL[da^^^s1Y?!8rS<FuYD9"O+F3B>\0o&AYh8Q:(pM/$GO%o1\j\u69(-YQo@Q\5qOq]NZ:=_P;iKYue4In5.B;^DL%C#]9Vo+NG#K00/PWL&%[XUmiQa%hC(Su8!G)]7T07tXq/b3:C;Y?l8e-ef0u2%lBK-d,d$O-Y?8M`pG#c13:B:#[F8mWMYNqf=?@%];rcHf]MnDF+KV>'2\-d=(@hSV4beYCmNKqEO+eafTsgue``Q8%f7g?@QP.3+b0TN24]3>2X7UW/r0LtV:mPti/(9PU%gMLp/Z-3%D_-*k_E+Z!Gs3tEZ)^r5A"N,bq8OmOH-_Ji+WWU-]V1'4&TQ5>b#rMJW`qZ,;+Y[_cbQ5rNa@]8>)I&rW7I"i_`Hn2PG4R#Bg_`%%]<5D?*s]nIfq[>sNn=-'5+s1dCY@A/pp:`P<0h$ed\uRBe0#d-]EME%H`R%RN,G+7_%+s3W+<JTX-)-s:S/igVtpJ9L!c\GST2L4%2DYXjKtsPi46]KA?+WX6"C"W@4tnqnO_uY)!SY!Bb*+BG4[I"#fdKqNIUS<NNgAHZ\1@.OE\H0*)AM12b30Q8r06$JNRUPQHD$7d%2tFn*p7u]@k5(S5Z=!R#%-GEl"^mr:-8KcFG>^EEJ;6_B*'cWIDqN$lg_r)d>1TkKidmUT4"r9=Eq7Y54ZBiUSrJ<j/2j4@;[Nu2%:$$-+&]45Ym0G;b`WL)dD;"8ND`YCI89R!d0u4>QK["F3eOfKlH^.I"7tJ%jr5RMS%l.@ce(^V9.:IE^/D2tB4c.&C*f24tVB79Y%*KRB/n!.ioA8PJ6o\tuiO#H`LDC'"ag1[dn=^J,XY&UJ/?HF=rZa8:^V0JU6=<3B"S;JRu=E0jf$[;^a7p9Jg/dZh1eF(K/C@_T:%RHk?ZXOm!XMfK2:Dca$4!]OSG4=C\VbhW#+H1%D8QfeHl.hAb!j9\A[Anoi+#)HuL"0%tckVG;/KA9\c0(Yo%)W?W9cUtN'Gc!6E%EgsCfm]Z2/?lj9a5ic_!,U;_,-g4"cKm[9Kg@L".Y0Pol`u8r/*DmhtAak&JVSQPQbRm5tF;B5!2?KM(oFAR`Qk,o_Oa@_/10U3T%nZJ#@3Zbnq`."!_d\%5Xc'G]rau4YQWDI)uS0Ve<%"^DJa\@%WpC<uG7m]%VQVCmo9'&F&OR_UT'PVXMBK0W\ihj^N-iI`0J6_b`%Q([uPD,)&1.5.!7&=sS52FTJ<AU%^K$&`@Y0q2HsN@>%>D,CI.`K9h#WK*CLRCaalW61na*c<72b*q9#Mm$PnAVLnEMJ:A-eMia=%be3^9e4,*9eK3@*Gs]Z^$DR0gE=,cLI'e4d?)2@Tdb7,:^PV2'UGm[k3u#ujSqH"Ko_=0=*KJ`[<fkn6J2+f`K[Ss5a!QoSZ6"n>%SR))tL>&'$0.S513I,"f3G>o?!-$$qK)qCZ<$X\JLN)?QBdS$0K`REb3BI@MaKtm&6RG\ITs2PlFcs,C<03jcg:-G\M*>QdcoI#4%=l5l28M$2g#eS;.l6XpNW_oP&:%PnK7r"n@6AYg%%$HdN85i@qIGFOCc9#5N+J$euN7Eb$j.SNo58SU&mA<3$Bl"I$/n]%<Ht"7n%4m:KD7;9A?G1#<@0O#$dH'gL'mVjjLbpJ12\C6__!ui/,Q+@8+jXN+oKa_%kZcYc"8t!^:ec:J.g+@[slg2GCgGE)M)em3SdSOfa%1=VJ`?DHZ%NKi\F^d+k\L6G0=h],cfZ-O]`Vr&p;ENSJ$3>JMY-^V8H'<nHM/kXV2m?/r=,!AN*:1`<d.!EVK\gmBC8kD9&?H7Zc%(+L%iIOTp.5/(1T=S<CI;6&Vr79f6h$$1GVUcThcXOUcK/U;#YG6N4k[BMR2<Q+c<Zj.@%]0t)F.O@Vih9?O?Q.a]Rb^[fNX<oim%*IK5RW.03D/]ZhSF-WM\Gr^[pg1Ind"D.5QTr0;aX(.dl`0>8OgJu<I*BTIDWgojpk'(<0mj95G'[@Op3%3n%q41uWn(.SR'M!/a%A.Tmtljm3d9q'L-3&R/Hk-Sfr$_oSgE7*nqF#'4EbC,bHG3FckmSQ>%G>`2+^8D>-'[(.LF(O,%*3qa_64Wm+N(.sWI<eqa@Zdi'%\#%d$ic_mCj^7QuXr"'_G)]rhng"D;/oM6_&.L1T/@HR?.k%:].8[PYc,:@A%1+f./;m#e!e6M]Cr`iJ"rtl?=5W:(9O=^"5sFAP%VO6#WibA'OS:JbV=\;9/Q=]ca;e<IRQuG?$gY?'qp/3>&8(Zmcm>PtD>!9uX$$t[@N8sA<?66&;9F$fXW0q3G-)A*=3%N//:7BuF%e1R4,J0t?FEpa01M=21K1jKS)O_g>mEriceb#)W"q(5:9AJqm)@eO?$=IlbE"6uuM6:b(_lopl4(ZgtJ<Z\jCaD2KCfMRcLO@D$J%d/4lKDEA<MHt$g@<$T7QP5>6?XltLV$R&ZfQT(]e-CTe'Bk-B!j6F8#-RKq[^;f5D8#u+$VMK@#XWR=Mm<ro/B]Q!rVJ;*ZLDM-p%bcsOMHTIVL%`Q[mr+;19%bNZ$RVk/_^]NJP$$pt_YRoM8:qi)s,jU/mM"lW[J<QpI+d$,#Y(j<fTM^k8Y"RMC1<$Dq#+k;k3J]LP%fO=F`hlgV:55f6UDS*pA4g`hOh$!WTj.$"dm6'$gV3Impr8f&b>2Xk_EK2%%qr?C:@Fh#)2d[O+G7E25c1DNQ1>k*gUE3/,I"FEi%AcaaDLuqC3R@-L8F]"ABl:;Qe(@hSRGFA)Zb]5/02gn[aOh`3g+ea;VA#.-a(Hk;t#DD7c@qi8C@kc'0"eep^2UEl,d"n/>M*(fQ%\SkEk/8G/YqK1hE'$YaA;Z2ek0NK><O-9T1,p_Z)16GOIW[BQ7Cd9>?$PJB@LXhECh%Tm%g[E#i05tWtSAUWDH"`]M&9cB>M7p#i%n@7On[Wh_%_auq[EHZ*bBOS78?&fQpfkhlumdC5j?A$/Y^_.WR*KR;GSQonk6a/%2QU0I1]*s&!G0P^d.]MS=g*JNu=k#,UEY?(W%$\OXW4*?;ch?4hhk#7l+=ORpMQ?4ilPhbiOY]FC7V`D!5(ru3R(EYe;r8NAjrUJ-Q?)lHVkBT(-;Tn\67$]Pp`q&ML-$q8q>m>6!%N3.-@0OR`_l+\\*i-fR#.%kj?)b`X)d%h=+VMP4b8\t_rY/rQ67`eQT#t9\?'Pcf')tMO=jKGUHpM'8d""GQEb$n<;l4je8:nCeb%n]aU4KWp,u*UqFMQ\.sY#A$&E&!-P*/I%_$_slIA_X[N5kCP9l3hGkP[EHScfioW^15#+20l>k`Mrp1KT4P-nE2;+A85iafDVtrm%pnhQ1>2jK)$huD'SJMOIZo-sUE5?`\*09C4-$12ZG/.U]j\l7EPZUuLal\iR3b*'GXKVdG<hNGD_3o1iK5:ZS7WJ\Q_sGZFEm0LC%mGqH)b7D&:\K=@q?bl7RTXfp?Rl[o`_0Z?+M[(a+CQFS1".0HgmQ+_h!-k*1k>0JmQQ3])S'Wk($Fg\#)@*XDH0kNMbQd;Gg>9Bg%#MB!JW&sL6>qT$Vn-L7](`Vss98=PH)bn?Y@o'EG*=Z6ZR]-b@\BP&O-njEHJ]pdu+GAn>C<3Eb<#ba1-m`_]F3k\.\"pHZDnZ>F%M(Zgg;obRKV3r/i@_3%<Ta.;UWoZ3)RAFeu;?1!>Go,"lO_!,mF9oKm#JM@13/]r6>n:SY9I=Vgl4D]t+XDc1.FJ6-3rQkhN_m59%9Do,=),4^VaJaNbg,iP\G)?E*g2fDb7P53K.fqsCb73Nf's8gG/s+dZG6:[c/_#_p!.%X]687E>&Pgn4C1G-2[OIX)IK6]#j.QWN%_OSZ&Hb<o[4uK`bq8;^sWlD<S;0E*78,FE^+\``5V^alGApEB"($J'[:3fCdE?H+Q\krG2B7)7f*RL3l!?,YZ$\/RGZNeMSPlngP%ecR!tOP(@>)=:&N(C%(><dUCsoHi`2j:T3Oi8OBHfsK6Mipu%iP)f';3<#aa%"!`?h5+L(/b+cTj=e<ZJ=V#*4D9'%:NO?f<-;[&%Ob`:1:i,1S[I[?!2?D,q9E;#aNcGhETG)Tl#-$fS3ZXC"JcL`Pm`X7t"5m!QJj$IaIAr(</@?>rZL#8Q!30.Eb=Y5H2hck!aUpcf%$6nQ/+5a5H`stEkG>FDU?>^lHq>nZ>&9o0V'7h.A+4QX6e8?nX@#Y.UErL$!=C<d#mU-I%?hq4]K`HD69lY]9RG:W=:&oh,8]7m2%$05.)<g\2`MAn^c+A0iX(^95V98$/Y/HdKPA)1lt!3NW8U/HEmf![pM'\Rk(cN9bYi+M89C4LH*Rcj+=1H2_Q")@nP:Lf[[$k0pQ%G?(:s0AX;EiP!sTpP52"#^i1_Bt[Vi&'tru.hAW.Yj#.P.L<-Bm:PFP80$lUZ"ku6GkD=ll>f<4]&gEDXVS\Z>bG^BLd_R/3X7Yu%qO,i.-m7B26l2\5V</'!S.PpI@SMYVgJnqUJFb6^2p&69LF$<iiQ%lYkt!M<j%NiP,R1?SS"qpDf#8mpL(F>'kuS"e#L!G,6Y.hg%`ZY?'D;9N<88M_$WqImBPA"B3MV,HeQsLsgf4dL6&:L)lGG+O?Wr:DkLP"0TYG8G@4$]'+c9m#=bW;hQ"pP>41V.=,.ai8k5)7B7%DN:HcR?uo8O6Bt]2Eq0sZW?lN?rSb-#;O`oO`(/V36h%F?$`jek]C@j7LreH(aeHc[JmCnT[Sp.&OC`$ZYC2i\3fId\]%J6&OUB>%63p-@#,j!ERh]gLN2M[Fj5CZu6HGp2o+JQSB?s3`r58H!')b/qLU);>:6dAcKD0n>(98Se6/65]5TX*b/_8[-9CfMQK7!;=j"50K%_Xp(,h9t(r(\(UI@F,663A?+MQbDU=H:tQMbMo$.XYmG2=p,WAGsZj#'H[_mVDk?l[Y).RTMpdO/?J/&(6sRiVju0FgEMCok(LGA%89g^/?Y>`EHbX,S'SS[<B;dnM41L1KFm%nV!MG^"ihZ6DO0.9gR<$[,Ap"WO-]3Zrji&l--&%%uZ#qS^]r'>mCW/f\2\1>,PC1SO%g]Et'qlt"1&aHu'6%mC(:taqNla7=_of@"KN@u1o2oDa3k.k6I'RXT:1ak:nVi\+6Pdo4IltE@g5P)bVS8rI-Y7!1eS:G<O>Es]6%"b$L;C#%/04N%q4\</%+G>ZgS-M)"7pl"_VAAb*=huGk:b<o5\o.=&.Y-Dqh.S%>IppQ6ePWA7hs,ZQ3I3A.("u+I3Nt*n#TU/aR%,jX-%#o#M4c=7Fr6CK4q2G>8,gHjNn*h!dfR2!9u/6=C6?3=RtE7s+$KM!o,FbW#mC"Wh*l=JX/W&t4p'I-<OCmMEemH?YAJ3r5b%cj#`03GlY["[L>Q!?:,qUZ(po"uO3<Y"gj_Zp1pJmAB7o3ed&T9m.'gli@f'#L$,9NCc-I=)IX2S:B!07O9S-eXX#R?"-G`8TVD"%U=!\BpHVl03Y7R["<_5.fjK;C\SQ>3).gQt+A56hC4?6T*9/8F3LWfbTQILe0]_Lk.i(XKVZYSuAard$1BHMioU#6$H#J$XLg)!a%M!1H@gmn3jl`4:#&&FVD2`b6%Ksbg`Y/@kk@g-t\.U/HSc>Mdcm/ch>5*1$n&?ojI`3GeSP;omo%eAAZ\m8\FoYWM0DNlr0Vm\fK%U!#cnjj;7*%67!VPD;#d_`7KqXSU#N5DSDl)JG#/F1@'M%aSJBf):?`Ci0Z9d*,@CNnkb=nd-N_dKu*<&@r`.:$i[(J/cV\M9rX&%m<Ae"IYHOi)kGHtDU'a4`1YAkqZ,BggI(<6!&80Y^>j!]jTCTs*ljNRI+NoP26%nUK\)d]0K.$=_*7MF3[8.+hD^'7=7=c$q24^?%!!eIsXcP1G16lWGQT:0\7PfTniX$*b9q)]H@=9.bkZTqgJZHC2*[&:("__p!!6:J/63M7!Ve@6)J?H&7?4%)@-(h-O&-p_FD$(V7%kYNjeHIYl'QFRP,R.<XcOb"[-e_1Lo"%.ai>+RP^MaG@*Ds8>ZdEQP*Wl;)XGX:sBs+bWRa(n)E80kZZ<!t[p&4$h/N1bqC,R?ZO%)WpN]+A(oT%o7R6U`(8/T]+t!<_d.KU`c?H[d'!'[MV`MAp[q-AfDB!Yq0YoPu)+TG2+(1'u7HIbVljrK4o[t8)hs17YEK+V^TM\%ep9G,3!rC"":H.o'[9\^IQ/<?$h>uD^tP-aM+%mUW^`>e:,TVYY4Dj"]];>d4g4Q3b)Ic2cjbZjAEi5dPL-`!ghq/rObH*!WQ1Jh%U5$qh%U`^u#AQn>lGgdoO:XZnZL:m@+X%2s4-U;<"S"&Yia`X+MnpsEpZOU7A61cbL^sD*Y^"#DN67\F'A2<s-``SdfO6,&,h:[R%%KJ>EB@fl*,clZE"(R1RSSW.Y.@??@[_<H7NUJp[GmbTs!&18l?RdgpJQLQgQR3*A&UI5(?OB:5Ll-HH:pMQ[\0_:h0StLL;a$m=%:`5<r[L@!5=9+Wu[THWu^lgfAGF_UMp1SS:T<C0<p=n.PUs&4=#n!(QcYL`?"uBS+l>OR"3Lm=:X+L7CMKWCM3Y.GuI^GeXN,H=>%m@#JmgfZ2Y"I_XdnT"bCA')3\Zr[Jd'9%&^=h"a^T4i_1Sn;\#kr3]I=`t'g+\jeo_4j]4P9,6E\*#g`d2`c`.<9ZrfaL,B=thb$%!m7#Hfg&];J75=$!3tat8jL_d8A"15o3u#ZJP&nS`_:^BOJQBY<ua;=Z@qR/=>\%$f!/aPV7;mj%UE*L^\)OHgE"d2-7qV)QGmlC%P!U,)C=TQlbq&?tTd@l:JiWbbQUt#7Dch^','ce5Q^fN#rYGfrQ=`30VL3)T19tkpF"Wnub*S@e>LAlm4)/RA0d^Tp!$-V,D"4$m%=^%H2\D,=#e!.oD5iu4+[n+;?j>T;o_@>ZsK7!,g<Ys!uqIUR`jEQ&610[Z&@0[B`h7VN.p&S@[jOqC=SM*'H(kA1dbE''rUg`G(%bGYG,nQ]`$:Yk^^F*[hZP=gsuK*NgokTN6Ja+_Te[mW4_FfHuH4*cJg=S'TG<um681i!7Go)P-kc)J^(0JcluC)[bG7]&pmG4ka%%d=ZE/pi\o0am)DkR`saoM;mV$W`6JQa_$c#PP.?D<6?`lD6)Bc:7\EVjO+)3BN7W#Rkg3@$8-ZG!6_H3j!r5@R:1]E#Y7j:)(L=@%'PQ?(^)I(-@Mb\m,->.RcIIg/90H7o"O$^#m.>ikTN,uob^p0E%p:UlX\tS`?)i7WSYhKJF[W6_,2!,".=4T))9RMN_@kD/b;d/R%/csIhA_A``!Qu>Q(6F<bLVtD<)"3_V$a8[FBSX)1C(d!IP/tY=fM:,>V5tM'+=gHIJf$l#qb5Jt*=lP8eNA"%R&NH-_iJ7:bS:E1%,_gDg+#7)$#Mo4>U^'/ZD3.olR9ZN&lj?fSdTE_PJU(2rLt$9[Vb=+d8T*)/\`UdG?c#>P%l!OS*YN"d<TGi>cA'QK"JCN#Cd?0b%&nu?.JfQhp4.'fGN$-2Q;%KLte<CD/5(P$c6KF7!AP;hiL`&7k>&+?sWe25_$6.>Z/WFpP8*[l4T.l5,G!g&&#$`%mi`^2<H55>3%(B=FUFjeFWLkuM:A<8YLEuh%2!g/'A"JSi`TrNd=WpH]7=Z-`:+ZrJhX0W$h/K^p).pWUhLu.aK]k/+Ci>5\'-1-434Ofi($\:Ol%Rg#9UO<3`:[O.=3_I!!f':;fuJ[&p#mc&g=8g?gg*:cqiZPN%(k03HdVp=;Q!@d$rD\tOjar]I2GUK1-LMKt['\[\9"IW_U&di[P%`j.@^Q5a4GSi26A'JLU_%C)5.!PoV4!I+n99hA9c:4tR#[%[!8!ml[R:tLi+/G6b<EWaB[+YJ^)$9TU`\MB_noh[LH?:nU/l6WdY%a:-@)L'[p-88"/m#@>qQ#0\1t%kP>VLU`?(/M/&WGQK5L%J+Jk+3t:^A+Q]U7`iHR4(*ADl][k?l&ZtMC7o(3>Rh*.&B4qD&0d.7%X+I0cRAT12:uF/ND`eI!0OD9SjDG48obJfY2u.'6#T;!k_,^fDPG>f!CrUH;PB4>^\R1pDmRrkY)plZlc^P0s4O0(-E$IXUf+T+*%/kPe89oW$n:abGf<0g[*ln\nilB@OS&njDIj.PK7AP2Ft6RoWCL,.W/=C.Yl4FT8)gh8(%4NbngMtDf-Q@"[FA@KTP<ZXQ,XjFt3%nd+*\c)P/q$C'fmVZ:J*ilLYk@N+>3Ol2!9ZFAoTZ*_60[9*2cA%=TskNi2\9#*gdf`<4jSp;7Y)O$VqOdZ_T13c_idn@rL0#^^Y%">[*bbBbLog2Eto-DFg%*&Tj)aK?]U:kulM^_KUlD@dC]n%QeDP'25SaLda>QDbs!Vn<!]fd1G&3[)GrLT"g>k\XcWA0r:>!27@3%R+/`O*&rMB%>pQCoT8c(o0duca+I--%[#=hl.>/T4*JO[\PAFC`.F.C1bBaRikr)SoSL4RqRkpUbSZ:BDQ<3-J<qB%N!K(K*sc1B%62GN6KTU#)8"."gcR>@713[,])=f_\et)kQT"6,4!U3@0V>gQmQ+E58:uo!s7MeV9U!#L!m5g5cC&,G&+POt]:ssr"'2\'-k^[f7%GEZR^F(QjBI[R]Pb+>HCSWJL[K:^pl#>T62hl8!0J-+lP61X[X=;t9:G".JqVK5<6^dkZ?kbGbMN#?dg#6;NWjkHVEUtIFB'?VZr%;3s^:epiTS,E`bT(W_-Hef`Ui%-__S!mX%]^S4c29&HX"RNOk>=m9Gn&qdbUPutbP5a-p:9T2CA+T&ap*Zd@b/i%hHb>^eTGkCBg%A-(?\;Uu!Zo!Ko>ZOS9%M6!*ib5a]$bl56"i21H]Vd\l'j5mU;Wp"&U4h-Bfj*WS8NQQQVq08tZ&ucW$kKB1Eks4AP^p.KTYbf"L%&6+L@9>Ldpi>H:[6"Y]+*&U%(bu3@GN&*/"<IoWoI'B''a7>R+hJX\tYKb(hg/(s4H_;m`in^#',bVH+[G-BW5\-9>7sf-*?=gTi%-J'JTld*QuAWpJu^N,;*<)oFWB[D4u;Pd$8?UjlDr_UnQZEGuS8':SM.C'Dplq@b<7c,BhI&L5K"Bt3J>:a%^+1a)f^de?0"^)Uf%M0[(FXDsGmDHEg'qKf^,J^5Y<$siEtKbAA[BW@']8)J=`-miFlah/p6T9LYTfF/H;a]T#9nL%&P18N;<g#X@<,b&[GRa/5:IB^ql%l!n8#jl-b>/"rDMRb1UpSP._KG`5:[.G<u;J#-`cm$'I/5*05,cs05<._R8l?&o^p_]U=s?)<B&X;Dt(q(%V=)9]!`XE!usl]021%pTW>=GpcAFqG!C[',.t=*S=_*RtGM4Gboe2RuW.'^C.kkrV1PGnp=Cq5JlHIi#kMV",Kfl#^#SEaN\PhF;>6*R(M.JP#`ST-o4$e%=O&1X$inZ&;):9;J<bqX2ba:F^HGaajA!Nsfb0No'bp^#m\SL;c<+PUmi%NH[B%C-_)=MG+.Cq-A(gBCf^aU[6\oq@Y7P"fFb$$/%ks-"YbdSknH]k];O@rm9X<,L'Q^b&@6ouOG2%^fEZhn`DdP/c5[p5sf"/@pk>tnoT0gH7D+tU3GN7I7lmJuN$m3.,UQ^3n<)[<1J%R5uULRI!MM/0!eOlLACa_*F5dgR$30cLDY4R]AFZT+1,p2\&gK&qIHeTI`c+<BO.g0/"JF[)S:CM9X3r5lrM(Q//\lZZ,=nB;H_O%aHr5RrUp$X95dA[IN5dTZ5a6f2:n2VY[*/=ZfA8!-n'e:r3L1DPIq"YF*nt9!EE](dgk@;3G^cb3G`VI\QU6RZXq,)?A8m<<BK2\%^.*#&)LS+/?'DMZ/_pQWj0=UAiE(49#_8pc#L]6qjWf3/)J_9K\Z6r&O6)5YJ0iB!8:)l$P`?/TQc\alCKDSKg@;bl/.G+k!3U^7%)q$A$2n827j7l/necq/sCdZBWHbXf(?o,iG8#:Y"Dlq<ZWo^\U$-ukb?d[jk4ef-'jBO=l9YOeiHX/?iZVFOH^ajYrD5Qe4ePS5b%"3TbmeW8fXA1lV-^eI[L\SPb&](=Q\jl<Rn&G^)ds0g#rf$^uiGa?,<lOLWa"jV)ok$MQ+>oh!3keQicin!c$@"*OIm9r='Zhe=t%^!dP-+cgK3b)sMa-rS#:]`Q]X@TAct!<=Fd'a*`PAHm.9XG?0uKt:Q,"X)?Am^gh6(?W'+;!-VC1E5!@?[52R*V:cRI/t,+)(2k@%!uBY"/sK7hJs'lO40S]5:[>Td$:r2daC>0H*]]7/lNRC2<TbF)fc4PZ%'GU.ERs4l*a%<>#^s_^''rBZ2Cno$p/8L4Ms[^Z(adsY%\84_VkpY#f-'mO5OcA$CUKsa0>J/;`G!V@JR*Y$DNd3&343;-Ok+pUPr0WTT=g$KdO)C>K-t?dkj"*Qs*Di.V\Y%+%"NF.cDg("j%8_eH1(0K"=#Hn$!"\BB`_DY_.gL8t$RnLT-&;%O_C"(qtV09>2A%,s;<d'b9OC]@".pLV9]ij]>Y6H#9Do1K9)d7VsOlG@&Ml%I9%5Q^m.%@H[:[!`\.#Eg'e4<H7mgYi6+S*])9#M=F^5fO%ljI<KsPMB,#+,H'i:Ru/LFu+`[QgeSi#;Sa[,q^66OE>khS05r<k\u,)%-.1ZS=Y=#uKk;?=2^cZZHd4+eVXJ`!+Nk)Af3tQ*_[-fl^9\DkJh._q_[1:6(Ot,.+BoDGEIq_*jCSR=H]MeC$+Z/o@0Pt?S';9M%YZJ\mN"mo7=URAApuZMspg:Jr/+dt0B/9UR`VZlk]NtQU$M)cTfeQpC?H3Cl6EK.C:<^t.fmDZ2+'Oc2Ju$nbM\RN57(`FGe%KWo%@)TO@3E"%]>KLYt)5kb_b@1X(E>pEQ^"tn&JDN+0-amr(#rf!?73>0=De7,^95JN;)WQKmPV4'%2Gbt:F%PbLUA20mFpCQQGJKBq%2m`l!X`F0tTt/\fJ4fl\k08#51n6],:=W'oF/3uT[&s`EQ.4*<f$-eI!4oH`/ZBbYcL"06lf>32r0#bSYbZFI8SZ;D]<:Ubg^YIF%RlF(%^G_RZjRu'02A\`;I/CD))Ip!^"l4=,q._OmI02uWhp@P@pPYA3No:E7.N%hMJLS4V,-*$(HHJ%Sr=q&)\K*^"/X1=umC4,Y%`op`1m%W>_[t@S5AF_%Uj2-?#4_Z,QW,g'loj]N6N.3&3@!/0/QjIgoQ/KB-,Iom,U,u<E7sAQZ9`hU6h-]pHQ0=6-V7dqRrtbp.%jpjX\.Sj79!*m+`@G/&M5I)b#,ZF78LmAR3h?oquXifA]HSUSk-%Z1@YC[MgkCBC)G*)@<G`,"W0I>WPda$6qec^o0ZT<?)-%6Bi%;//;$2M\!:p4cmI'=lad04mi08U:ChR;ph]*c4SmjoNZSl_3pH@ceD[7A>':.s\59knLmanh;OW&.UrB/m\Mg710=UFlEmrPCpjZ%nem/afl0H&oJ$#;^,B2c\9USeVY<qE4RGMW#-6O/9\PE1'^n,!0-O8<.pf*V)d\imf)a&nHUCFbMRT\^*r>C_GNpgGOmB<cQ)YG@%#L9XL!k=JqG:B5JE1U7dA[Or^pe*M#k3iHr5BBKU$Xgqh<42(ub7Q;4WaE2ZGOSU:>3hHl(PqK@Z=hlhFh]M4*a]F4O`+X=opUr%%&V-F![[8p'K%;gj1f!q6P52ER?$9Z"k'MEeU9XQP/QkA%%N'JP8i?4>G^eQ?36^!t&"0c3V=Y5@3,aoZXM\$)VM7Qh7Li@]?Gt:g%SmH?D4mWdu9A9gs2)-i/lq9m3KtE3PU0BrI^bY::-qX7WVK0,8E<'O_5:ZV\U')4RJ8pG!WN:(;5`F63IE]l`jdS<]<&mpZ]!>oC%ooRsm5fmW=[md^]\eG#D=s5?=oZP8,Q7"I+1<(-dM7.dGqMN2Dfm`a:Esn*D"^$QAfXDo4MZS"67)C[n_7L^[S"/BAPk4Xo0'3:6%jDV0b`cU5`R;S*T2?da)5sEWBDbN)\a4]Q9Yj3]X@[V-10E[E+k@*-CAkuq*fJ;8*nZ&EK>,E5a54.$kDL+8=kd&AcpT!;KA\.,N%@;o3h3gF3d6*g64h3`)AZ@4WC\j;L,Skk[:Acp(qZ_:sA_-8H#<G!,En#u,uFG%S=[CA9RKT]oX_75/;A%KMORTM+naool;SEU6a%']P,:##Ho5VG8of\P+pl=Jd#Bm4W%/fTYP(;bPBr1#;1f=_nfZqM.:H+e=('b&!'/&shuIj]-9n#0mNo6d'ShPka(&DNMUs83gCV%S)1T#^.^K!gQLCYWa#Co>C47eFfUO,.HE1c]M(8ff9]ijg%;iP%(MEG.$*JV^WqAN$Yqa;eeo$\h&<(Fh[%sIA-:6M"KXs5TGF*_%`W;7H*3]p()d:9@AnI(K/2Q%]3B`/5#tZS\lQj*FCVL$Z]'74V1RK`LR;N#3bF*81:l/,@6f?&_$E%/WXHYk1"?Kp2!Ze((+MO(F%Y+:^!g$5(.Oo2glB=gILC8W]jbTT)d'F;e1SWZnoN6D,Cee)j'k6SSkFTgJQh@u?c$$&ll3oE^/S#4d9i5s7SJ?LA@*rs^9jRVrU%E&tJOTjAQ/ifYQAf'Plg!/N2ogh&KN-SpSC!!na$bo:OiH8%hhSc:AO;N'l9\'!n+G7Yeo"sdK@$D3lo8G@9%HegnjS:<9>Ib4O*%rogNAJ,7js?iDDo"g@eFbX"P]fS.PQZN_UUnE6^!o%cP0o,mo#p[@/'GE8B@TDj[mOoheEVSdADK'nQFO/5KUd:6)"r*Hl;1lu`'%/Y/kOlZ+2=</&NX*E(t=s*Wu`G[0+c4hOUF/meo+\kGmih^1^^Pu+cHl>&7gETDJ6&*)(r9rF<Q>%XTZ'`;X.)pG,&r'HJ]Bjtl%%kdB7V769jT5b"X4g^`o!CqUX&+5%Kpgsb[#[uEt?)h?GpQnW)=M#Mq"mso5,m1j%c!7#g3TVs:@rp%W8L7gg-MBOWW<;7WS&9f#f%L=QV:6/lR2e:^Jm%`WT,As[B*nD2/APHST`hA:pbd'-%p_DWWY0h<;o9FP09HLaAJ9T3j`TS<JmOh$!oZ=5M-D.E:UZ&gRR]9-_Q%FJG>AWJ0\G9Uu1t%#+cHSoS,9A_Kb&0R%<o/`7Pe+"==2H<_cUO@HAAoA+t<?AVaN?8jWuJGSK=jSsK!mhjDE0+7TZA4?N*ZI75#%.4NXG`F?DQ(X"HT"<WTFLUj[#G:GEI8/fmmfdd;rRMBA%Lh4Q,c,L0'ar+%gQN9%_B]u2'hl4ZKaKrO\64L(u%8uF>d8lL8"+Abi%mO?9`)M9#!\aYHY-F?/q*.'RFX,3F]8^nC3*?n;#`m-7U>bGi/k(>cPaH25j:+\jj2h`BlOLiV?3'Gt4.*;U_b)A00i)Jghaj;h[%e^nqoBDSr3!'PIn0'MH)jWkpL$3To=`3/5!O*erVLk!"T-Af#-Y`n-@c4rspKC?UA-pH&>$!oCtK+$',O<@:M/9PtrghT[(r#;@4%.IpreV"?l+P7jRRCg#+I1%AS'aa]QfL_k45BAT?:K"OE(^/&r,f&4=dO,:EmTC+J%b6gNG]Ycg=D^pVI]V)jO*U0\ag1j0/?uLaL%XMEi64%d,teBf_u-Ah6[;fOK\*E1`ja<n>f"I9R=0Y?rILNf^jGQMu<ja=S==ak(DiiJP,J^Ra2X!Y;)kPUG9G#De=,M4+Rd'[g@%<kH[@2W5Lo'plknro"@Gf=2uj`/XKli9^RGY'Fj\3JOVGB#V"::pC+*.ksjWlJ&ud;0Dt5jMdl$?:3/!Pgg#9]1:9Q>eQOY)>oTJ%KM;,qG?FAI08a$cpVU8`:K9"%@@31HPpOESn<mC!5/]1R)+rD'K/?`3n6D!AmBPshfYVo+f1j`f+]r0%#UW+@dcfhR50W_1OQEEi%Or+FR^3;;LBPb\6p0C@nnB")2l[@u=MQ<W-%eKt#]2[uQcb>0;a.CZ4HT7Z`>.Xak+F9VgYW"o-nT"kc!X-6!Vi>)VA+n@X-.Db*%",0DB.mN"Xl$9(Q+*%lq'/oLA9rjk_&.$%7%M<<dm"O&Y?7$69q_rWR&*K.=hF3gIR5a=R0-9hppRj)9K7!#<E[ft5Dnm=UoOdc-%+WoS7Na6PBI_qq.mp9so)mbq'`XSjeSdr\/.isDeK?ik&+^Ek(#!ouBnUU*sS&g.c9<AN'V6:hlQM.I#<*`/;g'CJI2ftKG/4S\@%kd7^dQ^)@NJkes?'2D3X1^YhR%2pGr:I^`D.@MVKp]ilk_ja-RM>KKF.>N+"J/Q+_D;oQ]^5$S%EG]uZSH2hU3s4uLY8@6cG37m&%G2"4$5o8Q8!@dV5@!j!@$[."%Y&3P2O=]:/S3;"^CJ0ShXD8%LBfM.=Sr8S.bCPDOP$BA$`<MAu6UqDo97LIc_n%f0]@Vg"V3;B-%k=@n($+2ElP!CCM"%9"'GeS51p=Z<Q=k*;l=,ZtAX/n38!W/j*G:MW!G*PU`g(NJ<R%Y,Ag3FtGEq+h$Z_cdGjTQNe?0>5+Hr%*]%03<A=1],H'o2?$r[?GLf;3ng'S:3(9a__?b+P?o2P)h;pE":iL,nR*uF[3iuAgCL"l>#rR<9X/f-6V7F&o%#"6hiZtS*>nAktaij%WG&-)5RJAahJYg<V5qn@'nQjkXKK4MEQpn<=lB)raqh[7l'62N*BM45Zj<6an`Znh$+!_!(WhH4GS!rW.*252r'AV!*,O"bDK?Y<%<JP6O=9=-pU'J#1(S<7Ya/?-+W'4N%RPrR^ntq,#Cm+6Z<O`?]IGGJu%ZD_23Ym0eLd!LH5C'7>fb1/CWWs;!IA2$uXA3_&47ld#%SbrrI6i@U7C;J32e[!;G,DY\GZj=Dql0TXAjIYd_[E9\@9Prls,_tjkea(0dIUFj5G(b>V2r,EWKHK-PT8P)]VPrc!_XD,iZs$;d%pZ`'7aE.'0n6_A=#sXk)c#7a0ae?stFW5DV>)WfgINLZ+>-r'#hT*pMG+O*m458J'b?O=LFh;F%YC##.N<*t*N&P7.bjiT3_8]`0%=#SV'Z.%TpjbrjsG5?QWI1JF<4`,J&q(]+Vq([-M>E2"8.u*5:aPi;.G5O"k_dUO;OHV)6,<G`U8#;Pk[@#;e3W=5aZQKadp`GRQ%eZh=af:eYPYs0310,(,sqoa8!h%olT?75#-(B6J3AdScH*"_D%3:c$GWr\4_+pf+g@s/k4k]/>:"&]S)LZa1YQULM)j++qDgbfRt%$q6T$e)G69o1\0+3FKkc1,`JibBr;h^k80&DTFd[-?j"@!-:!YQ=GH4><;UA#+3Y'IMcH2G2D$`n/uAX&%3;t1?T*Q7^,u6kc;+;%_Z6*!.lL`B>"a_mMZMt7?sM"X?^&"`*i[r7c&%SY%IsslfT9>!\Zbtr4m]7jA3u+BIH[d&oAk8N=l[+;D]lOS=/XiRJ(%3e*eA5]%8Aq=0ie9EVkl^[cf53,QBEIP=e/=-j)tH[.B[i.4>#7dJ#s$-XGEAm6]:SI27fR_PgbNR].JgVdp0ca7NBB"'O:E_;(:92:KJ!XS%55birCOYo(#$[XckqR#af>c1Y98_!-W2V'p`@lUNFH92RL]4\m8KO1N?mAf4h<-kT+\3O2$slnL^J1&_H!9cpop99e?&O0tql&;)%n*ep'7D>1"c$WNuc-bc@_$`1q7n8;Y$:f2QYsZVPbUj[O7A]K;k+B&)35s14[^!ZnI+;JSS!bC(M\i28G%(+*`]h%`)a4;WrpnY#%KY_`g`FDGZ)sJ]VA.;6qrJa2<`6epGku/nNNkA_>J@s?B*3?7b$l[QXS+QA*:E!oneV^DMg:Z;7VJ!:&crV!CJh>jQH"0sfd9O4!%Ha.efh%I3k2eId:HTr\[;Q]@]#B;oa=L9$mTNX\gRC9NXmhoU&Lb/d3la2&QktV3)o5FTHE>4G.HDM>3!kRUu9Ik7iUP"`K5)sil%UR6WP9@*ukCSj#P89_J[1$poZdodF"R$1.8=LS^8$\ICVHjQEeR`n]dH3ZcQ7?fI[Ib-ZCS7A.(lb9$hIg7upiVX3FSp)=/K_=7b%d-Ao3[lmus1W!<WpNcQ%=*\q,a?5u,JrN\7DK[s$9n1O;0#.sVBc`X:SLSfehm*:[P)f3eFPG&h#p!Esq2U`4mrhW1NSRW^_s?aW%'oC*>iI'nd\Y6<hGgM5j'naT*CDfIlcb(l@V_J2,A(Q9gF(hrQQ49@5DQ$bFf7(msj8Jt?!?+hCB%L2Q?#P#E-bfq4"\gt0WU!*b%\N4b7:q%C1T?`&sqXF2a>V\!62kt*>MIaJn4_'DJ4PFK8Ta;.aZBkSPX..5:']T7Q!NXtXe#c\]?,G$6^R&-c+El/VJ9TrL&0,rq%m++&MrV"Ibki@N$l/lUS28J9RFWK^!(EG7&#a&qpEC`0Pe&*MQI+M<1g/cju?)L75#C]A&0$`!W'(5r?2=\bC;Alj)nbQR_.4:`M%[:ltk,"?/-h]Ff8=dP(4kh:0@3C!)hK,8m<EfkRZ*\g(W[F/ic@T9LqSmS\&\jHDDNk:^$f4!30CBIe!q_.<Q%19TN.acc[$SYpf%3A(RUG(ka+0($VpZ[.p%mp\9_F8QtU@hu*Z'XiZPe+AdSF=Q:pEYNVr"*rU)b^O\NaQWGVq;*nEbrZK,cXUYf_=sV$`3<%8&ar$R%_'3+`4-4C!lB":RhY(r/I/""6=E^3R6]5"jc#@QUL?H+1DRkeQiDtO-Tr1Z%*MEADA-7T!DTLK'HHDaSqp(ULCWWT\>A>g9h3lOV%'1+HhpV#A/im\;1$pm(hI!>2OHh^FRC9m0`5TM^_FtR+:l/m^9Vqu>p]R54nnGD%1?"^Qh^#aC/4MPOOlp7(Jo^n%aBL<U.JP_*6%JZ+0:)8=!kE4P5U@5n+ofIaWP6_8pLLnK7k#-aE*ZGA3XX<]bmEM^DP20gX"E"LI?0k!5^6)Jb5pBG/?LW?pZ5CCLOB)t`^kl=^\%bE)'7f:Kq8Ibl8diN:-9o\o2IY>keA>'S@FWU,=ogXJ^Lcj)U1h+3c]BjG?VEO=Y`_]&mNEF2js"<jinaj7536Q$6mjqW>:UEo"I%O'H-)bj&+uOu.M?hRmhlG_,fGf=`2B.,3:ZE1MY>D@INUjh\oc!KUk9(A-SQfK:`5>M]lk38Yt]%@T82609>F"3Q4_7^;86?$*<$%DD$EZ>8%_<G'CS&MlBWp,aCZJn(.U^:O<lLiGB7]p'kUS\6nZgYUgkeP>)M4Js^n$aqJ//\fQ(up#IN,:hM&$kmBkr&lGslVA%_d%>cS\5iGA[hjP?l$/4gYa2Q"![efm[3C<-W,cCogn)_KlhiGTD?he%V3m.^btlQE\,Y$gMaY]9r+[:u8FL1ST.8o>$^?K_o)Mc*-@%)9P$@PQG]C8GLLsH1&0jPA@#WlE'D2]2;u='mDA_C!D7Ti^\SVBOK_K*(*g=3em-=3#=eEW'(hU:?"NTrDd`!Z(\6]X+Jos,:#tk%ID[1)1(:Ej6E\!<f:a_uDSN??q"iK+'$A(D944jh#26e6F$nb]nK@e0T2sB-F;'_2/^Op-)D*A]#*]dc!^keK9ZW9tdg!@&E'q;C%cjf[61#73[O2F*k;[h"P(C,)pF,0%\i6E@a$hJ+OWS%/Q5';r!M1Q<@%&)&(5kXrI";P3+caQ_@Y_;TGV'ELF2)&[53ifr*,uo3?%-boIQN6/]ejpsufbdI1(;ZYV/hg#$'3"q!2SIsXV,-hleA#feY1.+9Qrs$d*^EH+r6h`[T#G&PX6Yl/2!Y3&+4Vi"Z_9\22\*>MP%mJRt`HiJh*H]Yq9fCpC`JbGb7^fLV6$:I/07?3=B-!mO<6;.eIRpt!mjAB'XPi<n%Xo(jE'm#,r)G,[)d%01A(3&JT6cH4X_+T#$%cH7o#n"aV%7S>h$!&=8oSiTk(03a<@]s/72j67Y[K-\HY"D`pZ.??N9M"%XnCc]H\DDXfg\%XK8ZoX^O@QB4o%2c"/>#nJ/N<nM&%M!*P]>*/9oT,C^7Fq)\#As#!^eK$_=5/3[Sc)HDB0!34<J^3%,4:q,G<ZU1c6L&@:ND#[5<b(&im5EDU42llldiiHjFiMt3gV?s7%)`mUQT_Hb#6YFqdBWX<`fm,lG+\YssIb"7SZd&d+WnY<lFW3C/JY->\hM%Kjl1N,-3j/?Ep$T2:GSfiKnSSTO6*H4Vm=d1F3VA@o%h>Q$_e%`TnjL]n<^A.\gJ+WBpcbK>Q[smZ2P>D2=bJ3l<cbKJMDa/XBp"eO'oZMaZlMesKs7ds+qsnB,rS@D5rboOMlDHlDak'nU%s7Cg?j<&rs7oo:Y55G0grnZE1""=6=dJ~>%AI9_PrivateDataEnd